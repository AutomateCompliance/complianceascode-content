conflicts: []
definition_location: /home/chase/_work/complianceascode-content/complianceascode-content/linux_os/guide/system/permissions/restrictions/sysctl_kernel_pid_max/rule.yml
description: 'To set the runtime status of the <code>kernel.pid_max</code> kernel
  parameter, run the following command: <pre>$ sudo sysctl -w kernel.pid_max=65536</pre>

  To make sure that the setting is persistent, add the following line to a file in
  the directory <tt>/etc/sysctl.d</tt>: <pre>kernel.pid_max = 65536</pre>'
identifiers:
  cce: CCE-83960-5
inherited_platforms: []
ocil: "The runtime status of the <code>kernel.pid_max</code> kernel parameter can\
  \ be queried\nby running the following command:\n<pre>$ sysctl kernel.pid_max</pre>\n\
  The output of the command should indicate a value of <code>65536</code>.\nThe preferable\
  \ way how to assure the runtime compliance is to have\ncorrect persistent configuration,\
  \ and rebooting the system.\n\nThe persistent kernel parameter configuration is\
  \ performed by specifying the appropriate\nassignment in any file located in the\
  \ <pre>/etc/sysctl.d</pre> directory.\nVerify that there is not any existing incorrect\
  \ configuration by executing the following command:\n<pre>$ grep -r '^\\s*kernel.pid_max\\\
  s*=' /etc/sysctl.conf /etc/sysctl.d</pre>\nIf any assignments other than\n<pre>kernel.pid_max\
  \ = 65536</pre>\nare found, or the correct assignment is duplicated, remove those\
  \ offending lines from respective files,\nand make sure that exactly one file in\
  \ \n<code>/etc/sysctl.d</code> contains <code>kernel.pid_max = 65536</code>, and\
  \ that one assignment\nis returned when \n<pre>$ grep -r kernel.pid_max /etc/sysctl.conf\
  \ /etc/sysctl.d</pre>\nis executed.\n"
ocil_clause: the correct value is not returned
oval_external_content: null
platform: machine
platforms: !!set
  machine: null
prodtype: fedora,ol7,ol8,rhel7,rhel8,rhel9
rationale: 'The <tt>kernel.pid_max</tt> parameter configures upper limit on process

  identifiers (PID). If this number is not high enough, it might happen that

  forking of new processes is not possible, because all available PIDs are

  exhausted. Increasing this number enhances availability.'
references:
  anssi: BP28(R23)
requires: []
severity: medium
template:
  backends: {}
  name: sysctl
  vars:
    datatype: int
    sysctlval: '65536'
    sysctlvar: kernel.pid_max
title: Configure maximum number of process identifiers
warnings: []
