<xccdf-1.1:Benchmark xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:xccdf-1.1="http://checklists.nist.gov/xccdf/1.1" id="CHROMIUM" resolved="1" xml:lang="en-US" style="SCAP_1.1">
  <xccdf-1.1:status date="2021-09-19">draft</xccdf-1.1:status>
  <xccdf-1.1:title xml:lang="en-US">Guide to the Secure Configuration of Chromium</xccdf-1.1:title>
  <xccdf-1.1:description xml:lang="en-US">This guide presents a catalog of security-relevant
configuration settings for Chromium. It is a rendering of
content structured in the eXtensible Configuration Checklist Description Format (XCCDF)
in order to support security automation.  The SCAP content is
is available in the <html:code>scap-security-guide</html:code> package which is developed at

    <html:a href="https://www.open-scap.org/security-policies/scap-security-guide">https://www.open-scap.org/security-policies/scap-security-guide</html:a>.
<html:br /><html:br />
Providing system administrators with such guidance informs them how to securely
configure systems under their control in a variety of network roles. Policy
makers and baseline creators can use this catalog of settings, with its
associated references to higher-level security control catalogs, in order to
assist them in security baseline creation. This guide is a <html:em>catalog, not a
checklist</html:em>, and satisfaction of every item is not likely to be possible or
sensible in many operational scenarios. However, the XCCDF format enables
granular selection and adjustment of settings, and their association with OVAL
and OCIL content provides an automated checking capability. Transformations of
this document, and its associated automated checking content, are capable of
providing baselines that meet a diverse set of policy objectives. Some example
XCCDF <html:em>Profiles</html:em>, which are selections of items that form checklists and
can be used as baselines, are available with this guide. They can be
processed, in an automated fashion, with tools that support the Security
Content Automation Protocol (SCAP). The DISA STIG for Chromium,
which provides required settings for US Department of Defense systems, is
one example of a baseline created from this guidance.
</xccdf-1.1:description>
  <xccdf-1.1:notice xml:lang="en-US" id="terms_of_use">Do not attempt to implement any of the settings in
this guide without first testing them in a non-operational environment. The
creators of this guidance assume no responsibility whatsoever for its use by
other parties, and makes no guarantees, expressed or implied, about its
quality, reliability, or any other characteristic.
</xccdf-1.1:notice>
  <xccdf-1.1:front-matter xml:lang="en-US">The SCAP Security Guide Project<html:br />

    <html:a href="https://www.open-scap.org/security-policies/scap-security-guide">https://www.open-scap.org/security-policies/scap-security-guide</html:a>
</xccdf-1.1:front-matter>
  <xccdf-1.1:rear-matter xml:lang="en-US">Red Hat and Red Hat Enterprise Linux are either registered
trademarks or trademarks of Red Hat, Inc. in the United States and other
countries. All other names are registered trademarks or trademarks of their
respective companies.
</xccdf-1.1:rear-matter>
  <xccdf-1.1:platform idref="cpe:/a:google:chromium-browser" />
  <xccdf-1.1:version update="https://github.com/ComplianceAsCode/content/releases/latest">0.1.58</xccdf-1.1:version>
  <xccdf-1.1:metadata>
    <dc:publisher>SCAP Security Guide Project</dc:publisher>
    <dc:creator>SCAP Security Guide Project</dc:creator>
    <dc:contributor>Frank J Cameron (CAM1244) &lt;cameron@ctc.com&gt;</dc:contributor>
    <dc:contributor>0x66656c6978 &lt;0x66656c6978@users.noreply.github.com&gt;</dc:contributor>
    <dc:contributor>Jack Adolph &lt;jack.adolph@gmail.com&gt;</dc:contributor>
    <dc:contributor>Gabe Alford &lt;redhatrises@gmail.com&gt;</dc:contributor>
    <dc:contributor>Firas AlShafei &lt;firas.alshafei@us.abb.com&gt;</dc:contributor>
    <dc:contributor>Rodrigo Alvares &lt;ralvares@redhat.com&gt;</dc:contributor>
    <dc:contributor>Christopher Anderson &lt;cba@fedoraproject.org&gt;</dc:contributor>
    <dc:contributor>angystardust &lt;angystardust@users.noreply.github.com&gt;</dc:contributor>
    <dc:contributor>anivan-suse &lt;anastasija.ivanovic@suse.com&gt;</dc:contributor>
    <dc:contributor>anixon-rh &lt;55244503+anixon-rh@users.noreply.github.com&gt;</dc:contributor>
    <dc:contributor>Chuck Atkins &lt;chuck.atkins@kitware.com&gt;</dc:contributor>
    <dc:contributor>Ryan Ballanger &lt;root@rballang-admin-2.fastenal.com&gt;</dc:contributor>
    <dc:contributor>Alex Baranowski &lt;alex@euro-linux.com&gt;</dc:contributor>
    <dc:contributor>Eduardo Barretto &lt;eduardo.barretto@canonical.com&gt;</dc:contributor>
    <dc:contributor>Molly Jo Bault &lt;Molly.Jo.Bault@ballardtech.com&gt;</dc:contributor>
    <dc:contributor>Gabriel Becker &lt;ggasparb@redhat.com&gt;</dc:contributor>
    <dc:contributor>Alexander Bergmann &lt;abergmann@suse.com&gt;</dc:contributor>
    <dc:contributor>Dale Bewley &lt;dale@bewley.net&gt;</dc:contributor>
    <dc:contributor>Jose Luis BG &lt;bgjoseluis@gmail.com&gt;</dc:contributor>
    <dc:contributor>Joseph Bisch &lt;joseph.bisch@gmail.com&gt;</dc:contributor>
    <dc:contributor>Jeffrey Blank &lt;blank@eclipse.ncsc.mil&gt;</dc:contributor>
    <dc:contributor>Olivier Bonhomme &lt;ptitoliv@ptitoliv.net&gt;</dc:contributor>
    <dc:contributor>Lance Bragstad &lt;lbragstad@gmail.com&gt;</dc:contributor>
    <dc:contributor>Ted Brunell &lt;tbrunell@redhat.com&gt;</dc:contributor>
    <dc:contributor>Matthew Burket &lt;mburket@redhat.com&gt;</dc:contributor>
    <dc:contributor>Blake Burkhart &lt;blake.burkhart@us.af.mil&gt;</dc:contributor>
    <dc:contributor>Patrick Callahan &lt;pmc@patrickcallahan.com&gt;</dc:contributor>
    <dc:contributor>George Campbell &lt;gcampbell@palantir.com&gt;</dc:contributor>
    <dc:contributor>Nick Carboni &lt;ncarboni@redhat.com&gt;</dc:contributor>
    <dc:contributor>James Cassell &lt;james.cassell@ll.mit.edu&gt;</dc:contributor>
    <dc:contributor>Frank Caviggia &lt;fcaviggi@ra.iad.redhat.com&gt;</dc:contributor>
    <dc:contributor>Eric Christensen &lt;echriste@redhat.com&gt;</dc:contributor>
    <dc:contributor>Jayson Cofell &lt;1051437+70k10@users.noreply.github.com&gt;</dc:contributor>
    <dc:contributor>Caleb Cooper &lt;coopercd@ornl.gov&gt;</dc:contributor>
    <dc:contributor>Richard Maciel Costa &lt;richard.maciel.costa@canonical.com&gt;</dc:contributor>
    <dc:contributor>Deric Crago &lt;deric.crago@gmail.com&gt;</dc:contributor>
    <dc:contributor>Will Cushen &lt;wcushen@redhat.com&gt;</dc:contributor>
    <dc:contributor>cyarbrough76 &lt;42849651+cyarbrough76@users.noreply.github.com&gt;</dc:contributor>
    <dc:contributor>Maura Dailey &lt;maura@eclipse.ncsc.mil&gt;</dc:contributor>
    <dc:contributor>Klaas Demter &lt;demter@atix.de&gt;</dc:contributor>
    <dc:contributor>dhanushkar-wso2 &lt;dhanushkar@wso2.com&gt;</dc:contributor>
    <dc:contributor>Andrew DiPrinzio &lt;andrew.diprinzio@jhuapl.edu&gt;</dc:contributor>
    <dc:contributor>dom &lt;dominique.blaze@devinci.fr&gt;</dc:contributor>
    <dc:contributor>Jean-Baptiste Donnette &lt;jean-baptiste.donnette@epita.fr&gt;</dc:contributor>
    <dc:contributor>drax &lt;applezip@gmail.com&gt;</dc:contributor>
    <dc:contributor>Sebastian Dunne &lt;sdunne@redhat.com&gt;</dc:contributor>
    <dc:contributor>Fran&#231;ois Duthilleul &lt;francoisduthilleul@gmail.com&gt;</dc:contributor>
    <dc:contributor>Greg Elin &lt;gregelin@gitmachines.com&gt;</dc:contributor>
    <dc:contributor>eradot4027 &lt;jrtonmac@gmail.com&gt;</dc:contributor>
    <dc:contributor>Alexis Facques &lt;alexis.facques@mythalesgroup.io&gt;</dc:contributor>
    <dc:contributor>Leah Fisher &lt;lfisher047@gmail.com&gt;</dc:contributor>
    <dc:contributor>Alijohn Ghassemlouei &lt;alijohn@secureagc.com&gt;</dc:contributor>
    <dc:contributor>ghylock &lt;ghylock@gmail.com&gt;</dc:contributor>
    <dc:contributor>Andrew Gilmore &lt;agilmore2@gmail.com&gt;</dc:contributor>
    <dc:contributor>Joshua Glemza &lt;jglemza@nasa.gov&gt;</dc:contributor>
    <dc:contributor>Nick Gompper &lt;forestgomp@yahoo.com&gt;</dc:contributor>
    <dc:contributor>Loren Gordon &lt;lorengordon@users.noreply.github.com&gt;</dc:contributor>
    <dc:contributor>Patrik Greco &lt;sikevux@sikevux.se&gt;</dc:contributor>
    <dc:contributor>Steve Grubb &lt;sgrubb@redhat.com&gt;</dc:contributor>
    <dc:contributor>Marek Haicman &lt;mhaicman@redhat.com&gt;</dc:contributor>
    <dc:contributor>Alex Haydock &lt;alex@alexhaydock.co.uk&gt;</dc:contributor>
    <dc:contributor>Rebekah Hayes &lt;rhayes@corp.rivierautilities.com&gt;</dc:contributor>
    <dc:contributor>Trey Henefield &lt;thenefield@gmail.com&gt;</dc:contributor>
    <dc:contributor>Henning Henkel &lt;henning.henkel@helvetia.ch&gt;</dc:contributor>
    <dc:contributor>hex2a &lt;hex2a@users.noreply.github.com&gt;</dc:contributor>
    <dc:contributor>John Hooks &lt;jhooks@starscream.pa.jhbcomputers.com&gt;</dc:contributor>
    <dc:contributor>Jakub Hrozek &lt;jhrozek@redhat.com&gt;</dc:contributor>
    <dc:contributor>De Huo &lt;De.Huo@windriver.com&gt;</dc:contributor>
    <dc:contributor>Robin Price II &lt;robin@redhat.com&gt;</dc:contributor>
    <dc:contributor>Yasir Imam &lt;yimam@redhat.com&gt;</dc:contributor>
    <dc:contributor>Jiri Jaburek &lt;jjaburek@redhat.com&gt;</dc:contributor>
    <dc:contributor>Keith Jackson &lt;keithkjackson@gmail.com&gt;</dc:contributor>
    <dc:contributor>Jeremiah Jahn &lt;jeremiah@goodinassociates.com&gt;</dc:contributor>
    <dc:contributor>Jakub Jelen &lt;jjelen@redhat.com&gt;</dc:contributor>
    <dc:contributor>Jessicahfy &lt;Jessicahfy@users.noreply.github.com&gt;</dc:contributor>
    <dc:contributor>Stephan Joerrens &lt;Stephan.Joerrens@fiduciagad.de&gt;</dc:contributor>
    <dc:contributor>Jono &lt;jono@ubuntu-18.localdomain&gt;</dc:contributor>
    <dc:contributor>Kai Kang &lt;kai.kang@windriver.com&gt;</dc:contributor>
    <dc:contributor>Charles Kernstock &lt;charles.kernstock@ultra-ats.com&gt;</dc:contributor>
    <dc:contributor>Yuli Khodorkovskiy &lt;ykhodorkovskiy@tresys.com&gt;</dc:contributor>
    <dc:contributor>Nathan Kinder &lt;nkinder@redhat.com&gt;</dc:contributor>
    <dc:contributor>Lee Kinser &lt;lee.kinser@gmail.com&gt;</dc:contributor>
    <dc:contributor>Evgeny Kolesnikov &lt;ekolesni@redhat.com&gt;</dc:contributor>
    <dc:contributor>Peter 'Pessoft' Kol&#237;nek &lt;github@pessoft.com&gt;</dc:contributor>
    <dc:contributor>Luke Kordell &lt;luke.t.kordell@lmco.com&gt;</dc:contributor>
    <dc:contributor>Malte Kraus &lt;malte.kraus@suse.com&gt;</dc:contributor>
    <dc:contributor>Seth Kress &lt;seth.kress@dsainc.com&gt;</dc:contributor>
    <dc:contributor>kspargur &lt;kspargur@kspargur.csb&gt;</dc:contributor>
    <dc:contributor>Amit Kumar &lt;amitkuma@redhat.com&gt;</dc:contributor>
    <dc:contributor>Fen Labalme &lt;fen@civicactions.com&gt;</dc:contributor>
    <dc:contributor>Ade Lee &lt;alee@redhat.com&gt;</dc:contributor>
    <dc:contributor>Christopher Lee &lt;Crleekwc@gmail.com&gt;</dc:contributor>
    <dc:contributor>Ian Lee &lt;lee1001@llnl.gov&gt;</dc:contributor>
    <dc:contributor>Jarrett Lee &lt;jarrettl@umd.edu&gt;</dc:contributor>
    <dc:contributor>Joseph Lenox &lt;lordofhyphens@gmail.com&gt;</dc:contributor>
    <dc:contributor>Jan Lieskovsky &lt;jlieskov@redhat.com&gt;</dc:contributor>
    <dc:contributor>&#352;imon Luka&#353;&#237;k &lt;slukasik@redhat.com&gt;</dc:contributor>
    <dc:contributor>Milan Lysonek &lt;mlysonek@redhat.com&gt;</dc:contributor>
    <dc:contributor>Fredrik Lys&#233;n &lt;fredrik@pipemore.se&gt;</dc:contributor>
    <dc:contributor>Caitlin Macleod &lt;caitelatte@gmail.com&gt;</dc:contributor>
    <dc:contributor>Nick Maludy &lt;nmaludy@gmail.com&gt;</dc:contributor>
    <dc:contributor>Lokesh Mandvekar &lt;lsm5@fedoraproject.org&gt;</dc:contributor>
    <dc:contributor>Matus Marhefka &lt;mmarhefk@redhat.com&gt;</dc:contributor>
    <dc:contributor>Jamie Lorwey Martin &lt;jlmartin@redhat.com&gt;</dc:contributor>
    <dc:contributor>Carlos Matos &lt;cmatos@redhat.com&gt;</dc:contributor>
    <dc:contributor>Robert McAllister &lt;rmcallis@redhat.com&gt;</dc:contributor>
    <dc:contributor>Michael McConachie &lt;michael@redhat.com&gt;</dc:contributor>
    <dc:contributor>Marcus Meissner &lt;meissner@suse.de&gt;</dc:contributor>
    <dc:contributor>Khary Mendez &lt;kmendez@redhat.com&gt;</dc:contributor>
    <dc:contributor>Rodney Mercer &lt;rmercer@harris.com&gt;</dc:contributor>
    <dc:contributor>Matt Micene &lt;nzwulfin@gmail.com&gt;</dc:contributor>
    <dc:contributor>Brian Millett &lt;bmillett@gmail.com&gt;</dc:contributor>
    <dc:contributor>Takuya Mishina &lt;tmishina@jp.ibm.com&gt;</dc:contributor>
    <dc:contributor>Mixer9 &lt;35545791+Mixer9@users.noreply.github.com&gt;</dc:contributor>
    <dc:contributor>mmosel &lt;mmosel@kde.example.com&gt;</dc:contributor>
    <dc:contributor>Zbynek Moravec &lt;zmoravec@redhat.com&gt;</dc:contributor>
    <dc:contributor>Kazuo Moriwaka &lt;moriwaka@users.noreply.github.com&gt;</dc:contributor>
    <dc:contributor>Michael Moseley &lt;michael@eclipse.ncsc.mil&gt;</dc:contributor>
    <dc:contributor>Renaud M&#233;trich &lt;rmetrich@redhat.com&gt;</dc:contributor>
    <dc:contributor>Joe Nall &lt;joe@nall.com&gt;</dc:contributor>
    <dc:contributor>Neiloy &lt;neiloy@redhat.com&gt;</dc:contributor>
    <dc:contributor>Axel Nennker &lt;axel@nennker.de&gt;</dc:contributor>
    <dc:contributor>Michele Newman &lt;mnewman@redhat.com&gt;</dc:contributor>
    <dc:contributor>Sean O'Keeffe &lt;seanokeeffe797@gmail.com&gt;</dc:contributor>
    <dc:contributor>Ilya Okomin &lt;ilya.okomin@oracle.com&gt;</dc:contributor>
    <dc:contributor>Kaustubh Padegaonkar &lt;theTuxRacer@gmail.com&gt;</dc:contributor>
    <dc:contributor>Michael Palmiotto &lt;mpalmiotto@tresys.com&gt;</dc:contributor>
    <dc:contributor>Eryx Paredes &lt;eryxp@lyft.com&gt;</dc:contributor>
    <dc:contributor>Max R.D. Parmer &lt;maxp@trystero.is&gt;</dc:contributor>
    <dc:contributor>Jan Pazdziora &lt;jpazdziora@redhat.com&gt;</dc:contributor>
    <dc:contributor>pcactr &lt;paul.c.arnold4.ctr@mail.mil&gt;</dc:contributor>
    <dc:contributor>Kenneth Peeples &lt;kennethwpeeples@gmail.com&gt;</dc:contributor>
    <dc:contributor>Nathan Peters &lt;Nathaniel.Peters@ca.com&gt;</dc:contributor>
    <dc:contributor>Frank Lin PIAT &lt;fpiat@klabs.be&gt;</dc:contributor>
    <dc:contributor>Stefan Pietsch &lt;mail.ipv4v6+gh@gmail.com&gt;</dc:contributor>
    <dc:contributor>piggyvenus &lt;piggyvenus@gmail.com&gt;</dc:contributor>
    <dc:contributor>Vojtech Polasek &lt;vpolasek@redhat.com&gt;</dc:contributor>
    <dc:contributor>Orion Poplawski &lt;orion@nwra.com&gt;</dc:contributor>
    <dc:contributor>Nick Poyant &lt;npoyant@redhat.com&gt;</dc:contributor>
    <dc:contributor>Martin Preisler &lt;mpreisle@redhat.com&gt;</dc:contributor>
    <dc:contributor>Wesley Ceraso Prudencio &lt;wcerasop@redhat.com&gt;</dc:contributor>
    <dc:contributor>Raphael Sanchez Prudencio &lt;rsprudencio@redhat.com&gt;</dc:contributor>
    <dc:contributor>T.O. Radzy Radzykewycz &lt;radzy@windriver.com&gt;</dc:contributor>
    <dc:contributor>Kenyon Ralph &lt;kenyon@kenyonralph.com&gt;</dc:contributor>
    <dc:contributor>Mike Ralph &lt;mralph@redhat.com&gt;</dc:contributor>
    <dc:contributor>Federico Ramirez &lt;federico.r.ramirez@oracle.com&gt;</dc:contributor>
    <dc:contributor>rchikov &lt;rumen.chikov@suse.com&gt;</dc:contributor>
    <dc:contributor>Rick Renshaw &lt;Richard_Renshaw@xtoenergy.com&gt;</dc:contributor>
    <dc:contributor>Chris Reynolds &lt;c.reynolds82@gmail.com&gt;</dc:contributor>
    <dc:contributor>rhayes &lt;rhayes@rivierautilities.com&gt;</dc:contributor>
    <dc:contributor>Pat Riehecky &lt;riehecky@fnal.gov&gt;</dc:contributor>
    <dc:contributor>rlucente-se-jboss &lt;rlucente@redhat.com&gt;</dc:contributor>
    <dc:contributor>Juan Antonio Osorio Robles &lt;jaosorior@redhat.com&gt;</dc:contributor>
    <dc:contributor>Matt Rogers &lt;mrogers@redhat.com&gt;</dc:contributor>
    <dc:contributor>Jesse Roland &lt;jesse.roland@onyxpoint.com&gt;</dc:contributor>
    <dc:contributor>Joshua Roys &lt;roysjosh@gmail.com&gt;</dc:contributor>
    <dc:contributor>rrenshaw &lt;bofh69@yahoo.com&gt;</dc:contributor>
    <dc:contributor>Chris Ruffalo &lt;chris.ruffalo@gmail.com&gt;</dc:contributor>
    <dc:contributor>Ray Shaw (Cont ARL/CISD) rvshaw &lt;rvshaw@esme.arl.army.mil&gt;</dc:contributor>
    <dc:contributor>Earl Sampson &lt;ESampson@suse.com&gt;</dc:contributor>
    <dc:contributor>Willy Santos &lt;wsantos@redhat.com&gt;</dc:contributor>
    <dc:contributor>Gautam Satish &lt;gautams@hpe.com&gt;</dc:contributor>
    <dc:contributor>Watson Sato &lt;wsato@redhat.com&gt;</dc:contributor>
    <dc:contributor>Satoru SATOH &lt;satoru.satoh@gmail.com&gt;</dc:contributor>
    <dc:contributor>Alexander Scheel &lt;ascheel@redhat.com&gt;</dc:contributor>
    <dc:contributor>Bryan Schneiders &lt;pschneiders@trisept.com&gt;</dc:contributor>
    <dc:contributor>shaneboulden &lt;shane.boulden@gmail.com&gt;</dc:contributor>
    <dc:contributor>Spencer Shimko &lt;sshimko@tresys.com&gt;</dc:contributor>
    <dc:contributor>Mark Shoger &lt;mshoger@redhat.com&gt;</dc:contributor>
    <dc:contributor>Thomas Sj&#246;gren &lt;konstruktoid@users.noreply.github.com&gt;</dc:contributor>
    <dc:contributor>Francisco Slavin &lt;fslavin@tresys.com&gt;</dc:contributor>
    <dc:contributor>David Smith &lt;dsmith@eclipse.ncsc.mil&gt;</dc:contributor>
    <dc:contributor>Kevin Spargur &lt;kspargur@redhat.com&gt;</dc:contributor>
    <dc:contributor>Kenneth Stailey &lt;kstailey.lists@gmail.com&gt;</dc:contributor>
    <dc:contributor>Leland Steinke &lt;leland.j.steinke.ctr@mail.mil&gt;</dc:contributor>
    <dc:contributor>Justin Stephenson &lt;jstephen@redhat.com&gt;</dc:contributor>
    <dc:contributor>Brian Stinson &lt;brian@bstinson.com&gt;</dc:contributor>
    <dc:contributor>Jake Stookey &lt;jakestookey@gmail.com&gt;</dc:contributor>
    <dc:contributor>Jonathan Sturges &lt;jsturges@redhat.com&gt;</dc:contributor>
    <dc:contributor>teacup-on-rockingchair &lt;strandjata@gmail.com&gt;</dc:contributor>
    <dc:contributor>Ian Tewksbury &lt;itewk@redhat.com&gt;</dc:contributor>
    <dc:contributor>Philippe Thierry &lt;phil@reseau-libre.net&gt;</dc:contributor>
    <dc:contributor>Derek Thurston &lt;thegrit@gmail.com&gt;</dc:contributor>
    <dc:contributor>tianzhenjia &lt;jiatianzhen@cmss.chinamobile.com&gt;</dc:contributor>
    <dc:contributor>Greg Tinsley &lt;gtinsley@redhat.com&gt;</dc:contributor>
    <dc:contributor>Paul Tittle &lt;ptittle@cmf.nrl.navy.mil&gt;</dc:contributor>
    <dc:contributor>tomas.hudik &lt;tomas.hudik@embedit.cz&gt;</dc:contributor>
    <dc:contributor>Jeb Trayer &lt;jeb.d.trayer@uscg.mil&gt;</dc:contributor>
    <dc:contributor>Viktors Trubovics &lt;viktors.trubovics@suse.com&gt;</dc:contributor>
    <dc:contributor>Nico Truzzolino &lt;nico.truzzolino@gmx.de&gt;</dc:contributor>
    <dc:contributor>Brian Turek &lt;brian.turek@gmail.com&gt;</dc:contributor>
    <dc:contributor>Mat&#283;j T&#253;&#269; &lt;matyc@redhat.com&gt;</dc:contributor>
    <dc:contributor>Trevor Vaughan &lt;tvaughan@onyxpoint.com&gt;</dc:contributor>
    <dc:contributor>Samuel Warren &lt;swarren@redhat.com&gt;</dc:contributor>
    <dc:contributor>Shawn Wells &lt;shawn@shawndwells.io&gt;</dc:contributor>
    <dc:contributor>Daniel E. White &lt;linuxdan@users.noreply.github.com&gt;</dc:contributor>
    <dc:contributor>Bernhard M. Wiedemann &lt;bwiedemann@suse.de&gt;</dc:contributor>
    <dc:contributor>Roy Williams &lt;roywilli@roywilli.redhat.com&gt;</dc:contributor>
    <dc:contributor>Willumpie &lt;willumpie@xs4all.nl&gt;</dc:contributor>
    <dc:contributor>Rob Wilmoth &lt;rwilmoth@redhat.com&gt;</dc:contributor>
    <dc:contributor>Lucas Yamanishi &lt;lucas.yamanishi@onyxpoint.com&gt;</dc:contributor>
    <dc:contributor>Xirui Yang &lt;xirui.yang@oracle.com&gt;</dc:contributor>
    <dc:contributor>yarunachalam &lt;yarunachalam@suse.com&gt;</dc:contributor>
    <dc:contributor>Guang Yee &lt;guang.yee@suse.com&gt;</dc:contributor>
    <dc:contributor>Kevin Zimmerman &lt;kevin.zimmerman@kitware.com&gt;</dc:contributor>
    <dc:contributor>Jan &#268;ern&#253; &lt;jcerny@redhat.com&gt;</dc:contributor>
    <dc:contributor>Michal &#352;ruba&#345; &lt;msrubar@redhat.com&gt;</dc:contributor>
    <dc:source>https://github.com/ComplianceAsCode/content/releases/latest</dc:source>
  </xccdf-1.1:metadata>
  <xccdf-1.1:model system="urn:xccdf:scoring:default" />
  <xccdf-1.1:Profile id="stig">
    <xccdf-1.1:title xml:lang="en-US" override="true">Upstream STIG for Google Chromium</xccdf-1.1:title>
    <xccdf-1.1:description xml:lang="en-US" override="true">This profile is developed under the DoD consensus model and DISA FSO Vendor STIG process,
serving as the upstream development environment for the Google Chromium STIG.

As a result of the upstream/downstream relationship between the SCAP Security Guide project
and the official DISA FSO STIG baseline, users should expect variance between SSG and DISA FSO content.
For official DISA FSO STIG content, refer to https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance.

While this profile is packaged by Red Hat as part of the SCAP Security Guide package, please note
that commercial support of this SCAP content is NOT available. This profile is provided as example
SCAP content with no endorsement for suitability or production readiness. Support for this
profile is provided by the upstream SCAP Security Guide community on a best-effort basis. The
upstream project homepage is https://www.open-scap.org/security-policies/scap-security-guide/.</xccdf-1.1:description>
    <xccdf-1.1:select idref="chromium_blacklist_extension_installation" selected="true" />
    <xccdf-1.1:select idref="chromium_block_desktop_notifications" selected="true" />
    <xccdf-1.1:select idref="chromium_check_cert_revocation" selected="true" />
    <xccdf-1.1:select idref="chromium_default_block_plugins" selected="true" />
    <xccdf-1.1:select idref="chromium_default_search_provider" selected="true" />
    <xccdf-1.1:select idref="chromium_default_search_provider_name" selected="true" />
    <xccdf-1.1:select idref="chromium_disable_3d_graphics_api" selected="true" />
    <xccdf-1.1:select idref="chromium_disable_autocomplete" selected="true" />
    <xccdf-1.1:select idref="chromium_disable_automatic_installation" selected="true" />
    <xccdf-1.1:select idref="chromium_disable_background_processing" selected="true" />
    <xccdf-1.1:select idref="chromium_disable_cleartext_passwords" selected="true" />
    <xccdf-1.1:select idref="chromium_disable_cloud_print_sharing" selected="true" />
    <xccdf-1.1:select idref="chromium_disable_firewall_traversal" selected="true" />
    <xccdf-1.1:select idref="chromium_disable_google_sync" selected="true" />
    <xccdf-1.1:select idref="chromium_disable_incognito_mode" selected="true" />
    <xccdf-1.1:select idref="chromium_disable_metrics_reporting" selected="true" />
    <xccdf-1.1:select idref="chromium_disable_network_prediction" selected="true" />
    <xccdf-1.1:select idref="chromium_disable_outdated_plugins" selected="true" />
    <xccdf-1.1:select idref="chromium_disable_password_manager" selected="true" />
    <xccdf-1.1:select idref="chromium_disable_plugin_blacklist" selected="true" />
    <xccdf-1.1:select idref="chromium_disable_popups" selected="true" />
    <xccdf-1.1:select idref="chromium_disable_protocol_schemas" selected="true" />
    <xccdf-1.1:select idref="chromium_disable_saved_passwords" selected="true" />
    <xccdf-1.1:select idref="chromium_disable_search_suggestions" selected="true" />
    <xccdf-1.1:select idref="chromium_disable_session_cookies" selected="true" />
    <xccdf-1.1:select idref="chromium_disable_thirdparty_cookies" selected="true" />
    <xccdf-1.1:select idref="chromium_disallow_location_tracking" selected="true" />
    <xccdf-1.1:select idref="chromium_enable_approved_plugins" selected="true" />
    <xccdf-1.1:select idref="chromium_enable_browser_history" selected="true" />
    <xccdf-1.1:select idref="chromium_enable_encrypted_searching" selected="true" />
    <xccdf-1.1:select idref="chromium_enable_safe_browsing" selected="true" />
    <xccdf-1.1:select idref="chromium_extension_whitelist" selected="true" />
    <xccdf-1.1:select idref="chromium_http_authentication" selected="true" />
    <xccdf-1.1:select idref="chromium_plugins_require_authorization" selected="true" />
    <xccdf-1.1:select idref="chromium_policy_file" selected="true" />
    <xccdf-1.1:select idref="chromium_trusted_home_page" selected="true" />
    <xccdf-1.1:select idref="chromium_whitelist_plugin_urls" selected="true" />
    <xccdf-1.1:refine-value idref="var_default_search_provider_name" selector="google" />
    <xccdf-1.1:refine-value idref="var_url_blacklist" selector="javascript" />
    <xccdf-1.1:refine-value idref="var_enable_encrypted_searching" selector="google" />
    <xccdf-1.1:refine-value idref="var_extension_whitelist" selector="none" />
    <xccdf-1.1:refine-value idref="var_auth_schema" selector="negotiate" />
    <xccdf-1.1:refine-value idref="var_trusted_home_page" selector="blank" />
  </xccdf-1.1:Profile>
  <xccdf-1.1:Group id="remediation_functions">
    <xccdf-1.1:title xml:lang="en-US">Remediation functions used by the SCAP Security Guide Project</xccdf-1.1:title>
    <xccdf-1.1:description xml:lang="en-US">XCCDF form of the various remediation functions as used by remediation scripts from the SCAP Security Guide Project.</xccdf-1.1:description>
  </xccdf-1.1:Group>
  <xccdf-1.1:Group id="chromium">
    <xccdf-1.1:title xml:lang="en-US">Chromium</xccdf-1.1:title>
    <xccdf-1.1:description xml:lang="en-US">Chromium is an open-source web browser, powered by WebKit (Blink),
and developed by Google. Web browsers such as Chromium are used for a number of
reasons. This section provides settings for configuring Chromium policies to 
meet compliance settings for Chromium running on Red Hat Enterprise Linux 
systems.

Refer to <html:ul><html:li>https://www.chromium.org/administrators/policy-list-3</html:li></html:ul> for
a list of currently supported Chromium policies.
Refer to <html:ul><html:li>https://www.chromium.org/administrators/policy_templates</html:li></html:ul> for 
pre-created Chromium <html:code>JSON</html:code> policy files.</xccdf-1.1:description>
    <xccdf-1.1:Value id="var_auth_schema" type="string">
      <xccdf-1.1:title xml:lang="en-US">Chromium HTTP Authentication Setting</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Chromium HTTP Authentication Types</xccdf-1.1:description>
      <xccdf-1.1:value selector="all">basic,digest,ntlm,negotiate</xccdf-1.1:value>
      <xccdf-1.1:value selector="basic">basic</xccdf-1.1:value>
      <xccdf-1.1:value>negotiate</xccdf-1.1:value>
      <xccdf-1.1:value selector="digest">digest</xccdf-1.1:value>
      <xccdf-1.1:value selector="negotiate">negotiate</xccdf-1.1:value>
      <xccdf-1.1:value selector="ntlm">ntlm</xccdf-1.1:value>
    </xccdf-1.1:Value>
    <xccdf-1.1:Value id="var_default_search_provider_name" type="string">
      <xccdf-1.1:title xml:lang="en-US">The Default Search provider in Chromium</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">The URL for the Default Search provider in Chromium</xccdf-1.1:description>
      <xccdf-1.1:value selector="bing">https://www.bing.com</xccdf-1.1:value>
      <xccdf-1.1:value>https://www.google.com</xccdf-1.1:value>
      <xccdf-1.1:value selector="google">https://www.google.com</xccdf-1.1:value>
      <xccdf-1.1:value selector="yahoo">https://www.yahoo.com</xccdf-1.1:value>
    </xccdf-1.1:Value>
    <xccdf-1.1:Value id="var_enable_approved_plugins" type="string" interactive="true">
      <xccdf-1.1:title xml:lang="en-US">Chromium Enabled Plugins</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Chromium Enabled Plugins</xccdf-1.1:description>
      <xccdf-1.1:value />
    </xccdf-1.1:Value>
    <xccdf-1.1:Value id="var_enable_encrypted_searching" type="string">
      <xccdf-1.1:title xml:lang="en-US">Encrypted Chromium Search URLs</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Encrypted search URL for the Default Search Provider</xccdf-1.1:description>
      <xccdf-1.1:value selector="bing">https://www.bing.com/search?q={searchTerms}</xccdf-1.1:value>
      <xccdf-1.1:value>https://www.google.com/#q={searchTerms}</xccdf-1.1:value>
      <xccdf-1.1:value selector="google">https://www.google.com/#q={searchTerms}</xccdf-1.1:value>
      <xccdf-1.1:value selector="yahoo">https://www.yahoo.com/search?q={searchTerms}</xccdf-1.1:value>
    </xccdf-1.1:Value>
    <xccdf-1.1:Value id="var_extension_whitelist" type="string">
      <xccdf-1.1:title xml:lang="en-US">Whitelisted Chromium Extenstions</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Chromium extensions approved for use</xccdf-1.1:description>
      <xccdf-1.1:value>oiigbmnaadbkfbmpbfijlflahbdbdgdf</xccdf-1.1:value>
      <xccdf-1.1:value selector="none">oiigbmnaadbkfbmpbfijlflahbdbdgdf</xccdf-1.1:value>
    </xccdf-1.1:Value>
    <xccdf-1.1:Value id="var_trusted_home_page" type="string">
      <xccdf-1.1:title xml:lang="en-US">Default Chromium Homepage</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Default homepage for Chromium users</xccdf-1.1:description>
      <xccdf-1.1:value selector="blank">about:blank</xccdf-1.1:value>
      <xccdf-1.1:value>about:blank</xccdf-1.1:value>
    </xccdf-1.1:Value>
    <xccdf-1.1:Value id="var_url_blacklist" type="string">
      <xccdf-1.1:title xml:lang="en-US">Blacklisted Chromium Protocols</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Blacklisted Protocol Schemas in Chromium</xccdf-1.1:description>
      <xccdf-1.1:value>javascript://*</xccdf-1.1:value>
      <xccdf-1.1:value selector="javascript">javascript://*</xccdf-1.1:value>
    </xccdf-1.1:Value>
    <xccdf-1.1:Rule id="chromium_blacklist_extension_installation" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Disable All Extensions by Default</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Extensions are developed by third party sources and are designed to extend 
Google Chromium's functionality. As an extension can be made by anyone, all extensions
should be blacklisted from installation by default. To blacklist all extensions, set the 
<html:code>ExtensionInstallBlacklist</html:code> to <html:code>*</html:code> in the Chromium policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0006</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">Extensions can access almost anything on a system. This means they pose a high risk
to any system that would allow all extensions to be installed by default.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_blacklist_extension_installation">CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="ExtensionInstallBlacklist"
POL_SETTING_VAL="\[\"*\"\]"

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": '${POL_SETTING_VAL}',' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'.*/\"'${POL_SETTING}'\": '${POL_SETTING_VAL}',/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_blacklist_extension_installation:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_blacklist_extension_installation_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_block_desktop_notifications" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Prevent Desktop Notifications</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Chromium by default allows websites to display notifications on the desktop.
To disable this setting, set <html:code>DefaultNotificationsSetting</html:code> to <html:code>2</html:code>
in the Chromium policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0003</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">Disabling Chromium's ability to display notifications on the desktop helps prevent 
malicious websites from controlling desktop notifications or fooling users into
clicking on a potentially compromised notification.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_block_desktop_notifications">CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="DefaultNotificationsSetting"
POL_SETTING_VAL="2"

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": '${POL_SETTING_VAL}',' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'.*/\"'${POL_SETTING}'\": '${POL_SETTING_VAL}',/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_block_desktop_notifications:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_block_desktop_notifications_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_check_cert_revocation" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Enable Online OCSP/CRL Certificate Checks</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Certificates can become compromised, and Chromium should check that the
certificates in its store are valid by setting <html:code>EnableOnlineRevocationChecks</html:code>
to <html:code>true</html:code> in the Chromium policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0037</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">Certificates are revoked when they have been compromised or are no longer valid,
and this option protects users from submitting confidential data to a site that
may be fraudulent or not secure.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_check_cert_revocation">CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="EnableOnlineRevocationChecks"
POL_SETTING_VAL="true"

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": '${POL_SETTING_VAL}',' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'.*/\"'${POL_SETTING}'\": '${POL_SETTING_VAL}',/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_check_cert_revocation:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_check_cert_revocation_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_default_block_plugins" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Block Plugins by Default</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">By default, websites are allowed to automatically run plugins.
Users should be prompted to allow plugins to execute plugins by setting
<html:code>DefaultPluginsSetting</html:code> to <html:code>3</html:code> in the Chromium policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0040</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">Websites should not be allowed to automatically run plugins as the plugins
may be outdated or compromised.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_default_block_plugins">CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="DefaultPluginsSetting"
POL_SETTING_VAL="3"

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": '${POL_SETTING_VAL}',' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'.*/\"'${POL_SETTING}'\": '${POL_SETTING_VAL}',/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_default_block_plugins:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_default_block_plugins_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_default_search_provider" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Enable the Default Search Provider</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">By default users, can change search provider settings. To disable this, set
<html:code>DefaultSearchProviderEnabled</html:code> to <html:code>true</html:code> in the Chromium policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0009</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">A default search is performed when the user types text in the omnibox that is not a URL.
This should be organizationally defined and not allowed to be changed by a user.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_default_search_provider">CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="DefaultSearchProviderEnabled"
POL_SETTING_VAL="true"

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": '${POL_SETTING_VAL}',' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'.*/\"'${POL_SETTING}'\": '${POL_SETTING_VAL}',/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_default_search_provider:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_default_search_provider_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_default_search_provider_name" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Set the Default Search Provider's URL</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Specifies the URL of the default search provider that is to be used. To set the 
URL of the default search provider, set <html:code>DefaultSearchProviderName</html:code> to 
<html:code><xccdf-1.1:sub idref="var_default_search_provider" /></html:code> in the Chromium policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0007</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">When doing internet searches, it is important to set an organizationally approved search
provider as well as use an encrypted connection via https.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_default_search_provider_name">
var_default_search_provider_name="<xccdf-1.1:sub idref="var_default_search_provider_name" />"


CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="DefaultSearchProviderName"
POL_SETTING_VAL=$(echo ${var_default_search_provider_name} | sed 's/\//\\\/\\/')

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": "'${var_default_search_provider_name}'",' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'\".*/\"'${POL_SETTING}'\": \"'${POL_SETTING_VAL}'\",/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-export export-name="oval:ssg-var_default_search_provider_name:var:1" value-id="var_default_search_provider_name" /><xccdf-1.1:check-content-ref name="oval:ssg-chromium_default_search_provider_name:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_default_search_provider_name_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_disable_3d_graphics_api" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Disable the 3D Graphics APIs</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Chromium uses WebGL to render graphics using the GPU which allows website
access to the GPU. This should be disabled by setting <html:code>Disable3DAPIs</html:code>
to <html:code>true</html:code> in the Chromium policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0019</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">This setting prevents web pages from accessing the graphics processing unit
(GPU). Specifically, web pages cannot access the WebGL API and plugins cannot
use the Pepper 3D API in order to reduce the attack surface.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_disable_3d_graphics_api">CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="Disable3DAPIs"
POL_SETTING_VAL="true"

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": '${POL_SETTING_VAL}',' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'.*/\"'${POL_SETTING}'\": '${POL_SETTING_VAL}',/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_disable_3d_graphics_api:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_disable_3d_graphics_api_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_disable_autocomplete" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Disable the AutoFill Feature</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">The AutoFill feature suggests possible matches when users are filling in forms. To
disable the AutoFill feature, set <html:code>AutoFillEnabled</html:code> to <html:code>false</html:code> in
the Chromium policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0022</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">It is possible with the AutoFill feature that it will cache sensitive data and store
it in the user's profile, where it might not be protected as rigorously as required by
organizational policy.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_disable_autocomplete">CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="AutoFillEnabled"
POL_SETTING_VAL="false"

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": '${POL_SETTING_VAL}',' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'.*/\"'${POL_SETTING}'\": '${POL_SETTING_VAL}',/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_disable_autocomplete:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_disable_autocomplete_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_disable_automatic_installation" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Disable Automatic Search And Installation of Plugins</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Chromium will automatically detect, search, and install plugins as required. This
should be disabled by setting <html:code>DisablePluginFinder</html:code> to <html:code>true</html:code> in the
Chromium policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0036</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">The automatic search and installation of missing or not installed plugins should be
disabled as this can cause significant risk if a unapproved or vulnerable plugin were
to be installed without proper permissions or authorization.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_disable_automatic_installation">CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="DisablePluginFinder"
POL_SETTING_VAL="true"

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": '${POL_SETTING_VAL}',' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'.*/\"'${POL_SETTING}'\": '${POL_SETTING_VAL}',/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_disable_automatic_installation:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_disable_automatic_installation_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_disable_background_processing" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Disable Background Processing</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Chromium can be set to run at all times and process in the background. This
should be disabled by setting <html:code>BackgroundModeEnabled</html:code> to <html:code>false</html:code>
in the Chromium policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0017</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">There is two reasons that this is not wanted. First, it can tie up system
resources that might otherwise be needed. Second, it does not make it
obvious to the user that it is running and poorly written extensions could
cause instability on the system.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_disable_background_processing">CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="BackgroundModeEnabled"
POL_SETTING_VAL="false"

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": '${POL_SETTING_VAL}',' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'.*/\"'${POL_SETTING}'\": '${POL_SETTING_VAL}',/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_disable_background_processing:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_disable_background_processing_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_disable_cleartext_passwords" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Disable Use of Cleartext Passwords</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Chromium allows users to import and store passwords in cleartext. This should be 
disabled by setting <html:code>PasswordManagerAllowShowPasswords</html:code> to <html:code>false</html:code>
in the Chromium policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0010</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">Cleartext passwords would allow another individual to see password via shoulder surfing.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_disable_cleartext_passwords">CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="PasswordManagerAllowShowPasswords"
POL_SETTING_VAL="false"

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": '${POL_SETTING_VAL}',' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'.*/\"'${POL_SETTING}'\": '${POL_SETTING_VAL}',/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_disable_cleartext_passwords:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_disable_cleartext_passwords_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_disable_cloud_print_sharing" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Disable Cloud Print Sharing</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Chromium has cloud sharing capabilities including sharing printers connected to the
system. This is done via a proxy. To disable printer sharing, set <html:code>CloudPrintProxyEnabled</html:code>
to <html:code>false</html:code> in the Chromium policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0023</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">Google Chromium has the capability to act as a proxy between Google Cloud Print
and legacy printers connected to the machine. Users can then enable the cloud
print proxy by authentication with their Google account.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_disable_cloud_print_sharing">CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="CloudPringProxyEnabled"
POL_SETTING_VAL="false"

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": '${POL_SETTING_VAL}',' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'.*/\"'${POL_SETTING}'\": '${POL_SETTING_VAL}',/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_disable_cloud_print_sharing:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_disable_cloud_print_sharing_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_disable_firewall_traversal" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Disable Chromium's Ability to Traverse Firewalls</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Chromium has the ability to bypass and ignore the system firewall. This
ability should be disabled. To disable this setting, set 
<html:code>RemoteAccessHostFirewallTraversal</html:code> to <html:code>false</html:code> in the 
Chromium policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0001</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">Remote connections should never be allowed to bypass the system firewall
as there is no way to verify if they can be trusted.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_disable_firewall_traversal">CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="RemoteAccessHostFirewallTraversal"
POL_SETTING_VAL="false"

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": '${POL_SETTING_VAL}',' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'.*/\"'${POL_SETTING}'\": '${POL_SETTING_VAL}',/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_disable_firewall_traversal:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_disable_firewall_traversal_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_disable_google_sync" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Disable Data Synchronization to Google</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US"><html:code>SyncDisabled</html:code> to <html:code>true</html:code> in the Chromium policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0020</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">Google Sync is used to sync information between different user devices,
this data is then stored on Google owned servers. The synced data may consist
of information such as email, calendars, viewing history, etc. This feature must
be disabled because the organization does not have control over the servers the
data is stored on.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_disable_google_sync">CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="SyncDisabled"
POL_SETTING_VAL="true"

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": '${POL_SETTING_VAL}',' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'.*/\"'${POL_SETTING}'\": '${POL_SETTING_VAL}',/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_disable_google_sync:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_disable_google_sync_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_disable_incognito_mode" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Disable Incognito Mode</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Incognito Mode allows users to browse in private which prevents monitoring
and validating user browsing habits. This capability should be disabled by
setting <html:code>IncognitoModeAvailability</html:code> to <html:code>1</html:code> in the Chromium
policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0030</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">Incognito mode allows the user to browse the Internet without recording their
browsing history/activity. From a forensics perspective, this is unacceptable.
Best practice requires that browser history is retained.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_disable_incognito_mode">CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="IncognitoModeAvailability"
POL_SETTING_VAL="false"

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": '${POL_SETTING_VAL}',' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'.*/\"'${POL_SETTING}'\": '${POL_SETTING_VAL}',/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_disable_incognito_mode:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_disable_incognito_mode_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_disable_metrics_reporting" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Disable Metrics Reporting</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Whenever Chromium crashes, it sends its usage and crash-related data to Google.
This should be disabled by setting <html:code>MetricsReportingEnabled</html:code> to 
<html:code>false</html:code> in the Chromium policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0026</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">Anonymous reporting of usage and crash-related data is sent to Google.
A crash report could contain sensitive information from the computer's memory.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_disable_metrics_reporting">CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="MetricsReportingEnabled"
POL_SETTING_VAL="false"

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": '${POL_SETTING_VAL}',' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'.*/\"'${POL_SETTING}'\": '${POL_SETTING_VAL}',/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_disable_metrics_reporting:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_disable_metrics_reporting_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_disable_network_prediction" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Disable Network Prediction</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">To disable the network prediction feature, set <html:code>DnsPrefetchingEnabled</html:code>
to <html:code>false</html:code> in the Chromium policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0025</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">This controls not only DNS prefetching but also TCP and SSL preconnection
and prerendering of web pages.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_disable_network_prediction">CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="DnsPrefetchingEnabled"
POL_SETTING_VAL="false"

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": '${POL_SETTING_VAL}',' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'.*/\"'${POL_SETTING}'\": '${POL_SETTING_VAL}',/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_disable_network_prediction:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_disable_network_prediction_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_disable_outdated_plugins" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Disable Outdated Plugins</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Outdated plugins should be disabled by setting <html:code>AllowOutdatedPlugins</html:code>
to <html:code>false</html:code> in the Chromium policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0013</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">Running outdated plugins could lead to system compromise through the use
of known exploits. Having plugins updated to the most current version
ensures the smallest attack surfuce possible.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_disable_outdated_plugins">CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="AllowOutdatedPlugins"
POL_SETTING_VAL="false"

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": '${POL_SETTING_VAL}',' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'.*/\"'${POL_SETTING}'\": '${POL_SETTING_VAL}',/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_disable_outdated_plugins:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_disable_outdated_plugins_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_disable_password_manager" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Disable Chromium Password Manager</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Chromium Password Manager allows the saving and using of passwords in Chromium. This
should be disabled by setting <html:code>PasswordManagerEnabled</html:code> to <html:code>false</html:code> in 
the Chromium policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0011</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">Enables saving passwords and using saved passwords in Google Chromium. Malicious
sites may take advantage of this feature by using hidden fields gain access
to the stored information.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_disable_password_manager">CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="PasswordManagerEnabled"
POL_SETTING_VAL="false"

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": '${POL_SETTING_VAL}',' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'.*/\"'${POL_SETTING}'\": '${POL_SETTING_VAL}',/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_disable_password_manager:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_disable_password_manager_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_disable_plugin_blacklist" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Disable All Plugins by Default</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Plugins are developed internally or by third party sources and are designed to extend
Google Chromium's functionality. All plugins should be blacklisted from 
installation by default. To blacklist all plugins set <html:code>DisabledPlugins</html:code>
to <html:code>*</html:code> in the Chromium policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0034</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">Plugins can access almost anything on a system and users can enable or install them
at will. This means they pose a high risk to any system that would allow all plugins
to be installed by default.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_disable_plugin_blacklist">CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="DisabledPlugins"
POL_SETTING_VAL="\[\"*\"\]"

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": '${POL_SETTING_VAL}',' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'.*/\"'${POL_SETTING}'\": '${POL_SETTING_VAL}',/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_disable_plugin_blacklist:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_disable_plugin_blacklist_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_disable_popups" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Disable Popups</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Chromium allows you to manage whether or not unwanted pop-up windows appear.
To disable pop-ups, set <html:code>DefaultPopupsSetting</html:code> to <html:code>2</html:code> 
in the Chromium policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0004</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">Pop-up windows should be disabled to prevent malicious websites from controlling
pop-up windows or fooling users into clicking on the wrong window.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_disable_popups">CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="DefaultPopupsSetting"
POL_SETTING_VAL="2"

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": '${POL_SETTING_VAL}',' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'.*/\"'${POL_SETTING}'\": '${POL_SETTING_VAL}',/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_disable_popups:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_disable_popups_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_disable_protocol_schemas" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Disable Insecure And Obsolete Protocol Schemas</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Each access to a URL is handled by the browser according to the URL's "scheme".
The "scheme" of a URL is the section before the ":". The term "protocol" is often
mistakenly used for a "scheme". The difference is that the scheme is how the browser
handles a URL and the protocol is how the browser communicates with a service. To
disable insecure and obsolete protocol schema, set <html:code>URLBlacklist</html:code> to
<html:code><xccdf-1.1:sub idref="var_url_blacklist" /></html:code> in the Chromium policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0021</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">If a scheme or its associated protocol used by a browser is insecure or obsolete,
vulnerabilities can be exploited resulting in exposed data or unrestricted access
to the browser's system.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_disable_protocol_schemas">
var_url_blacklist="<xccdf-1.1:sub idref="var_url_blacklist" />"


CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="URLBlacklist"
POL_SETTING_VAL=$(echo ${var_url_blacklist}| sed 's/\//\\\/\\/')

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": \["'${var_url_blacklist}'"\],' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'.*/\"'${POL_SETTING}'\": \[\"'${POL_SETTING_VAL}'\"\],/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-export export-name="oval:ssg-var_url_blacklist:var:1" value-id="var_url_blacklist" /><xccdf-1.1:check-content-ref name="oval:ssg-chromium_disable_protocol_schemas:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_disable_protocol_schemas_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_disable_saved_passwords" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Disable Saved Passwords</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Disable by setting <html:code>ImportSavedPasswords</html:code> to <html:code>false</html:code> in the Chromium
policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0029</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">Importing of saved passwords should be disabled as it could lead to
unencrypted account passwords stored on the system from another browser
to be viewed.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_disable_saved_passwords">CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="ImportSavedPasswords"
POL_SETTING_VAL="false"

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": '${POL_SETTING_VAL}',' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'.*/\"'${POL_SETTING}'\": '${POL_SETTING_VAL}',/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_disable_saved_passwords:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_disable_saved_passwords_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_disable_search_suggestions" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Disable Search Suggestion</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Chromium tries to guess what users are searching for when users enter
search data in the search Omnibox. This should be disabled by 
setting <html:code>SearchSuggestEnabled</html:code> to <html:code>false</html:code> in the Chromium 
policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0027</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">Search suggestion should be disabled as it could lead to searches being conducted
that were never intended to be made.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_disable_search_suggestions">CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="SearchSuggestEnabled"
POL_SETTING_VAL="false"

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": '${POL_SETTING_VAL}',' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'.*/\"'${POL_SETTING}'\": '${POL_SETTING_VAL}',/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_disable_search_suggestions:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_disable_search_suggestions_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_disable_session_cookies" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Disable Session Cookies</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">To disable session only cookies sites, set <html:code>CookiesSessionOnlyForUrls</html:code>
to <html:code>none</html:code> in the Chromium policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0045</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">Cookies should only be allowed per session and only for approved URLs as 
permanently stored cookies can be used for malicious intent.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_disable_session_cookies">CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="CookiesSessionOnlyForUrls"
POL_SETTING_VAL="none"

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": \["'${POL_SETTING_VAL}'"\],' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'.*/\"'${POL_SETTING}'\": \[\"'${POL_SETTING_VAL}'\"\],/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_disable_session_cookies:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_disable_session_cookies_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_disable_thirdparty_cookies" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Disable 3rd Party Cookies</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Third party cookies should be be enabled. To disable third party cookies,
set <html:code>BlockThirdPartyCookies</html:code> to <html:code>true</html:code> in the Chromium policy
file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0015</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">Third party cookies are cookies which can be set by web page elements that
are not from the domain that is in the browser's address bar. This prevents
cookies from being set by web page elements that are not from the domain
that is in the browser's address bar.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_disable_thirdparty_cookies">CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="BlockThirdPartyCookies"
POL_SETTING_VAL="true"

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": '${POL_SETTING_VAL}',' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'.*/\"'${POL_SETTING}'\": '${POL_SETTING_VAL}',/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_disable_thirdparty_cookies:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_disable_thirdparty_cookies_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_disallow_location_tracking" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Disable Location Tracking</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Location tracking is enabled by default and can track user's browsing habits.
Location tracking should be disabled by setting <html:code>DefaultGeolocationSetting</html:code> 
to <html:code>2</html:code> in the Chromium policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0002</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">Website tracking is the practice of gathering information as to which websites
were accesses by a browser. The common method of doing this is to have a website
create a tracking cookie on the browser. If the information of what sites are
being accessed is made available to unauthorized persons, this violates 
confidentiality requirements, and over time poses a significant OPSEC issue.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_disallow_location_tracking">CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="DefaultGeolocationSetting"
POL_SETTING_VAL="2"

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": '${POL_SETTING_VAL}',' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'.*/\"'${POL_SETTING}'\": '${POL_SETTING_VAL}',/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_disallow_location_tracking:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_disallow_location_tracking_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_enable_approved_plugins" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Enable Only Approved Plugins</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">An organization might need to use an internal or third party developed plugins. Any
organizationally approved plugin should be enabled. To enable approved plugins,
set <html:code>EnabledPlugins</html:code> to the list of organizationally approved plugins
in the Chromium policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0035</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">The whitelist should only contain organizationally approved plugins. This is to prevent
a user from accidently whitelisitng a malicious plugin.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_enable_approved_plugins">
var_enable_approved_plugins="<xccdf-1.1:sub idref="var_enable_approved_plugins" />"


CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="EnabledPlugins"
POL_SETTING_VAL=$(echo ${var_enable_approved_plugins} | sed 's/\//\\\/\\/')

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": \['${var_enable_approved_plugins}'\],' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'\".*/\"'${POL_SETTING}'\": \['${POL_SETTING_VAL}'\],/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_enable_approved_plugins:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_enable_approved_plugins_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_enable_browser_history" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Enable Saving the Browser History</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Users can enable or disable the saving of browser history in Chromium. Browser
history should be retained by setting <html:code>SavingBrowserHistoryDisabled</html:code> to
<html:code>false</html:code> in the Chromium policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0039</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">Best practice requires that browser history is retained.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_enable_browser_history">CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="SavingBrowserHistoryDisabled"
POL_SETTING_VAL="false"

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": '${POL_SETTING_VAL}',' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'.*/\"'${POL_SETTING}'\": '${POL_SETTING_VAL}',/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_enable_browser_history:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_enable_browser_history_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_enable_encrypted_searching" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Enable Encrypted Searching</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Specifies the URL of the search engine used when doing a default search.
The URL should contain the string <html:code>{searchTerms}</html:code>. To set the URL of the
search engine, set <html:code>DefaultSearchProviderSearchURL</html:code> to
<html:code><xccdf-1.1:sub idref="var_enable_encrypted_searching" /></html:code> in the Chromium policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0008</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">When doing internet searches, it is important to use an encrypted connection via https.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_enable_encrypted_searching">
var_enable_encrypted_searching="<xccdf-1.1:sub idref="var_enable_encrypted_searching" />"


CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="DefaultSearchProviderSearchURL"
POL_SETTING_VAL=$(echo ${var_enable_encrypted_searching} | sed 's/\//\\\/\\/')

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": "'${var_enable_encrypted_searching}'",' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's;\"'${POL_SETTING}'\".*;\"'${POL_SETTING}'\": \"'${POL_SETTING_VAL}'\",;g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-export export-name="oval:ssg-var_enable_encrypted_searching:var:1" value-id="var_enable_encrypted_searching" /><xccdf-1.1:check-content-ref name="oval:ssg-chromium_enable_encrypted_searching:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_enable_encrypted_searching_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_enable_safe_browsing" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Enable the Safe Browsing Feature</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Chromium has the capability to check URLs for known malware and phishing 
associated with websites through the Safe Browsing Feature. This can be 
enabled by setting <html:code>SafeBrowsingEnabled</html:code> to <html:code>true</html:code> in the Chromium
policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0038</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">Safe browsing uses a signature database to test sites when they are be loaded
to ensure that sites do not contain any known malware.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_enable_safe_browsing">CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="SafeBrowsingEnabled"
POL_SETTING_VAL="true"

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": '${POL_SETTING_VAL}',' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'.*/\"'${POL_SETTING}'\": '${POL_SETTING_VAL}',/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_enable_safe_browsing:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_enable_safe_browsing_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_extension_whitelist" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Enable Only Approved Extensions</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">An organization might need to use an internal or third party developed extension. Any
organizationally approved extenstion should be enabled. To enable approved extensions,
set <html:code>ExtensionInstallWhitelist</html:code> to <html:code><xccdf-1.1:sub idref="var_extension_whitelist" /></html:code>
in the Chromium policy file.
If there are no approved extensions, <html:code>ExtensionInstallWhitelist</html:code> should be set to
<html:code><xccdf-1.1:sub idref="var_extension_whitelist" selector="default" /></html:code>.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0003</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">The whitelist should only contain organizationally approved extensions. This is to prevent
a user from accidently whitelisitng a malicious extension.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_extension_whitelist">
var_extension_whitelist="<xccdf-1.1:sub idref="var_extension_whitelist" />"


CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="ExtensionInstallWhitelist"
POL_SETTING_VAL=$(echo ${var_extension_whitelist} | sed 's/\//\\\/\\/')

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": "'${var_extension_whitelist}'",' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'\".*/\"'${POL_SETTING}'\": \"'${POL_SETTING_VAL}'\",/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-export export-name="oval:ssg-var_extension_whitelist:var:1" value-id="var_extension_whitelist" /><xccdf-1.1:check-content-ref name="oval:ssg-chromium_extension_whitelist:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_extension_whitelist_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_http_authentication" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Set Chromium's HTTP Authentication Scheme</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">To set the default Chromium's HTTP Authentication Scheme, set 
<html:code>AuthSchemes</html:code> to <html:code><xccdf-1.1:sub idref="var_auth_schemes" /></html:code> in the 
Chromium policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0012</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">Specifies which HTTP Authentication schemes are supported by Google Chromium.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_http_authentication">
var_auth_schema="<xccdf-1.1:sub idref="var_auth_schema" />"


CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="AuthSchemes"

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": "'${var_auth_schemes}'",' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'.*/\"'${POL_SETTING}'\": \"'${var_auth_schemes}'\",/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-export export-name="oval:ssg-var_auth_schema:var:1" value-id="var_auth_schema" /><xccdf-1.1:check-content-ref name="oval:ssg-chromium_http_authentication:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_http_authentication_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_plugins_require_authorization" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Require Outdated Plugins to be Authorized</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Chromium should prompt users for authorization to run outdated plugins. This
can be enabled by setting <html:code>AlwaysAuthorizePlugins</html:code> to <html:code>false</html:code>
in the Chromium policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0014</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">Outdated plugins can compromise security and should request authorization from
the user before running.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_plugins_require_authorization">CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="AlwaysAuthorizePlugins"
POL_SETTING_VAL="false"

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": '${POL_SETTING_VAL}',' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'.*/\"'${POL_SETTING}'\": '${POL_SETTING_VAL}',/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_plugins_require_authorization:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_plugins_require_authorization_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_policy_file" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Ensure the Chromium Policy Configuration File Exists</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">Chromium can be configured with numerous policies and settings. These
settings can be set so that a user is unable to edit or change them.
To prevent users from setting or changing Chromium settings, a 
<html:code>JavaScript Object Notation (JSON)</html:code> file (contains the <html:code>.json</html:code>
extension) must exist in <html:code>/etc/chromium/policies/managed</html:code>.
<html:br /><html:br />
<html:ul><html:li>Refer to https://www.chromium.org/administrators/policy-list-3 for
a list of currently supported Chromium policies.</html:li></html:ul>
<html:ul><html:li>Refer to https://www.chromium.org/administrators/policy_templates for
pre-created Chromium <html:code>JSON</html:code> policy files.</html:li></html:ul>
<html:br /></xccdf-1.1:description>
      <xccdf-1.1:warning xml:lang="en-US" category="general">If the <html:code>.json</html:code> file in
<html:code>/etc/chromium/policies/managed</html:code> is not formatted correctly,
no policies will be configured or set correctly.</xccdf-1.1:warning>
      <xccdf-1.1:rationale xml:lang="en-US">The Chromium policy file must exist as this file contains configuration 
settings set by the System's Administrator to meet organization and/or 
security requirements.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_policy_file">CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"

if [ ! -d ${CHROME_POL_DIR} ] ; then
   mkdir -p -m 755 ${CHROME_POL_DIR}
fi

if [ ! -f ${CHROME_POL_DIR}/${CHROME_POL_FILE} ] ; then
   touch ${CHROME_POL_DIR}/${CHROME_POL_FILE}
   chmod 644 ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi

grep -q -E '^\{' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
if ! [ $? -eq 0 ] ; then
   if [ -s ${CHROME_POL_DIR}/${CHROME_POL_FILE} ] ; then
      sed -i '1s/^/\{\n/' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
   else
      echo -e "{" &gt;&gt; ${CHROME_POL_DIR}/${CHROME_POL_FILE}
   fi
fi

tail -1 ${CHROME_POL_DIR}/${CHROME_POL_FILE} | grep -q -E '^\}'
if ! [ $? -eq 0 ] ; then
   echo -e "}" &gt;&gt; ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi 
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_policy_file:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_policy_file_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_trusted_home_page" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Set the Default Home Page</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">When a browser is started the first web page displayed is the "home page".
While the home page can be selected by the user, the default home page needs
to be defined to display an approved page. To set the default home page,
set <html:code>HomepageLocation</html:code> to <html:code><xccdf-1.1:sub idref="var_trusted_home_page" /></html:code>
in the Chromium policy file.</xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0048</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">If no home page is defined then there is a possibility that a URL to a malicious
site may be used as a home page which could effectively cause a denial of service
to the browser.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_trusted_home_page">
var_trusted_home_page="<xccdf-1.1:sub idref="var_trusted_home_page" />"


CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="HomepageLocation"
POL_SETTING_VAL=$(echo ${var_trusted_home_page} | sed 's/\//\\\/\\/')

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": "'${var_trusted_home_page}'",' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'\".*/\"'${POL_SETTING}'\": \"'${POL_SETTING_VAL}'\",/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-export export-name="oval:ssg-var_trusted_home_page:var:1" value-id="var_trusted_home_page" /><xccdf-1.1:check-content-ref name="oval:ssg-chromium_trusted_home_page:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_trusted_home_page_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
    <xccdf-1.1:Rule id="chromium_whitelist_plugin_urls" selected="false" severity="unknown">
      <xccdf-1.1:title xml:lang="en-US">Enable Plugins for Only Approved URLs</xccdf-1.1:title>
      <xccdf-1.1:description xml:lang="en-US">In some cases, plugins utilized by organizationally approved websites may be allowed
to be used by those websites, configure the approved URLs allowed to run plugins by
setting <html:code>PluginsAllowedForUrls</html:code> to organizationally approved URLs
in the Chromium policy file. If there are no approved URLs, this should be set
to <html:code>none</html:code></xccdf-1.1:description>
      <xccdf-1.1:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Cbrowser-guidance">DTBC0051</xccdf-1.1:reference>
      <xccdf-1.1:rationale xml:lang="en-US">Only approved plugins for approved sites should be allowed to be utilized.</xccdf-1.1:rationale>
      <xccdf-1.1:fix system="urn:xccdf:fix:script:sh" id="chromium_whitelist_plugin_urls">CHROME_POL_FILE="chrome_stig_policy.json"
CHROME_POL_DIR="/etc/chromium/policies/managed/"
POL_SETTING="PluginsAllowedForUrls"
POL_SETTING_VAL="none"

grep -q ${POL_SETTING} ${CHROME_POL_DIR}/${CHROME_POL_FILE}

if ! [ $? -eq 0 ] ; then
   sed -i -e '/{/a \  "'${POL_SETTING}'": "'${POL_SETTING_VAL}'",' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
else
   sed -i -e 's/\"'${POL_SETTING}'\".*/\"'${POL_SETTING}'\": \"'${POL_SETTING_VAL}'\",/g' ${CHROME_POL_DIR}/${CHROME_POL_FILE}
fi
</xccdf-1.1:fix>
      <xccdf-1.1:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <xccdf-1.1:check-content-ref name="oval:ssg-chromium_whitelist_plugin_urls:def:1" href="oval-linked.xml" />
      </xccdf-1.1:check>
      <xccdf-1.1:check system="http://scap.nist.gov/schema/ocil/2">
        <xccdf-1.1:check-content-ref href="ocil-linked.xml" name="ocil:ssg-chromium_whitelist_plugin_urls_ocil:questionnaire:1" />
      </xccdf-1.1:check>
    </xccdf-1.1:Rule>
  </xccdf-1.1:Group>
</xccdf-1.1:Benchmark>