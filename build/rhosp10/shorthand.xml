<?xml version="1.0"?>
<Benchmark xmlns:html="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:dc="http://purl.org/dc/elements/1.1/" id="product-name" xsi:schemaLocation="http://checklists.nist.gov/xccdf/1.1 xccdf-1.1.4.xsd" style="SCAP_1.1" resolved="false" xml:lang="en-US">
  <status date="2021-09-19">draft</status>
  <title>Guide to the Secure Configuration of Red Hat OpenStack Platform 10</title>
  <description>This guide presents a catalog of security-relevant
configuration settings for Red Hat OpenStack Platform 10. It is a rendering of
content structured in the eXtensible Configuration Checklist Description Format (XCCDF)
in order to support security automation.  The SCAP content is
is available in the <tt>scap-security-guide</tt> package which is developed at

    <html:a href="https://www.open-scap.org/security-policies/scap-security-guide">https://www.open-scap.org/security-policies/scap-security-guide</html:a>.
<br/><br/>
Providing system administrators with such guidance informs them how to securely
configure systems under their control in a variety of network roles. Policy
makers and baseline creators can use this catalog of settings, with its
associated references to higher-level security control catalogs, in order to
assist them in security baseline creation. This guide is a <em>catalog, not a
checklist</em>, and satisfaction of every item is not likely to be possible or
sensible in many operational scenarios. However, the XCCDF format enables
granular selection and adjustment of settings, and their association with OVAL
and OCIL content provides an automated checking capability. Transformations of
this document, and its associated automated checking content, are capable of
providing baselines that meet a diverse set of policy objectives. Some example
XCCDF <em>Profiles</em>, which are selections of items that form checklists and
can be used as baselines, are available with this guide. They can be
processed, in an automated fashion, with tools that support the Security
Content Automation Protocol (SCAP). The NIST National Checklist Program (NCP),
which provides required settings for the United States Government, is one example
of a baseline created from this guidance.
</description>
  <notice id="terms_of_use">Do not attempt to implement any of the settings in
this guide without first testing them in a non-operational environment. The
creators of this guidance assume no responsibility whatsoever for its use by
other parties, and makes no guarantees, expressed or implied, about its
quality, reliability, or any other characteristic.
</notice>
  <front-matter>The ComplianceAsCode Project<br/>

    <html:a href="https://www.open-scap.org/security-policies/scap-security-guide">https://www.open-scap.org/security-policies/scap-security-guide</html:a>
</front-matter>
  <rear-matter>Red Hat and Red Hat Enterprise Linux are either registered
trademarks or trademarks of Red Hat, Inc. in the United States and other
countries. All other names are registered trademarks or trademarks of their
respective companies.
</rear-matter>
  <platform idref="cpe:/a:redhat:openstack:10"/>
  <version>0.9</version>
  <metadata/>
  <Profile id="cui">
    <title override="true">[DRAFT] Controlled Unclassified Infomration (CUI) Profile for Red Hat OpenStack Plaform 10</title>
    <description override="true">These are the controls for scanning against CUI for rhosp10</description>
    <select idref="cinder_conf_file_perms" selected="true"/>
    <select idref="cinder_file_ownership" selected="true"/>
    <select idref="cinder_file_perms" selected="true"/>
    <select idref="cinder_glance_tls" selected="true"/>
    <select idref="cinder_nas_secure_file_permissions" selected="true"/>
    <select idref="cinder_nova_tls" selected="true"/>
    <select idref="cinder_osapi_max_request_body" selected="true"/>
    <select idref="cinder_tls_enabled" selected="true"/>
    <select idref="cinder_using_keystone" selected="true"/>
    <select idref="horizon_csrf_cookie_secure" selected="true"/>
    <select idref="horizon_disable_password_reveal" selected="true"/>
    <select idref="horizon_file_ownership" selected="true"/>
    <select idref="horizon_file_perms" selected="true"/>
    <select idref="horizon_password_autocomplete" selected="true"/>
    <select idref="horizon_session_cookie_httponly" selected="true"/>
    <select idref="horizon_session_cookie_secure" selected="true"/>
    <select idref="horizon_use_ssl" selected="true"/>
    <select idref="keystone_algorithm_hashing" selected="true"/>
    <select idref="keystone_disable_admin_token" selected="true"/>
    <select idref="keystone_disable_user_account_days_inactive" selected="true"/>
    <select idref="keystone_file_ownership" selected="true"/>
    <select idref="keystone_file_perms" selected="true"/>
    <select idref="keystone_lockout_duration" selected="true"/>
    <select idref="keystone_lockout_failure_attempts" selected="true"/>
    <select idref="keystone_max_request_body_size" selected="true"/>
    <select idref="keystone_use_ssl" selected="true"/>
    <select idref="neutron_api_use_ssl" selected="true"/>
    <select idref="neutron_file_ownership" selected="true"/>
    <select idref="neutron_file_perms" selected="true"/>
    <select idref="neutron_use_https" selected="true"/>
    <select idref="neutron_use_keystone" selected="true"/>
    <select idref="nova_file_ownership" selected="true"/>
    <select idref="nova_file_perms" selected="true"/>
    <select idref="nova_secure_authentication" selected="true"/>
    <select idref="nova_secure_glance" selected="true"/>
    <select idref="nova_use_keystone" selected="true"/>
    <refine-value idref="var_keystone_lockout_failure_attempts" selector="3"/>
    <refine-value idref="var_keystone_lockout_duration" selector="15_minutes"/>
    <refine-value idref="var_keystone_disable_user_account_days_inactive" selector="90"/>
  </Profile>
  <Profile id="stig">
    <title override="true">[DRAFT] STIG for Red Hat OpenStack Plaform 10</title>
    <description override="true">Controls for scanning against classified STIG for rhosp10</description>
    <select idref="cinder_conf_file_perms" selected="true"/>
    <select idref="cinder_file_ownership" selected="true"/>
    <select idref="cinder_file_perms" selected="true"/>
    <select idref="cinder_glance_tls" selected="true"/>
    <select idref="cinder_nas_secure_file_permissions" selected="true"/>
    <select idref="cinder_nova_tls" selected="true"/>
    <select idref="cinder_osapi_max_request_body" selected="true"/>
    <select idref="cinder_tls_enabled" selected="true"/>
    <select idref="cinder_using_keystone" selected="true"/>
    <select idref="horizon_csrf_cookie_secure" selected="true"/>
    <select idref="horizon_disable_password_reveal" selected="true"/>
    <select idref="horizon_file_ownership" selected="true"/>
    <select idref="horizon_file_perms" selected="true"/>
    <select idref="horizon_password_autocomplete" selected="true"/>
    <select idref="horizon_session_cookie_httponly" selected="true"/>
    <select idref="horizon_session_cookie_secure" selected="true"/>
    <select idref="horizon_use_ssl" selected="true"/>
    <select idref="keystone_algorithm_hashing" selected="true"/>
    <select idref="keystone_disable_admin_token" selected="true"/>
    <select idref="keystone_disable_user_account_days_inactive" selected="true"/>
    <select idref="keystone_file_ownership" selected="true"/>
    <select idref="keystone_file_perms" selected="true"/>
    <select idref="keystone_lockout_duration" selected="true"/>
    <select idref="keystone_lockout_failure_attempts" selected="true"/>
    <select idref="keystone_max_request_body_size" selected="true"/>
    <select idref="keystone_use_ssl" selected="true"/>
    <select idref="neutron_api_use_ssl" selected="true"/>
    <select idref="neutron_file_ownership" selected="true"/>
    <select idref="neutron_file_perms" selected="true"/>
    <select idref="neutron_use_https" selected="true"/>
    <select idref="neutron_use_keystone" selected="true"/>
    <select idref="nova_file_ownership" selected="true"/>
    <select idref="nova_file_perms" selected="true"/>
    <select idref="nova_secure_authentication" selected="true"/>
    <select idref="nova_secure_glance" selected="true"/>
    <select idref="nova_use_keystone" selected="true"/>
    <refine-value idref="var_keystone_lockout_failure_attempts" selector="3"/>
    <refine-value idref="var_keystone_lockout_duration" selector="15_minutes"/>
    <refine-value idref="var_keystone_disable_user_account_days_inactive" selector="90"/>
  </Profile>
  <Value id="conditional_clause" type="string">
    <title>A conditional clause for check statements.</title>
    <description>A conditional clause for check statements.</description>
    <value selector="">This is a placeholder</value>
  </Value>
  <Group id="remediation_functions">
    <title>Remediation functions used by the SCAP Security Guide Project</title>
    <description>XCCDF form of the various remediation functions as used by remediation scripts from the SCAP Security Guide Project.</description>
  </Group>
  <Group id="intro">
    <title>Introduction</title>
    <description>The purpose of this guidance is to provide security configuration
recommendations and baselines for Red Hat OpenStack Platform 10.
The guide is intended for system and/or application administrators. Readers are assumed to
possess basic system administration skills for the application's operating systems, as well
as some familiarity with the product's documentation and administration
conventions. Some instructions within this guide are complex.
All directions should be followed completely and with understanding of
their effects in order to avoid serious adverse effects on the system
and its security.</description>
    <Group id="general-principles">
      <title>General Principles</title>
      <description>The following general principles motivate much of the advice in this
guide and should also influence any configuration decisions that are
not explicitly covered.</description>
      <Group id="principle-encrypt-transmitted-data">
        <title>Encrypt Transmitted Data Whenever Possible</title>
        <description>Data transmitted over a network, whether wired or wireless, is susceptible
to passive monitoring. Whenever practical solutions for encrypting
such data exist, they should be applied. Even if data is expected to
be transmitted only over a local network, it should still be encrypted.
Encrypting authentication data, such as passwords, is particularly
important. Networks of Red Hat OpenStack Platform 10 machines can and should be configured
so that no unencrypted authentication data is ever transmitted between
machines.</description>
      </Group>
      <Group id="principle-least-privilege">
        <title>Least Privilege</title>
        <description>Grant the least privilege necessary for user accounts and software to perform tasks.
For example, <tt>sudo</tt> can be implemented to limit authorization to super user
accounts on the system only to designated personnel. Another example is to limit
logins on server systems to only those administrators who need to log into them in
order to perform administration tasks.</description>
      </Group>
      <Group id="principle-separate-servers">
        <title>Run Different Network Services on Separate Systems</title>
        <description>Whenever possible, a server should be dedicated to serving exactly one
network service. This limits the number of other services that can
be compromised in the event that an attacker is able to successfully
exploit a software flaw in one network service.</description>
      </Group>
      <Group id="principle-use-security-tools">
        <title>Configure Security Tools to Improve System Robustness</title>
        <description>Several tools exist which can be effectively used to improve a system's
resistance to and detection of unknown attacks. These tools can improve
robustness against attack at the cost of relatively little configuration
effort.</description>
      </Group>
    </Group>
    <Group id="how-to-use">
      <title>How to Use This Guide</title>
      <description>Readers should heed the following points when using the guide.</description>
      <Group id="intro-formatting-conventions">
        <title>Formatting Conventions</title>
        <description>Commands intended for shell execution, as well as configuration file text,
are featured in a <tt>monospace font</tt>. <i>Italics</i> are used
to indicate instances where the system administrator must substitute
the appropriate information into a command or configuration file.</description>
      </Group>
      <Group id="intro-read-sections-completely">
        <title>Read Sections Completely and in Order</title>
        <description>Each section may build on information and recommendations discussed in
prior sections. Each section should be read and understood completely;
instructions should never be blindly applied. Relevant discussion may
occur after instructions for an action.</description>
      </Group>
      <Group id="intro-reboot-required">
        <title>Reboot Required</title>
        <description>A system or service reboot is implicitly required after some actions in order to
complete the reconfiguration of the system. In many cases, the changes
will not take effect until a reboot is performed. In order to ensure
that changes are applied properly and to test functionality, always
reboot the system after applying a set of recommendations from this guide.</description>
      </Group>
      <Group id="intro-root-shell-assumed">
        <title>Root Shell Environment Assumed</title>
        <description>Most of the actions listed in this document are written with the
assumption that they will be executed by the root user running the
<tt>/bin/bash</tt> shell. Commands preceded with a hash mark (#)
assume that the administrator will execute the commands as root, i.e.
apply the command via <tt>sudo</tt> whenever possible, or use
<tt>su</tt> to gain root privileges if <tt>sudo</tt> cannot be
used. Commands which can be executed as a non-root user are are preceded
by a dollar sign ($) prompt.</description>
      </Group>
      <Group id="intro-test-non-production">
        <title>Test in Non-Production Environment</title>
        <description>This guidance should always be tested in a non-production environment
before deployment. This test environment should simulate the setup in
which the system will be deployed as closely as possible.</description>
      </Group>
    </Group>
  </Group>
  <Group id="openshift" prodtype="ocp4">
    <title>OpenShift Settings</title>
    <description>Each section of this configuration guide includes information about the default configuration
of an OpenShift cluster and a set of recommendations for hardening the configuration. For each
hardening recommendation, information on how to implement the control and/or how to verify or audit
the control is provided. In some cases, remediation information is also provided.

Many of the settings in the hardening guide are in place by default. The audit information for these
settings is provided in order to verify that the cluster admininstrator has not made changes that
would be less secure than the OpenShift defaults. A small number of items require configuration.

Finally, there are some recommendations that require decisions by the system operator, such as audit
log size, retention, and related settings.</description>
    <Value id="ocp_data_root" type="string">
      <title>Root of files obtained from OCP nodes</title>
      <description>When scanning OpenShift clusters, some settings are not exposed as files.
In the case that they are exported from the cluster (typically as yaml files),
this variable determines the directory where they will end up.</description>
      <value>/kubernetes-api-resources</value>
    </Value>
    <Group id="integrity" prodtype="ocp4">
      <title>System and Software Integrity</title>
      <description>System and software integrity can be gained by installing antivirus, increasing
system encryption strength with FIPS, verifying installed software, enabling SELinux,
installing an Intrusion Prevention System, etc. However, installing or enabling integrity
checking tools cannot <i>prevent</i> intrusions, but they can detect that an intrusion
may have occurred. Requirements for integrity checking may be highly dependent on
the environment in which the system will be used.</description>
      <Group id="crypto" prodtype="ocp4">
        <title>System Cryptographic Policies</title>
        <description>OpenShift has the capability to centrally configure cryptographic polices.</description>
      </Group>
    </Group>
    <Group id="accounts" prodtype="ocp4">
      <title>OpenShift - Account and Access Control</title>
      <description>In traditional Unix security, if an attacker gains
shell access to a certain login account, they can perform any action
or access any file to which that account has access. The same
idea applies to cloud technology such as OpenShift. Therefore,
making it more difficult for unauthorized people to gain shell
access to accounts, particularly to privileged accounts, is a
necessary part of securing a system. This section introduces
mechanisms for restricting access to accounts under
OpenShift.</description>
    </Group>
    <Group id="api-server" prodtype="ocp4">
      <title>OpenShift Kube API Server</title>
      <description>This section contains recommendations for kube-apiserver configuration.</description>
      <Value id="var_api_min_request_timeout" type="string">
        <title>API Server Request Timeout</title>
        <description>Enter API Server Request Timeout</description>
        <value selector="300">300</value>
        <value>3600</value>
      </Value>
    </Group>
    <Group id="authentication" prodtype="ocp4">
      <title>Authentication</title>
      <description>In cloud workloads, there are many ways to create and configure
to multiple authentication services. Some of these authentication
methods by not be secure or common methodologies, or they may not
be secure by default. This section introduces mechanisms for
configuring authentication systems to OpenShift.</description>
      <Value id="var_oauth_inactivity_timeout" type="string">
        <title>OAuth Token Inactivity Timeout</title>
        <description>Enter OAuth Token Inactivity Timeout</description>
        <value selector="10m0s">10m0s</value>
        <value>10m0s</value>
      </Value>
    </Group>
    <Group id="controller" prodtype="ocp4">
      <title>OpenShift Controller Settings</title>
      <description>This section contains recommendations for the kube-controller-manager configuration</description>
    </Group>
    <Group id="etcd" prodtype="ocp4">
      <title>OpenShift etcd Settings</title>
      <description>Contains rules that check correct OpenShift etcd settings.</description>
    </Group>
    <Group id="general" prodtype="ocp4">
      <title>OpenShift - General Security Practices</title>
      <description>Contains evaluations for general security practices for operating an OpenShift environment.</description>
    </Group>
    <Group id="kubelet" prodtype="ocp4">
      <title>Kubernetes Kubelet Settings</title>
      <description>The Kubernetes Kubelet is an agent that runs on each node in the cluster. It
makes sure that containers are running in a pod.

The kubelet takes a set of PodSpecs that are provided through various
mechanisms and ensures that the containers described in those PodSpecs are
running and healthy. The kubelet doesn&#x2019;t manage containers which were not
created by Kubernetes.</description>
      <Value id="var_event_record_qps" type="number">
        <title>Configure Kubelet Event Limit</title>
        <description>Maximum event creations per second.</description>
        <value>5</value>
      </Value>
      <Value id="var_kube_authorization_mode" type="string">
        <title>kubelet - Authorization Options</title>
        <description>ABAC - Attribute-Based Access Control (ABAC) mode allows you to configure policies using local files.
<br/>RBAC - Role-based access control (RBAC) mode allows you to create and store policies using the Kubernetes API.
<br/>Webhook - WebHook is an HTTP callback mode that allows you to manage authorization using a remote REST endpoint.
<br/>Node Node - authorization is a special-purpose authorization mode that specifically authorizes API requests made by kubelets.
<br/>AlwaysDeny - This flag blocks all requests. Use this flag only for testing.</description>
        <value>Webhook</value>
        <value selector="abac">ABAC</value>
        <value selector="rbac">RBAC</value>
        <value selector="webhook">Webhook</value>
        <value selector="node">Node</value>
        <value selector="alwaysdeny">AlwaysDeny</value>
      </Value>
      <Value id="var_kubelet_evictionhard_imagefs_available" type="string">
        <title>Configure Kubelet EvictonHard Image FS Avilable</title>
        <description>Image FS Available for the EvictonHard threshold to trigger.</description>
        <value>10%</value>
        <value selector="5pc">5%</value>
        <value selector="10pc">10%</value>
        <value selector="15pc">15%</value>
        <value selector="20pc">20%</value>
      </Value>
      <Value id="var_kubelet_evictionhard_imagefs_inodesfree" type="string">
        <title>Configure Kubelet EvictonHard Image FS inodes Free</title>
        <description>Image FS inodes Free for the EvictonHard threshold to trigger.</description>
        <value>5%</value>
        <value selector="5pc">5%</value>
        <value selector="10pc">10%</value>
        <value selector="15pc">15%</value>
        <value selector="20pc">20%</value>
      </Value>
      <Value id="var_kubelet_evictionhard_memory_available" type="string">
        <title>Configure Kubelet EvictonHard Memory Avilable</title>
        <description>Memory Available for the EvictonHard threshold to trigger.</description>
        <value>200Mi</value>
      </Value>
      <Value id="var_kubelet_evictionhard_nodefs_available" type="string">
        <title>Configure Kubelet EvictonHard NodeFS Available</title>
        <description>Node FS Available for the EvictonHard threshold to trigger.</description>
        <value>5%</value>
        <value selector="5pc">5%</value>
        <value selector="10pc">10%</value>
        <value selector="15pc">15%</value>
        <value selector="20pc">20%</value>
      </Value>
      <Value id="var_kubelet_evictionhard_nodefs_inodesfree" type="string">
        <title>Configure Kubelet EvictonHard Node FS inodes Free</title>
        <description>Node FS inodes Free for the EvictonHard threshold to trigger.</description>
        <value>4%</value>
        <value selector="4pc">4%</value>
        <value selector="5pc">5%</value>
        <value selector="10pc">10%</value>
        <value selector="15pc">15%</value>
        <value selector="20pc">20%</value>
      </Value>
      <Value id="var_kubelet_evictionsoft_imagefs_available" type="string">
        <title>Configure Kubelet EvictionSoft Image FS Avilable</title>
        <description>Image FS Available for the EvictionSoft threshold to trigger.</description>
        <value>15%</value>
        <value selector="5pc">5%</value>
        <value selector="10pc">10%</value>
        <value selector="15pc">15%</value>
        <value selector="20pc">20%</value>
      </Value>
      <Value id="var_kubelet_evictionsoft_imagefs_inodesfree" type="string">
        <title>Configure Kubelet EvictionSoft Image FS inodes Free</title>
        <description>Image FS inodes Free for the EvictionSoft threshold to trigger.</description>
        <value>10%</value>
        <value selector="5pc">5%</value>
        <value selector="10pc">10%</value>
        <value selector="15pc">15%</value>
        <value selector="20pc">20%</value>
      </Value>
      <Value id="var_kubelet_evictionsoft_memory_available" type="string">
        <title>Configure Kubelet EvictionSoft Memory Avilable</title>
        <description>Memory Available for the EvictionSoft threshold to trigger.</description>
        <value>500Mi</value>
      </Value>
      <Value id="var_kubelet_evictionsoft_nodefs_available" type="string">
        <title>Configure Kubelet EvictionSoft NodeFS Available</title>
        <description>Node FS Available for the EvictionSoft threshold to trigger.</description>
        <value>10%</value>
        <value selector="5pc">5%</value>
        <value selector="10pc">10%</value>
        <value selector="15pc">15%</value>
        <value selector="20pc">20%</value>
      </Value>
      <Value id="var_kubelet_evictionsoft_nodefs_inodesfree" type="string">
        <title>Configure Kubelet EvictionSoft Node FS inodes Free</title>
        <description>Node FS inodes Free for the EvictionSoft threshold to trigger.</description>
        <value>5%</value>
        <value selector="5pc">5%</value>
        <value selector="10pc">10%</value>
        <value selector="15pc">15%</value>
        <value selector="20pc">20%</value>
      </Value>
      <Value id="var_streaming_connection_timeouts" type="string" interactive="true">
        <title>Streaming Connection Timeout Options</title>
        <description>Time until connection timeouts. Use (s) for seconds, (m) for minutes,
and (h) for hours.</description>
        <value>5m</value>
        <value selector="5min">5m</value>
        <value selector="10min">10m</value>
        <value selector="30min">30m</value>
        <value selector="1hour">1h</value>
        <value selector="2hours">2h</value>
        <value selector="4hours">4h</value>
        <value selector="6hours">6h</value>
        <value selector="8hours">8h</value>
      </Value>
    </Group>
    <Group id="logging" prodtype="ocp4">
      <title>OpenShift - Logging Settings</title>
      <description>Contains evaluations for the cluster's logging configuration settings.</description>
      <Value id="var_openshift_audit_profile" type="string">
        <title>Configure the OpenShift Audit Profile</title>
        <description>Audit log profiles define how to log requests that come to the OpenShift
API server, the Kubernetes API server, and the OAuth API server.</description>
        <value>Default</value>
        <value selector="Default">Default</value>
        <value selector="WriteRequestBodies">WriteRequestBodies</value>
        <value selector="AllRequestBodies">AllRequestBodies</value>
      </Value>
      <Rule id="partition_for_var_log_kube_apiserver" severity="medium">
        <title>Ensure /var/log/kube-apiserver Located On Separate Partition</title>
        <description>Kubernetes API server audit logs are stored in the
<tt>/var/log/kube-apiserver</tt> directory.

Ensure that <code>/var/log/kube-apiserver</code> has its own partition or logical
volume at installation time, or migrate it using LVM.</description>
        <rationale>Placing <tt>/var/log/kube-apiserver</tt> in its own partition
enables better separation between Kubernetes API server audit
files and other log files, and helps ensure that
auditing cannot be halted due to the partition running out
of space.</rationale>
        <ref nist="AU-4"/>
        <oval id="partition_for_var_log_kube_apiserver"/>
        <ocil clause="no line is returned">Run the following command to determine if <code>/var/log/kube-apiserver</code>
is on its own partition or logical volume:
<pre>$ mount | grep "on /var/log/kube-apiserver"</pre>
If <code>/var/log/kube-apiserver</code> has its own partition or volume group, a line will be returned.
</ocil>
      </Rule>
      <Rule id="partition_for_var_log_oauth_apiserver" severity="medium">
        <title>Ensure /var/log/oauth-apiserver Located On Separate Partition</title>
        <description>OpenShift OAuth server audit logs are stored in the
<tt>/var/log/oauth-apiserver</tt> directory.

Ensure that <code>/var/log/oauth-apiserver</code> has its own partition or logical
volume at installation time, or migrate it using LVM.</description>
        <rationale>Placing <tt>/var/log/oauth-apiserver</tt> in its own partition
enables better separation between OpenShift OAuth server audit
files and other log files, and helps ensure that
auditing cannot be halted due to the partition running out
of space.</rationale>
        <ref nist="AU-4"/>
        <oval id="partition_for_var_log_oauth_apiserver"/>
        <ocil clause="no line is returned">Run the following command to determine if <code>/var/log/oauth-apiserver</code>
is on its own partition or logical volume:
<pre>$ mount | grep "on /var/log/oauth-apiserver"</pre>
If <code>/var/log/oauth-apiserver</code> has its own partition or volume group, a line will be returned.
</ocil>
      </Rule>
      <Rule id="partition_for_var_log_openshift_apiserver" severity="medium">
        <title>Ensure /var/log/openshift-apiserver Located On Separate Partition</title>
        <description>Openshift API server audit logs are stored in the
<tt>/var/log/openshift-apiserver</tt> directory.

Ensure that <code>/var/log/openshift-apiserver</code> has its own partition or logical
volume at installation time, or migrate it using LVM.</description>
        <rationale>Placing <tt>/var/log/openshift-apiserver</tt> in its own partition
enables better separation between Openshift API server audit
files and other log files, and helps ensure that
auditing cannot be halted due to the partition running out
of space.</rationale>
        <ref nist="AU-4"/>
        <oval id="partition_for_var_log_openshift_apiserver"/>
        <ocil clause="no line is returned">Run the following command to determine if <code>/var/log/openshift-apiserver</code>
is on its own partition or logical volume:
<pre>$ mount | grep "on /var/log/openshift-apiserver"</pre>
If <code>/var/log/openshift-apiserver</code> has its own partition or volume group, a line will be returned.
</ocil>
      </Rule>
    </Group>
    <Group id="master" prodtype="ocp4">
      <title>OpenShift - Master Node Settings</title>
      <description>Contains evaluations for the master node configuration settings.</description>
    </Group>
    <Group id="networking" prodtype="ocp4">
      <title>Network Configuration and Firewalls</title>
      <description>Most systems must be connected to a network of some
sort, and this brings with it the substantial risk of network
attack. This section discusses the security impact of decisions
about networking which must be made when configuring a system.
<br/><br/>
This section also discusses firewalls, network access
controls, and other network security frameworks, which allow
system-level rules to be written that can limit an attackers' ability
to connect to your system. These rules can specify that network
traffic should be allowed or denied from certain IP addresses,
hosts, and networks. The rules can also specify which of the
system's network services are available to particular hosts or
networks.</description>
    </Group>
    <Group id="openshift-api-server" prodtype="ocp4">
      <title>OpenShift API Server</title>
      <description>This section contains recommendations for openshift-apiserver configuration.</description>
    </Group>
    <Group id="rbac" prodtype="ocp4">
      <title>Role-based Acess Control</title>
      <description>Role-based access control (RBAC) objects determine
whether a user is allowed to perform a given action
within a project.

Cluster administrators can use the cluster roles and
bindings to control who has various access levels to
the OpenShift Container Platform platform itself
and all projects.

Developers can use local roles and bindings to control
who has access to their projects. Note that authorization
is a separate step from authentication, which is more
about determining the identity of who is taking the action.</description>
    </Group>
    <Group id="registry" prodtype="ocp4">
      <title>OpenShift - Registry Security Practices</title>
      <description>Contains evaluations for OpenShift registry security practices, and cluster-wide registry configuration.</description>
    </Group>
    <Group id="risk-assessment" prodtype="ocp4">
      <title>OpenShift - Risk Assessment Settings</title>
      <description>Contains evaluations for the cluster's risk assessment configuration settings.</description>
    </Group>
    <Group id="scc" prodtype="ocp4">
      <title>Security Context Constraints (SCC)</title>
      <description>Similar to the way that RBAC resources control user access,
administrators can use Security Context Constraints (SCCs)
to control permissions for pods. These permissions include
actions that a pod, a collection of containers, can perform
and what resources it can access. You can use SCCs to define
a set of conditions that a pod must run with in order to be
accepted into the system.</description>
    </Group>
    <Group id="scheduler" prodtype="ocp4">
      <title>OpenShift - Kubernetes - Scheduler Settings</title>
      <description>Contains evaluations for kube-scheduler configuration settings.</description>
    </Group>
    <Group id="secrets" prodtype="ocp4">
      <title>OpenShift Secrets Management</title>
      <description>Secrets let you store and manage sensitive information,
such as passwords, OAuth tokens, and ssh keys.
Such information might otherwise be put in a Pod
specification or in an image.		</description>
    </Group>
    <Group id="worker" prodtype="ocp4">
      <title>OpenShift - Worker Node Settings</title>
      <description>Contains evaluations for the worker node configuration settings.</description>
    </Group>
  </Group>
  <Group id="openstack" prodtype="rhosp10,rhosp13">
    <title>OpenStack</title>
    <description>TODO TODO TODO</description>
    <Group id="cinder" prodtype="rhosp10,rhosp13">
      <title>Cinder STIG Checklist</title>
      <description>High level overview of Cinder STIG settings to go here!</description>
      <Rule id="cinder_conf_file_perms" prodtype="rhosp10,rhosp13" severity="medium">
        <title>Check-Block-02: Are strict permissions set for cinder config files?</title>
        <description> To properly set the permissions of <code>/etc/cinder/*.conf</code>, run the command: <pre>$ sudo chmod 0640 /etc/cinder/*.conf</pre></description>
        <rationale>Due to the nature of the cinder config files, normal users should not be
able to view contents</rationale>
        <ref cui="3.1.5"/>
        <oval id="cinder_conf_file_perms"/>
        <ocil clause="/etc/cinder/*.conf has unix mode -rw-r-----">To check the permissions of <code>/etc/cinder/*.conf</code>,
run the command:
<pre>$ ls -l /etc/cinder/*.conf</pre>
If properly configured, the output should indicate the following permissions:
<code>-rw-r-----</code></ocil>
      </Rule>
      <Rule id="cinder_file_ownership" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Block-01: Is user/group ownership of config files set to root/cinder?</title>
        <description>Configuration files contain critical parameters and information required for smooth functioning of the component. If an unprivileged user, either intentionally or accidentally, modifies or deletes any of the parameters or the file itself then it would cause severe availability issues resulting in a denial of service to the other end users. Thus user ownership of such critical configuration files must be set to root and group ownership must be set to cinder.
<br/>
<br/>
Run the following commands:
<br/>
<br/>
<tt>
$ stat -L -c "%U %G" /etc/cinder/cinder.conf | egrep "root cinder"
<br/>
$ stat -L -c "%U %G" /etc/cinder/api-paste.ini | egrep "root cinder"
<br/>
$ stat -L -c "%U %G" /etc/cinder/policy.json | egrep "root cinder"
<br/>
$ stat -L -c "%U %G" /etc/cinder/rootwrap.conf | egrep "root cinder"
</tt>
<br/>
<br/>
Pass: If user and group ownership of all these config files is set to root and cinder respectively. The above commands show output of root cinder.
<br/>
<br/>
Fail: If the above commands does not return any output as the user and group ownership might have set to any user other than root or any group other than cinder.</description>
        <rationale/>
        <ref cui="3.1.5"/>
        <oval id="cinder_file_ownership"/>
      </Rule>
      <Rule id="cinder_file_perms" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Block-02: Are strict permissions set for cinder config files?</title>
        <description>Similar to the previous check, it is recommended to set strict access permissions for such configuration files.
<br/>
<br/>
Run the following commands:
<br/>
<br/>
<tt>
$ stat -L -c "%a" /etc/cinder/cinder.conf
<br/>
$ stat -L -c "%a" /etc/cinder/api-paste.ini
<br/>
$ stat -L -c "%a" /etc/cinder/policy.json
<br/>
$ stat -L -c "%a" /etc/cinder/rootwrap.conf
</tt>
<br/>
<br/>
Pass: If permissions are set to 640 or stricter. The permissions of 640 translates into owner r/w, group r, and no rights to others i.e. &#x201C;u=rw,g=r,o=&#x201D;. Note that with Check-Block-01: Is user/group ownership of config files set to root/cinder? and permissions set to 640, root has read/write access and cinder has read access to these configuration files. The access rights can also be validated using the following command. This command will only be available on your system if it supports ACLs.

<br/>
<br/>
<tt>
$ getfacl --tabular -a /etc/cinder/cinder.conf
<br/>
getfacl: Removing leading '/' from absolute path names
<br/>
# file: etc/cinder/cinder.conf
<br/>
USER   root  rw-
<br/>
GROUP  cinder  r--
<br/>
mask         r--
<br/>
other        ---
</tt>
<br/>
<br/>
Fail: If permissions are not set to at least 640.</description>
        <rationale/>
        <oval id="cinder_file_perms"/>
      </Rule>
      <Rule id="cinder_glance_tls" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Block-06: Does cinder communicates with glance over TLS?</title>
        <description>Similar to previous check (Check-Block-05: Does cinder communicates with nova over TLS?), it is recommended all the components must communicate with each other using a secured communication protocol.

<br/>
<br/>
Pass: If value of parameter glance_api_insecure under [DEFAULT] section in /etc/cinder/cinder.conf is set to False.

<br/>
<br/>
Fail: If value of parameter glance_api_insecure under [DEFAULT] section in /etc/cinder/cinder.conf is set to True.</description>
        <rationale/>
        <ref cui="3.13.8"/>
        <oval id="cinder_glance_tls"/>
      </Rule>
      <Rule id="cinder_nas_secure_file_permissions" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Block-07: Is NAS operating in secure enviornment?</title>
        <description>Cinder supports an NFS driver which works differently than a traditional block storage driver. The NFS driver does not actually allow an instance to access a storage device at the block level. Instead, files are created on an NFS share and mapped to instances, which emulates a block device. Cinder supports secure configuration for such files by controlling the file permissions when cinder volumes are created. Cinder configuration can also control whether file operations are run as the root user or the current OpenStack process user.

<br/>
<br/>
Pass: If value of parameter nas_secure_file_permissions under [DEFAULT] section in /etc/cinder/cinder.conf is set to auto. When set to auto, a check is done during cinder startup to determine if there are existing cinder volumes, no volumes will set the option to True, and use secure file permissions. The detection of existing volumes will set the option to False, and use the current insecure method of handling file permissions. If value of parameter nas_secure_file_operations under [DEFAULT] section in /etc/cinder/cinder.conf is set to auto. When set to &#x201C;auto&#x201D;, a check is done during cinder startup to determine if there are existing cinder volumes, no volumes will set the option to True, be secure and do NOT run as the root user. The detection of existing volumes will set the option to False, and use the current method of running operations as the root user. For new installations, a &#x201C;marker file&#x201D; is written so that subsequent restarts of cinder will know what the original determination had been.

<br/>
<br/>
Fail: If value of parameter nas_secure_file_permissions under [DEFAULT] section in /etc/cinder/cinder.conf is set to False and if value of parameter nas_secure_file_operations under [DEFAULT] section in /etc/cinder/cinder.conf is set to False.</description>
        <rationale/>
        <ref cui="3.1.5"/>
        <oval id="cinder_nas_secure_file_permissions"/>
      </Rule>
      <Rule id="cinder_nova_tls" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Block-05: Does cinder communicates with nova over TLS?</title>
        <description>OpenStack components communicate with each other using various protocols and the communication might involve sensitive / confidential data. An attacker may try to eavesdrop on the channel in order to get access to sensitive information. Thus all the components must communicate with each other using a secured communication protocol.

<br/>
<br/>
Pass: If value of parameter nova_api_insecure under [DEFAULT] section in /etc/cinder/cinder.conf is set to False.

<br/>
<br/>
Fail: If value of parameter nova_api_insecure under [DEFAULT] section in /etc/cinder/cinder.conf is set to True.</description>
        <rationale/>
        <ref cui="3.13.8"/>
        <oval id="cinder_nova_tls"/>
      </Rule>
      <Rule id="cinder_osapi_max_request_body" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Block-08: Is max size for the body of a request set to default (114688)?</title>
        <description>If the maximum body size per request is not defined, the attacker can craft an arbitrary osapi request of large size causing the service to crash and finally resulting in Denial Of Service attack. Assigning the maximum value ensures that any malicious oversized request gets blocked ensuring continued availability of the service.

<br/>
<br/>
Pass: If value of parameter osapi_max_request_body_size under [DEFAULT] section in /etc/cinder/cinder.conf is set to 114688 or if value of parameter max_request_body_size under [oslo_middleware] section in /etc/cinder/cinder.conf is set to 114688.

<br/>
<br/>
Fail: If value of parameter osapi_max_request_body_size under [DEFAULT] section in /etc/cinder/cinder.conf is not set to 114688 or if value of parameter max_request_body_size under [oslo_middleware] section in /etc/cinder/cinder.conf is not set to 114688.</description>
        <rationale/>
        <ref cui="3.1.7"/>
        <oval id="cinder_osapi_max_request_body"/>
      </Rule>
      <Rule id="cinder_tls_enabled" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Block-04: Is TLS enabled for authentication?</title>
        <description>OpenStack components communicate with each other using various protocols and the communication might involve sensitive / confidential data. An attacker may try to eavesdrop on the channel in order to get access to sensitive information. Thus all the components must communicate with each other using a secured communication protocol.
<br/>
<br/>
Pass: If value of parameter auth_protocol under [keystone_authtoken] section in /etc/cinder/cinder.conf is set to https, or if value of parameter identity_uri under [keystone_authtoken] section in /etc/cinder/cinder.conf is set to Identity API endpoint starting with https:// and value of parameter insecure under the same [keystone_authtoken] section in the same /etc/cinder/cinder.conf is set to False.
<br/>
<br/>
Fail: If value of parameter auth_protocol under [keystone_authtoken] section in /etc/cinder/cinder.conf is set to http, or if value of parameter identity_uri under [keystone_authtoken] section in /etc/cinder/cinder.conf is not set to Identity API endpoint starting with https:// or value of parameter insecure under the same [keystone_authtoken] section in the same /etc/cinder/cinder.conf is set to True.</description>
        <rationale/>
        <ref cui="3.13.8"/>
        <oval id="cinder_tls_enabled"/>
      </Rule>
      <Rule id="cinder_using_keystone" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Block-03: Is keystone used for authentication?</title>
        <description>OpenStack supports various authentication strategies like noauth, keystone etc. If the &#x2018;noauth&#x2019; strategy is used then the users could interact with OpenStack services without any authentication. This could be a potential risk since an attacker might gain unauthorized access to the OpenStack components. Thus it is strongly recommended that all services must be authenticated with keystone using their service accounts.

<br/>
<br/>
Pass: If value of parameter auth_strategy under [DEFAULT] section in /etc/cinder/cinder.conf is set to keystone.

<br/>
<br/>
Fail: If value of parameter auth_strategy under [DEFAULT] section is set to noauth.</description>
        <rationale/>
        <ref cui="3.5.2"/>
        <oval id="cinder_using_keystone"/>
      </Rule>
    </Group>
    <Group id="cinder_container" prodtype="rhosp13">
      <title>Cinder Configuration Checklist</title>
      <description>Security configuration settings for Cinder.</description>
    </Group>
    <Group id="horizon" prodtype="rhosp10,rhosp13">
      <title>Horizon STIG Checklist</title>
      <description>High level overview of Horizon STIG settings to go here!</description>
      <Rule id="horizon_csrf_cookie_secure" prodtype="rhosp10,rhosp13" severity="high">
        <title>Cross-Site Request Forgery Prevention: Enable CSRF_COOKIE_SECURE (non-containerized deployments)</title>
        <description>Usage of a secure cookie for the CSRF cookie is determined by the <tt>CSRF_COOKIE_SECURE</tt>
parameter. When Red Hat OpenStack Platform is deployed as non-containerized services,
this configuration setting is configured in the
<tt>/etc/openstack-dashboard/local_settings</tt> file.

The <tt>CSRF_COOKIE_SECURE</tt> option must be set to <tt>True</tt>:

<pre>CSRF_COOKIE_SECURE True</pre>

When <tt>CSRF_COOKIE_SECURE</tt> is set to <tt>True</tt>, the cookie will be marked
as "secure," which means web browsers may ensure that the cookie is only sent
with an HTTPS connection.</description>
        <rationale>CSRF (Cross-site request forgery) is an attack which forces an end user
to execute unauthorized commands on a web application in which he/she is
currently authenticated. A successful CSRF exploit can compromise end
user data and operations in case of normal user. If the targeted end
user has admin privileges, this can compromise the entire web application.</rationale>
        <ref cui="3.1.1,3.1.2" nist="SC-5"/>
        <oval id="horizon_csrf_cookie_secure"/>
        <ocil clause="CSRF_COOKIE_SECURE is set to False">Check the file <tt>/etc/openstack-dashboard/local_settings</tt> and ensure the
following line appears:
<pre>CSRF_COOKIE_SECURE True</pre></ocil>
      </Rule>
      <Rule id="horizon_disable_password_reveal" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Dashboard-08: Is disable_password_reveal set to True?</title>
        <description>Similar to the previous check, it is recommended not to reveal password fields.
<br/>
<br/>
Pass: If value of parameter disable_password_reveal in /etc/openstack-dashboard/local_settings is set to True.
<br/>
<br/>
Fail: If value of parameter disable_password_reveal in /etc/openstack-dashboard/local_settings is set to False.</description>
        <rationale/>
        <ref cui="3.13.8"/>
        <oval id="horizon_disable_password_reveal"/>
      </Rule>
      <Rule id="horizon_file_ownership" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Dashboard-01: Is user/group of config files set to root/horizon?</title>
        <description>Configuration files contain critical parameters and information required for smooth functioning of the component. If an unprivileged user, either intentionally or accidentally modifies or deletes any of the parameters or the file itself then it would cause severe availability issues causing a denial of service to the other end users. Thus user ownership of such critical configuration files must be set to root and group ownership must be set to horizon.
<br/>
<br/>
Run the following commands:

<br/>
<tt>
$ stat -L -c "%U %G"  /etc/openstack-dashboard/local_settings | egrep "root horizon"
</tt>
<br/>
<br/>
Pass: If user and group ownership of the config file is set to root and horizon respectively. The above commands show output of root horizon.

<br/>
<br/>
Fail: If the above commands does not return any output as the user and group ownership might have set to any user other than root or any group other than horizon.</description>
        <rationale/>
        <ref cui="3.1.5"/>
        <oval id="horizon_file_ownership"/>
      </Rule>
      <Rule id="horizon_file_perms" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Dashboard-02: Are strict permissions set for horizon configuration files?</title>
        <description>Similar to the previous check, it is recommended to set strict access permissions for such configuration files.
<br/>
<br/>

Run the following commands:
<br/>
<tt>
$ stat -L -c "%a" /etc/openstack-dashboard/local_settings
</tt>
<br/>
<br/>
Pass: If permissions are set to 640 or stricter. The permissions of 640 translates into owner r/w, group r, and no rights to others i.e. &#x201C;u=rw,g=r,o=&#x201D;. Note that with Check-Dashboard-01: Is user/group of config files set to root/horizon? and permissions set to 640, root has read/write access and horizon has read access to these configuration files. The access rights can also be validated using the following command. This command will only be available on your system if it supports ACLs.

<br/>
<br/>
<tt>
$ getfacl --tabular -a /etc/openstack-dashboard/local_settings
<br/>
getfacl: Removing leading '/' from absolute path names
<br/>
# file: etc/openstack-dashboard/local_settings
<br/>
USER   root     rw-
<br/>
GROUP  horizon  r--
<br/>
mask            r--
<br/>
other           ---
</tt>
<br/>
<br/>
Fail: If permissions are not set to at least 640.</description>
        <rationale/>
        <ref cui="3.1.5"/>
        <oval id="horizon_file_perms"/>
      </Rule>
      <Rule id="horizon_password_autocomplete" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Dashboard-07: Is password_autocomplete set to False?</title>
        <description>Common feature that applications use to provide users a convenience is to cache the password locally in the browser (on the client machine) and having it &#x2018;pre-typed&#x2019; in all subsequent requests. While this feature can be perceived as extremely friendly for the average user, at the same time, it introduces a flaw, as the user account becomes easily accessible to anyone that uses the same account on the client machine and thus may lead to compromise of the user account.
<br/>
<br/>
Pass: If value of parameter password_autocomplete in /etc/openstack-dashboard/local_settings is set to off.
<br/>
<br/>
Fail: If value of parameter password_autocomplete in /etc/openstack-dashboard/local_settings is set to on.</description>
        <rationale/>
        <ref cui="3.13.8"/>
        <oval id="horizon_password_autocomplete"/>
      </Rule>
      <Rule id="horizon_session_cookie_httponly" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Dashboard-06: Is SESSION_COOKIE_HTTPONLY parameter set to True?</title>
        <description>The &#x201C;HTTPONLY&#x201D; cookie attribute instructs web browsers not to allow scripts (e.g. JavaScript or VBscript) an ability to access the cookies via the DOM document.cookie object. This session ID protection is mandatory to prevent session ID stealing through XSS attacks.
<br/>
<br/>
Pass: If value of parameter SESSION_COOKIE_HTTPONLY in /etc/openstack-dashboard/local_settings is set to True.

<br/>
<br/>
Fail: If value of parameter SESSION_COOKIE_HTTPONLY in /etc/openstack-dashboard/local_settings is set to False.</description>
        <rationale/>
        <ref cui="3.13.8"/>
        <oval id="horizon_session_cookie_httponly"/>
      </Rule>
      <Rule id="horizon_session_cookie_secure" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Dashboard-05: Is SESSION_COOKIE_SECURE parameter set to True?</title>
        <description>The &#x201C;SECURE&#x201D; cookie attribute instructs web browsers to only send the cookie through an encrypted HTTPS (SSL/TLS) connection. This session protection mechanism is mandatory to prevent the disclosure of the session ID through MitM (Man-in-the-Middle) attacks. It ensures that an attacker cannot simply capture the session ID from web browser traffic.
<br/>
<br/>
Pass: If value of parameter SESSION_COOKIE_SECURE in /etc/openstack-dashboard/local_settings is set to True.

<br/>
<br/>
Fail: If value of parameter SESSION_COOKIE_SECURE in /etc/openstack-dashboard/local_settings is set to False.</description>
        <rationale/>
        <ref cui="3.13.8"/>
        <oval id="horizon_session_cookie_secure"/>
      </Rule>
      <Rule id="horizon_use_ssl" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Dashboard-03: Is USE_SSL parameter set to True?</title>
        <description>Openstack services communicate with each other using various protocols and the communication might involve sensitive/confidential information. An attacker may try to eavesdrop on the channel in order to get access to sensitive information. Thus all the services must communicate with each other using a secured communication protocol like HTTPS.
<br/>
<br/>
Pass: If value of parameter USE_SSL in /etc/openstack-dashboard/local_settings is set to True.
<br/>
<br/>
Fail: If value of parameter USE_SSL in /etc/openstack-dashboard/local_settings is set to False.</description>
        <rationale/>
        <ref cui="3.13.8"/>
        <oval id="horizon_use_ssl"/>
      </Rule>
    </Group>
    <Group id="horizon_container" prodtype="rhosp13">
      <title>Horizon Configuration Checklist</title>
      <description>Recommended security configuration settings for Horizon.</description>
    </Group>
    <Group id="keystone" prodtype="rhosp10,rhosp13">
      <title>Keystone STIG Checklist</title>
      <description>High level overview of Keystone STIG settings to go here!</description>
      <Value id="var_keystone_disable_user_account_days_inactive" type="string" operator="less than or equal">
        <title>Maximum Number of Days Since Last Authentication</title>
        <description>Specifies the maximum number of days a user has not authenticated
prior to automatically disabling the account.</description>
        <value>90</value>
        <value selector="45">45</value>
        <value selector="90">90</value>
        <value selector="180">180</value>
      </Value>
      <Value id="var_keystone_lockout_duration" type="string" operator="greater than or equal">
        <title>Account Lockout Duration</title>
        <description>Specifies the time period, in seconds, of how long a user
account will be disabled after exceeding the maximum failed
logon attempts.</description>
        <value>1800</value>
        <value selector="15_minutes">900</value>
      </Value>
      <Value id="var_keystone_lockout_failure_attempts" type="string" operator="less than or equal">
        <title>Maximum Number of Failed Authentication Attempts</title>
        <description>Specifies the maximum number of failed authentication attempts allowed
prior to disabling a Keystone user.</description>
        <value>6</value>
        <value selector="3">3</value>
      </Value>
      <Rule id="keystone_algorithm_hashing" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Identity-04: Does Identity use strong hashing algorithms for PKI tokens?</title>
        <description>MD5 is a weak and depreciated hashing algorithm. It can be cracked using brute force attack. Identity tokens are sensitive and need to be protected with a stronger hashing algorithm to prevent unauthorized disclosure and subsequent access.

<br/>
<br/>
Pass: If value of parameter hash_algorithm under [token] section in /etc/keystone/keystone.conf is set to SHA256.
<br/>
<br/>

Fail: If value of parameter hash_algorithm under [token]section is set to MD5.</description>
        <rationale/>
        <ref cui="3.1.11"/>
        <oval id="keystone_algorithm_hashing"/>
      </Rule>
      <Rule id="keystone_disable_admin_token" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Identity-06: Disable admin token in /etc/keystone/keystone.conf</title>
        <description>The admin token is generally used to bootstrap Identity. This token is the most valuable Identity asset, which could be used to gain cloud admin privileges.

<br/>
<br/>
Pass: If admin_token under [DEFAULT] section in /etc/keystone/keystone.conf is disabled. And, AdminTokenAuthMiddleware under [filter:admin_token_auth] is deleted from /etc/keystone/keystone-paste.ini

<br/>
<br/>
Fail: If admin_token under [DEFAULT] section is set and AdminTokenAuthMiddleware exists in keystone-paste.ini.</description>
        <rationale/>
        <ref cui="3.1.5"/>
        <oval id="keystone_disable_admin_token"/>
      </Rule>
      <Rule id="keystone_disable_user_account_days_inactive" severity="medium">
        <title>Set Maximum Inactivity Period</title>
        <description>Keystone can be configured to disable accounts after an
organizationally-defined time period. This is achieved by configuring the
<tt>disable_user_account_days_inactive</tt> setting in the
<tt>[security_compliance]</tt> section in <tt>keystone.conf</tt>.</description>
        <rationale>Automatically disabling accounts ensures that users who have not
authenticated for an organizationally-defined time period are
automatically disabled. This reduces the risk of stale accounts
being used for malicious purposes.</rationale>
        <ref cui="3.1.1,3.1.2" nist="AC-2(3)"/>
        <oval id="keystone_disable_user_account_days_inactive"/>
        <ocil clause="disable_user_account_days_inactive is commented out or not configured properly">Run the following command to see what the maximum authentication
attempts is:
<br/>
<pre>$ grep disable_user_account_days_inactive /etc/keystone/keystone.conf</pre>
<br/>
If properly configured, the output should be:
<pre>disable_user_account_days_inactive = <sub idref="var_keystone_disable_user_account_days_inactive"/></pre></ocil>
      </Rule>
      <Rule id="keystone_file_ownership" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Identity-01: Is user/group ownership of config files set to keystone?</title>
        <description>Configuration files contain critical parameters and information required for smooth functioning of the component. If an unprivileged user, either intentionally or accidentally modifies or deletes any of the parameters or the file itself then it would cause severe availability issues causing a denial of service to the other end users. Thus user and group ownership of such critical configuration files must be set to that component owner.
<br/>
<br/>
Run the following commands:
<br/>
<br/>
<tt>
$ stat -L -c "%U %G" /etc/keystone/keystone.conf | egrep "keystone keystone" <br/>
$ stat -L -c "%U %G" /etc/keystone/keystone-paste.ini | egrep "keystone keystone"<br/>
$ stat -L -c "%U %G" /etc/keystone/policy.json | egrep "keystone keystone"<br/>
$ stat -L -c "%U %G" /etc/keystone/logging.conf | egrep "keystone keystone"<br/>
$ stat -L -c "%U %G" /etc/keystone/ssl/certs/signing_cert.pem | egrep "keystone keystone"<br/>
$ stat -L -c "%U %G" /etc/keystone/ssl/private/signing_key.pem | egrep "keystone keystone"<br/>
$ stat -L -c "%U %G" /etc/keystone/ssl/certs/ca.pem | egrep "keystone keystone"<br/>
</tt>
<br/>
<br/>
Pass: If user and group ownership of all these config files is set to keystone. The above commands show output of keystone keystone.
<br/>
<br/>
Fail: If the above commands does not return any output as the user or group ownership might have set to any user other than keystone.</description>
        <rationale/>
        <ref cui="3.1.5"/>
        <oval id="keystone_file_ownership"/>
      </Rule>
      <Rule id="keystone_file_perms" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Identity-02: Are strict permissions set for Identity configuration files?</title>
        <description>Similar to the previous check, it is recommended to set strict access permissions for such configuration files.
<br/>
<br/>
Run the following commands:
<br/>
<br/>
<tt> 
$ stat -L -c "%a" /etc/keystone/keystone.conf<br/>
$ stat -L -c "%a" /etc/keystone/keystone-paste.ini<br/>
$ stat -L -c "%a" /etc/keystone/policy.json<br/>
$ stat -L -c "%a" /etc/keystone/logging.conf<br/>
$ stat -L -c "%a" /etc/keystone/ssl/certs/signing_cert.pem<br/>
$ stat -L -c "%a" /etc/keystone/ssl/private/signing_key.pem<br/>
$ stat -L -c "%a" /etc/keystone/ssl/certs/ca.pem<br/>
</tt>
<br/>
<br/>
Pass: If permissions are set to 640 or stricter.
<br/>
<br/>
Fail: If permissions are not set to at least 640.</description>
        <rationale/>
        <ref cui="3.1.5"/>
        <oval id="keystone_file_perms"/>
      </Rule>
      <Rule id="keystone_lockout_duration" severity="medium">
        <title>Set Account Lockout Duration</title>
        <description>Once a user account is locked out, such as exceeding the
amount of logon attempts as defined by <tt>lockout_failure_attempts</tt>,
Keystone will lockout an account for the time period defined by the
<tt>lockout_duration</tt> configuration option unde the
<tt>[security_compliance]</tt> section in <tt>keystone.conf</tt>.
<br/>
Note that if <tt>lockout_failure_attempts</tt> is enabled and
<tt>lockout_duration</tt> is left undefined, users will be
locked out indefinitely until the user is explicitly re-enabled.</description>
        <rationale>Defining a lockout duration helps mitigate certain attacks,
such as brute force attempts. Additionally defining a lockout
duration, versus indefinately locking an account, lowers
administrative burden of re-enabling accounts of users
who accidentally triggered the maximum failure attempts.</rationale>
        <ref cui="3.1.2,3.1.2" nist="AC-7"/>
        <oval id="keystone_lockout_duration"/>
        <ocil clause="lockout_duration is not configured properly">Run the following command to see what the account lockout
duration is:
<br/>
<pre>$ grep lockout_duration /etc/keystone/keystone.conf</pre>
<br/>
If properly configured, the output should be:
<pre>lockout_duration=<sub idref="var_keystone_lockout_failure_duration"/></pre></ocil>
      </Rule>
      <Rule id="keystone_lockout_failure_attempts" severity="medium">
        <title>Set Maximum Number of Failed Authentication Attempts</title>
        <description>The account lockout feature limits the number of incorrect password
attempts. If a user fails to authenticate after the maximum number
of attempts, the service disables the user.
<br/>
The maximum number of failed authentication attempts is set by the
<tt>lockout_failure_attempts</tt> option in under the
<tt>[security_compliance]</tt> section in <tt>keystone.conf</tt>.</description>
        <rationale>Defining a maximum number of failed logon attempts can help
mitigate brute force password attacks.</rationale>
        <ref cui="3.1.8" nist="AC-7"/>
        <oval id="keystone_lockout_failure_attempts"/>
        <ocil clause="lockout_failure_attempts is commented out or not configured properly">Run the following command to see what the maximum authentication
attempts is:
<br/>
<pre>$ grep lockout_failure_attempts /etc/keystone/keystone.conf</pre>
<br/>
If properly configured, the output should be:
<pre>lockout_failure_attempts=<sub idref="var_keystone_lockout_failure_attempts"/></pre></ocil>
      </Rule>
      <Rule id="keystone_max_request_body_size" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Identity-05: Is max_request_body_size set to default (114688)?</title>
        <description>The parameter max_request_body_size defines the maximum body size per request in bytes. If the maximum size is not defined, the attacker could craft an arbitrary request of large size causing the service to crash and finally resulting in Denial Of Service attack. Assigning the maximum value ensures that any malicious oversized request gets blocked ensuring continued availability of the component.

<br/>
<br/>
Pass: If value of parameter max_request_body_size in /etc/keystone/keystone.conf is set to default (114688) or some reasonable value based on your environment.

<br/>
<br/>
Fail: If value of parameter max_request_body_size is not set.</description>
        <rationale/>
        <oval id="keystone_max_request_body_size"/>
      </Rule>
      <Rule id="keystone_use_ssl" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Identity-03: is SSL enabled for Identity?</title>
        <description>OpenStack components communicate with each other using various protocols and the communication might involve sensitive or confidential data. An attacker may try to eavesdrop on the channel in order to get access to sensitive information. Thus all the components must communicate with each other using a secured communication protocol like HTTPS.
<br/>
<br/>
Pass: If value of parameter enable under [ssl] section in /etc/keystone/keystone.conf is set to True.

<br/>
<br/>
Fail: If value of parameter enable under [ssl] section is not set to True.</description>
        <rationale/>
        <ref cui="3.13.8"/>
        <oval id="keystone_use_ssl"/>
      </Rule>
    </Group>
    <Group id="keystone_container" prodtype="rhosp13">
      <title>Keystone Configuration Checklist</title>
      <description>Security configuration recommendations for Keystone.</description>
      <Rule id="container_keystone_disable_user_account_days_inactive" severity="medium">
        <title>Set Maximum Inactivity Period</title>
        <description>Keystone can be configured to disable accounts after an
organizationally-defined time period. This is achieved by configuring the
<tt>disable_user_account_days_inactive</tt> setting in the
<tt>[security_compliance]</tt> section in <tt>keystone.conf</tt>.</description>
        <rationale>Automatically disabling accounts ensures that users who have not
authenticated for an organizationally-defined time period are
automatically disabled. This reduces the risk of stale accounts
being used for malicious purposes.</rationale>
        <ref nist="AC-2(3)"/>
        <oval id="container_keystone_disable_user_account_days_inactive"/>
        <ocil clause="disable_user_account_days_inactive is commented out or not configured properly">Run the following command to see what the maximum authentication
attempts is:
<br/>
<pre>$ grep disable_user_account_days_inactive /var/lib/config-data/puppet-generated/keystone/etc/keystone/keystone.conf</pre>
<br/>
If properly configured, the output should be:
<pre>disable_user_account_days_inactive = <sub idref="var_keystone_disable_user_account_days_inactive"/></pre></ocil>
      </Rule>
      <Rule id="container_keystone_lockout_duration" severity="medium">
        <title>Set Account Lockout Duration</title>
        <description>Once a user account is locked out, such as exceeding the
amount of logon attempts as defined by <tt>lockout_failure_attempts</tt>,
Keystone will lockout an account for the time period defined by the
<tt>lockout_duration</tt> configuration option unde the
<tt>[security_compliance]</tt> section in <tt>keystone.conf</tt>.
<br/>
Note that if <tt>lockout_failure_attempts</tt> is enabled and
<tt>lockout_duration</tt> is left undefined, users will be
locked out indefinitely until the user is explicitly re-enabled.</description>
        <rationale>Defining a lockout duration helps mitigate certain attacks,
such as brute force attempts. Additionally defining a lockout
duration, versus indefinately locking an account, lowers
administrative burden of re-enabling accounts of users
who accidentally triggered the maximum failure attempts.</rationale>
        <ref nist="AC-7"/>
        <oval id="container_keystone_lockout_duration"/>
        <ocil clause="lockout_duration is not configured properly">Run the following command to see what the account lockout
duration is:
<br/>
<pre>$ grep lockout_duration /var/lib/config-data/puppet-generated/keystone/etc/keystone/keystone.conf</pre>
<br/>
If properly configured, the output should be:
<pre>lockout_duration=<sub idref="var_keystone_lockout_failure_duration"/></pre></ocil>
      </Rule>
      <Rule id="container_keystone_lockout_failure_attempts" severity="medium">
        <title>Set Maximum Number of Failed Authentication Attempts</title>
        <description>The account lockout feature limits the number of incorrect password
attempts. If a user fails to authenticate after the maximum number
of attempts, the service disables the user.
<br/>
The maximum number of failed authentication attempts is set by the
<tt>lockout_failure_attempts</tt> option in under the
<tt>[security_compliance]</tt> section in <tt>keystone.conf</tt>.</description>
        <rationale>Defining a maximum number of failed logon attempts can help
mitigate brute force password attacks.</rationale>
        <ref nist="AC-7"/>
        <oval id="container_keystone_lockout_failure_attempts"/>
        <ocil clause="lockout_failure_attempts is commented out or not configured properly">Run the following command to see what the maximum authentication
attempts is:
<br/>
<pre>$ grep lockout_failure_attempts /var/lib/config-data/puppet-generated/keystone/etc/keystone/keystone.conf</pre>
<br/>
If properly configured, the output should be:
<pre>lockout_failure_attempts=<sub idref="var_keystone_lockout_failure_attempts"/></pre></ocil>
      </Rule>
    </Group>
    <Group id="neutron" prodtype="rhosp10,rhosp13">
      <title>Neutron STIG Checklist</title>
      <description>High level overview of Neutron STIG settings to go here!</description>
      <Rule id="neutron_api_use_ssl" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Neutron-05: Is SSL enabled on Neutron API server?</title>
        <description>Similar to the previous check, it is recommended to enable secure communication on API server.

<br/>
<br/>
Pass: If value of parameter use_ssl under [DEFAULT] section in /etc/neutron/neutron.conf is set to True.

<br/>
<br/>
Fail: If value of parameter use_ssl under [DEFAULT] section in /etc/neutron/neutron.conf is set to False.</description>
        <rationale/>
        <ref cui="3.13.8"/>
        <oval id="neutron_api_use_ssl"/>
      </Rule>
      <Rule id="neutron_file_ownership" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Neutron-01: Is user/group ownership of config files set to root/neutron?</title>
        <description>Configuration files contain critical parameters and information required for smooth functioning of the component. If an unprivileged user, either intentionally or accidentally modifies or deletes any of the parameters or the file itself then it would cause severe availability issues causing a denial of service to the other end users. Thus user ownership of such critical configuration files must be set to root and group ownership must be set to neutron.
<br/>
<br/>
Run the following commands:

<br/>
<br/>
$ stat -L -c "%U %G" /etc/neutron/neutron.conf | egrep "root neutron"
$ stat -L -c "%U %G" /etc/neutron/api-paste.ini | egrep "root neutron"
$ stat -L -c "%U %G" /etc/neutron/policy.json | egrep "root neutron"
$ stat -L -c "%U %G" /etc/neutron/rootwrap.conf | egrep "root neutron"
Pass: If user and group ownership of all these config files is set to root and neutron respectively. The above commands show output of root neutron.
<br/>
<br/>

Fail: If the above commands does not return any output as the user and group ownership might have set to any user other than root or any group other than neutron.</description>
        <rationale/>
        <ref cui="3.1.5"/>
        <oval id="neutron_file_ownership"/>
      </Rule>
      <Rule id="neutron_file_perms" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Neutron-02: Are strict permissions set for Compute configuration files?</title>
        <description>Similar to the previous check, it is recommended to set strict access permissions for such configuration files.

<br/>
<br/>
Run the following commands:

<br/>
<br/>
<tt>
$ stat -L -c "%a" /etc/neutron/neutron.conf
<br/>
$ stat -L -c "%a" /etc/neutron/api-paste.ini
<br/>
$ stat -L -c "%a" /etc/neutron/policy.json
<br/>
$ stat -L -c "%a" /etc/neutron/rootwrap.conf
</tt>
<br/>
<br/>
Pass: If permissions are set to 640 or stricter. The permissions of 640 translates into owner r/w, group r, and no rights to others i.e. &#x201C;u=rw,g=r,o=&#x201D;. Note that with Check-Neutron-01: Is user/group ownership of config files set to root/neutron? and permissions set to 640, root has read/write access and neutron has read access to these configuration files. The access rights can also be validated using the following command. This command will only be available on your system if it supports ACLs.
<br/>
<br/>
<tt>
$ getfacl --tabular -a /etc/neutron/neutron.conf
<br/>
getfacl: Removing leading '/' from absolute path names
<br/>
<br/>
# file: etc/neutron/neutron.conf
<br/>
USER   root     rw-
<br/>
GROUP  neutron  r--
<br/>
mask            r--
<br/>
other           ---
</tt>
<br/>
<br/>
Fail: If permissions are not set to at least 640.</description>
        <rationale/>
        <ref cui="3.1.5"/>
        <oval id="neutron_file_perms"/>
      </Rule>
      <Rule id="neutron_use_https" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Neutron-04: Is secure protocol used for authentication?</title>
        <description>OpenStack components communicate with each other using various protocols and the communication might involve sensitive / confidential data. An attacker may try to eavesdrop on the channel in order to get access to sensitive information. Thus all the components must communicate with each other using a secured communication protocol.

<br/>
<br/>
Pass: If value of parameter auth_protocol under [keystone_authtoken] section in /etc/neutron/neutron.conf is set to https, or if value of parameter identity_uri under [keystone_authtoken] section in /etc/neutron/neutron.conf is set to Identity API endpoint starting with https://.

<br/>
<br/>
Fail: If value of parameter auth_protocol under [keystone_authtoken] section in /etc/neutron/neutron.conf is set to http`, or if value of parameter identity_uri under [keystone_authtoken] section in /etc/neutron/neutron.conf is not set to Identity API endpoint starting with https://.</description>
        <rationale/>
        <ref cui="3,13,8"/>
        <oval id="neutron_use_https"/>
      </Rule>
      <Rule id="neutron_use_keystone" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Neutron-03: Is keystone used for authentication?</title>
        <description>OpenStack supports various authentication strategies like noauth, keystone etc. If the &#x2018;noauth&#x2019; strategy is used then the users could interact with OpenStack services without any authentication. This could be a potential risk since an attacker might gain unauthorized access to the OpenStack components. Thus it is strongly recommended that all services must be authenticated with keystone using their service accounts.

<br/>
<br/>
Pass: If value of parameter auth_strategy under [DEFAULT] section in /etc/neutron/neutron.conf is set to keystone.

<br/>
<br/>
Fail: If value of parameter auth_strategy under [DEFAULT] section is set to noauth or noauth2.</description>
        <rationale/>
        <ref cui="3.13.8"/>
        <oval id="neutron_use_keystone"/>
      </Rule>
    </Group>
    <Group id="neutron_container" prodtype="rhosp13">
      <title>Neutron Configuration Checklist</title>
      <description>Security configuration requirements for Neutron.</description>
    </Group>
    <Group id="nova" prodtype="rhosp10,rhosp13">
      <title>Nova STIG Checklist</title>
      <description>High level overview of Nova STIG settings to go here!</description>
      <Rule id="nova_file_ownership" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Compute-01: Is user/group ownership of config files set to root/nova?</title>
        <description>Configuration files contain critical parameters and information required for smooth functioning of the component. If an unprivileged user, either intentionally or accidentally modifies or deletes any of the parameters or the file itself then it would cause severe availability issues causing a denial of service to the other end users. Thus user ownership of such critical configuration files must be set to root and group ownership must be set to nova.
<br/>
<br/>
Run the following commands:

<br/>
<br/>
<tt>
$ stat -L -c "%U %G" /etc/nova/nova.conf | egrep "root nova"
<br/>
$ stat -L -c "%U %G" /etc/nova/api-paste.ini | egrep "root nova"
<br/>
$ stat -L -c "%U %G" /etc/nova/policy.json | egrep "root nova"
<br/>
$ stat -L -c "%U %G" /etc/nova/rootwrap.conf | egrep "root nova"
</tt>
<br/>
<br/>
Pass: If user and group ownership of all these config files is set to root and nova respectively. The above commands show output of root nova.
<br/>
<br/>

Fail: If the above commands does not return any output as the user and group ownership might have set to any user other than root or any group other than nova.</description>
        <rationale/>
        <ref cui="3.1.5"/>
        <oval id="nova_file_ownership"/>
      </Rule>
      <Rule id="nova_file_perms" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Compute-02: Are strict permissions set for Compute configuration files?</title>
        <description>Similar to the previous check, it is recommended to set strict access permissions for such configuration files.
<br/>
<br/>

Run the following commands:
<br/>
<tt>
$ stat -L -c "%a" /etc/nova/nova.conf
<br/>
$ stat -L -c "%a" /etc/nova/api-paste.ini
<br/>
$ stat -L -c "%a" /etc/nova/policy.json
<br/>
$ stat -L -c "%a" /etc/nova/rootwrap.conf
</tt>
<br/>
<br/>

Pass: If permissions are set to 640 or stricter. The permissions of 640 translates into owner r/w, group r, and no rights to others i.e. &#x201C;u=rw,g=r,o=&#x201D;. Note that with Check-Compute-01: Is user/group ownership of config files set to root/nova? and permissions set to 640, root has read/write access and nova has read access to these configuration files. The access rights can also be validated using the following command. This command will only be available on your system if it supports ACLs.

<br/>
<tt>
$ getfacl --tabular -a /etc/nova/nova.conf
<br/>
getfacl: Removing leading '/' from absolute path names
<br/>
# file: etc/nova/nova.conf
<br/>
USER   root  rw-
<br/>
GROUP  nova  r--
<br/>
mask         r--
<br/>
other        ---
</tt>
<br/>
<br/>
Fail: If permissions are not set to at least 640.</description>
        <rationale/>
        <ref cui="3.1.5"/>
        <oval id="nova_file_perms"/>
      </Rule>
      <Rule id="nova_secure_authentication" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Compute-04: Is secure protocol used for authentication?</title>
        <description>OpenStack components communicate with each other using various protocols and the communication might involve sensitive / confidential data. An attacker may try to eavesdrop on the channel in order to get access to sensitive information. Thus all the components must communicate with each other using a secured communication protocol.

<br/>
<br/>
Pass: If value of parameter auth_protocol under [keystone_authtoken] section in /etc/nova/nova.conf is set to https, or if value of parameter identity_uri under [keystone_authtoken] section in /etc/nova/nova.conf is set to Identity API endpoint starting with https://.
<br/>
<br/>

Fail: If value of parameter auth_protocol under [keystone_authtoken] section in /etc/nova/nova.conf is set to http`, or if value of parameter identity_uri under [keystone_authtoken] section in /etc/nova/nova.conf is not set to Identity API endpoint starting with https://.</description>
        <rationale/>
        <ref cui="3.13.8"/>
        <oval id="nova_secure_authentication"/>
      </Rule>
      <Rule id="nova_secure_glance" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Compute-05: Does Nova communicates with Glance securely?</title>
        <description>OpenStack components communicate with each other using various protocols and the communication might involve sensitive / confidential data. An attacker may try to eavesdrop on the channel in order to get access to sensitive information. Thus all the components must communicate with each other using a secured communication protocol.
<br/>
<br/>

Pass: If value of parameter glance_api_insecure under [DEFAULT] section in /etc/nova/nova.conf is set to False, or if value of parameter api_insecure under [glance] section in /etc/nova/nova.conf is set to False.
<br/>
<br/>

Fail: If value of parameter glance_api_insecure under [DEFAULT] section in /etc/nova/nova.conf is set to True, or if value of parameter api_insecure under [glance] section in /etc/nova/nova.conf is set to True.
<br/>
<br/></description>
        <rationale/>
        <ref cui="3.13.8"/>
        <oval id="nova_secure_glance"/>
      </Rule>
      <Rule id="nova_use_keystone" prodtype="rhosp10,rhosp13" severity="unknown">
        <title>Check-Compute-03: Is keystone used for authentication?</title>
        <description>OpenStack supports various authentication strategies like noauth, keystone etc. If the &#x2018;noauth&#x2019; strategy is used then the users could interact with OpenStack services without any authentication. This could be a potential risk since an attacker might gain unauthorized access to the OpenStack components. Thus it is strongly recommended that all services must be authenticated with keystone using their service accounts.
<br/>
<br/>

Pass: If value of parameter auth_strategy under [DEFAULT] section in /etc/nova/nova.conf is set to keystone.
<br/>
<br/>

Fail: If value of parameter auth_strategy under [DEFAULT] section is set to noauth or noauth2.</description>
        <rationale/>
        <ref cui="3.1.5"/>
        <oval id="nova_use_keystone"/>
      </Rule>
    </Group>
    <Group id="nova_container" prodtype="rhosp13">
      <title>Nova Configuration Checklist</title>
      <description>Security configuration items for Nova.</description>
    </Group>
  </Group>
</Benchmark>
