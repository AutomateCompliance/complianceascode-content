<?xml version="1.0"?>
<Benchmark xmlns:html="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:dc="http://purl.org/dc/elements/1.1/" id="product-name" xsi:schemaLocation="http://checklists.nist.gov/xccdf/1.1 xccdf-1.1.4.xsd" style="SCAP_1.1" resolved="false" xml:lang="en-US">
  <status date="2021-09-19">draft</status>
  <title>Guide to the Secure Configuration of Java Runtime Environment</title>
  <description>This guide presents a catalog of security-relevant
configuration settings for Java Runtime Environment. It is a rendering of
content structured in the eXtensible Configuration Checklist Description Format (XCCDF)
in order to support security automation.  The SCAP content is
is available in the <tt>scap-security-guide</tt> package which is developed at

    <html:a href="https://www.open-scap.org/security-policies/scap-security-guide">https://www.open-scap.org/security-policies/scap-security-guide</html:a>.
<br/><br/>
Providing system administrators with such guidance informs them how to securely
configure systems under their control in a variety of network roles. Policy
makers and baseline creators can use this catalog of settings, with its
associated references to higher-level security control catalogs, in order to
assist them in security baseline creation. This guide is a <em>catalog, not a
checklist</em>, and satisfaction of every item is not likely to be possible or
sensible in many operational scenarios. However, the XCCDF format enables
granular selection and adjustment of settings, and their association with OVAL
and OCIL content provides an automated checking capability. Transformations of
this document, and its associated automated checking content, are capable of
providing baselines that meet a diverse set of policy objectives. Some example
XCCDF <em>Profiles</em>, which are selections of items that form checklists and
can be used as baselines, are available with this guide. They can be
processed, in an automated fashion, with tools that support the Security
Content Automation Protocol (SCAP). The DISA STIG for Java Runtime Environment,
which provides required settings for US Department of Defense systems, is
one example of a baseline created from this guidance.
</description>
  <notice id="terms_of_use">Do not attempt to implement any of the settings in
this guide without first testing them in a non-operational environment. The
creators of this guidance assume no responsibility whatsoever for its use by
other parties, and makes no guarantees, expressed or implied, about its
quality, reliability, or any other characteristic.
</notice>
  <front-matter>The SCAP Security Guide Project<br/>

    <html:a href="https://www.open-scap.org/security-policies/scap-security-guide">https://www.open-scap.org/security-policies/scap-security-guide</html:a>
</front-matter>
  <rear-matter>Red Hat and Red Hat Enterprise Linux are either registered
trademarks or trademarks of Red Hat, Inc. in the United States and other
countries. All other names are registered trademarks or trademarks of their
respective companies.
</rear-matter>
  <platform idref="cpe:/a:sun:jre:"/>
  <platform idref="cpe:/a:ibm:jre:"/>
  <platform idref="cpe:/a:redhat:openjdk:"/>
  <version>0.9</version>
  <metadata/>
  <Profile id="stig">
    <title override="true">Java Runtime Environment (JRE) STIG</title>
    <description override="true">The Java Runtime Environment (JRE) is a bundle developed
and offered by Oracle Corporation which includes the Java Virtual Machine
(JVM), class libraries, and other components necessary to run Java
applications and applets. Certain default settings within the JRE pose
a security risk so it is necessary to deploy system wide properties to
ensure a higher degree of security when utilizing the JRE.

The IBM Corporation also develops and bundles the Java Runtime Environment
(JRE) as well as Red Hat with OpenJDK.</description>
    <select idref="java_jre_accepted_sites_exists" selected="true"/>
    <select idref="java_jre_accepted_sites_properties" selected="true"/>
    <select idref="java_jre_blacklist_check" selected="true"/>
    <select idref="java_jre_blacklist_check_locked" selected="true"/>
    <select idref="java_jre_clean_previous_version" selected="true"/>
    <select idref="java_jre_deployment_config_exists" selected="true"/>
    <select idref="java_jre_deployment_config_mandatory" selected="true"/>
    <select idref="java_jre_deployment_config_properties" selected="true"/>
    <select idref="java_jre_deployment_properties_exists" selected="true"/>
    <select idref="java_jre_disable_untrusted_sources" selected="true"/>
    <select idref="java_jre_disable_untrusted_sources_locked" selected="true"/>
    <select idref="java_jre_enable_jws" selected="true"/>
    <select idref="java_jre_enable_jws_locked" selected="true"/>
    <select idref="java_jre_insecure_prompt" selected="true"/>
    <select idref="java_jre_insecure_prompt_locked" selected="true"/>
    <select idref="java_jre_lock_untrusted_sources" selected="true"/>
    <select idref="java_jre_lock_untrusted_sources_locked" selected="true"/>
    <select idref="java_jre_security_revocation_check" selected="true"/>
    <select idref="java_jre_security_revocation_check_locked" selected="true"/>
    <select idref="java_jre_unsigned_applications" selected="true"/>
    <select idref="java_jre_unsigned_applications_locked" selected="true"/>
    <select idref="java_jre_updated" selected="true"/>
    <select idref="java_jre_validation_crl" selected="true"/>
    <select idref="java_jre_validation_crl_locked" selected="true"/>
    <select idref="java_jre_validation_ocsp" selected="true"/>
    <select idref="java_jre_validation_ocsp_locked" selected="true"/>
  </Profile>
  <Value id="conditional_clause" type="string">
    <title>A conditional clause for check statements.</title>
    <description>A conditional clause for check statements.</description>
    <value selector="">This is a placeholder</value>
  </Value>
  <Group id="remediation_functions">
    <title>Remediation functions used by the SCAP Security Guide Project</title>
    <description>XCCDF form of the various remediation functions as used by remediation scripts from the SCAP Security Guide Project.</description>
  </Group>
  <Group id="java">
    <title>Java</title>
    <description>Java is a general-purpose computer programming language. It is intended to
let application developers "write once, run anywhere." Java applications are
typically compiled to bytecode that can run on any Java virtual machine (JVM)
regardless of computer architecture. As such, the Java runtime environment (JRE)
is required to be installed so that Java applications can run. This section
provides settings for configuring Java policies to meet compliance
settings for Java running on Red Hat Enterprise Linux systems.
<br/><br/>
<ul>Refer to <li><html:a href="https://docs.oracle.com/javase/6/docs/technotes/guides/deployment/deployment-guide/properties.html">https://docs.oracle.com/javase/6/docs/technotes/guides/deployment/deployment-guide/properties.html</html:a></li>
for a list of currently supported Java version 6 settings.</ul>
<ul>Refer to <li><html:a href="https://docs.oracle.com/javase/7/docs/technotes/guides/jweb/jcp/properties.html">https://docs.oracle.com/javase/7/docs/technotes/guides/jweb/jcp/properties.html</html:a></li>
for a list of currently supported Java version 7 settings.</ul>
<ul>Refer to <li><html:a href="https://docs.oracle.com/javase/8/docs/technotes/guides/deploy/properties.html">https://docs.oracle.com/javase/8/docs/technotes/guides/deploy/properties.html</html:a></li>
for a list of currently supported Java version 8 settings.</ul></description>
    <Rule id="java_jre_blacklist_check" severity="medium">
      <title>Prevent the Download of Prohibited Mobile Code</title>
      <description>To ensure that Java prevents the download of prohibited mobile code, set
<tt>deployment.security.blacklist.check</tt> to equal <tt>true</tt> in
<tt>/etc/.java/deployment/deployment.properties</tt>.</description>
      <rationale>Mobile code has the potential to cause damage to information systems within
an organization if used maliciously. Therefore it is important to allow vetted
mobile code and prevent potentially malicious execution of mobile code.
Mobile code has the potential to cause damage to information systems within
an organization if used maliciously. Therefore it is important to allow vetted
mobile code and prevent potentially malicious execution of mobile code.</rationale>
      <ref disa="CCI-001169" nist="SC-18(3)" srg="SRG-APP-000209" stigid="JRE8-UX-000110"/>
      <oval id="java_jre_blacklist_check"/>
      <ocil clause="it is not configured">To verify that Java prevents prohibited mobile code from being downloaded,
run the following command:
<pre>$ grep 'deployment.security.blacklist.check=true' /etc/.java/deployment/deployment.properties</pre>
If properly configured, the output should return:
<pre>deployment.security.blacklist.check=true</pre></ocil>
    </Rule>
    <Rule id="java_jre_blacklist_check_locked" severity="medium">
      <title>Disable User Access to Prohibited Mobile Code Setting</title>
      <description>To ensure that users cannot change the download of prohibited mobile code
setting, add <tt>deployment.security.blacklist.check.locked</tt> to
<tt>/etc/.java/deployment/deployment.properties</tt>.</description>
      <rationale>Mobile code has the potential to cause damage to information systems within
an organization if used maliciously. Therefore, it is important to allow vetted
mobile code and prevent potentially malicious execution of mobile code.
As such, ensuring
users cannot change the permission settings which control the downloading of
prohibited mobile code contributes to a more consistent security profile.</rationale>
      <ref disa="CCI-001169" nist="SC-18(3)" srg="SRG-APP-000209" stigid="JRE8-UX-000110"/>
      <oval id="java_jre_blacklist_check_locked"/>
      <ocil clause="it is not configured">To verify that a user cannot change the setting that controls the prevention of
downloading prohibited mobile code, run the following command:
<pre>$ grep 'deployment.security.blacklist.check.locked' /etc/.java/deployment/deployment.properties</pre>
If properly configured, the output should return:
<pre>deployment.security.blacklist.check.locked</pre></ocil>
    </Rule>
    <Rule id="java_jre_clean_previous_version" severity="medium">
      <title>Ensure yum Removes Previous Package Versions</title>
      <description><tt>yum</tt> should be configured to remove previous versions of Java after
new versions have been installed. To configure <tt>yum</tt> to remove the
previous versions of Java after updating, set the <tt>clean_requirements_on_remove</tt>
to <tt>1</tt> in <tt>/etc/yum.conf</tt>.</description>
      <rationale>Previous versions of software components that are not removed from the information
system after updates have been installed may be exploited by some adversaries.</rationale>
      <ref disa="CCI-002617" nist="SI-2(6)" srg="SRG-APP-000454" stigid="JRE8-UX-000190"/>
      <oval id="java_jre_clean_previous_version"/>
      <ocil clause="clean_requirements_on_remove is not enabled or configured correctly">To verify that <tt>clean_requirements_on_remove</tt> is configured properly, run the
following command:
<pre>$ grep clean_requirements_on_remove /etc/yum.conf</pre>
The output should return something similar to:
<pre>clean_requirements_on_remove=1</pre></ocil>
    </Rule>
    <Rule id="java_jre_configure_crypto_policy" severity="unknown">
      <title>Configure Java Runtime to use System Crypto Policy</title>
      <description>Crypto Policies provide a centralized control over crypto algorithms usage of many packages.
Java is supported by crypto policy, but the Java configuration may be
set up to ignore it.

To check that Crypto Policies settings are configured correctly, you have to examine the JRE config file
available under <tt>/usr/lib/jvm/jre/lib/security/java.security</tt>.
If this config file contains the line <tt>security.useSystemPropertiesFile=true</tt>,
settings that are part of the system-wide crypto policy take precedence.</description>
      <rationale>Overriding the system crypto policy makes the behavior of the Java runtime violates expectations,
and makes system configuration more fragmented.</rationale>
      <oval id="java_jre_configure_crypto_policy"/>
      <ocil clause="the &lt;pre&gt;java.security&lt;/pre&gt; doesn't contain the &lt;pre&gt;security.useSystemPropertiesFile=true&lt;/pre&gt; line">To verify that Java uses the system crypto policy, check out that the respective JRE config file
<pre>/usr/lib/jvm/jre/lib/security/java.security</pre> contains the <pre>security.useSystemPropertiesFile=true</pre> line:
<pre>grep 'security.useSystemPropertiesFile=true' /usr/lib/jvm/jre/lib/security/java.security</pre>.</ocil>
    </Rule>
    <Rule id="java_jre_deployment_properties_exists" severity="medium">
      <title>The Java deployment.properties File Exists</title>
      <description>If the Java deployment properties file does not exist, it can be added
by running:
<pre>$ sudo mkdir -p -m 755 /etc/.java/deployment
$ sudo touch /etc/.java/deployment/deployment.properties
$ sudo chmod 644 /etc/.java/deployment/deployment.properties</pre></description>
      <rationale>Each option in the Java control panel is represented by property keys.
These keys adjust the options in the Java control panel based on the value
assigned to that key. By default no deployment.properties file exists; thus,
no system-wide deployment exists. Without the deployment.properties file, setting particular
options for the Java control panel is impossible.</rationale>
      <ref disa="CCI-000366" nist="CM-6(b)" srg="SRG-APP-000516" stigid="JRE8-UX-000030"/>
      <oval id="java_jre_deployment_properties_exists"/>
      <ocil clause="it does not exist">To verify that the <tt>deployment.properties</tt> file exists,
run the following command:
<pre>$ ls /etc/.java/deployment</pre>
The output should contain:
<pre>deployment.properties</pre></ocil>
    </Rule>
    <Rule id="java_jre_disable_untrusted_sources" severity="medium">
      <title>Disable Execution of Signed Java Applets From Untrusted Sources Setting</title>
      <description>To ensure that Java cannot execute from untrusted sources, set
<tt>deployment.security.askgrantdialog.notinca</tt> to equal <tt>false</tt>
in <tt>/etc/.java/deployment/deployment.properties</tt>.</description>
      <rationale>Permitting execution of signed Java applets from un-trusted sources may
result in acquiring malware, and risks system modification, invasion of
privacy, or denial of service. Block users from granting permissions to
certificates that are not issued by a CA in the Root/JSSE CA certificate
store.</rationale>
      <ref disa="CCI-001695" nist="SC-18 (3)" srg="SRG-APP-000112" stigid="JRE8-UX-000080"/>
      <oval id="java_jre_disable_untrusted_sources"/>
      <ocil clause="it does not exist or is not configured properly">To verify that Java cannot execute from untrusted sources,
run the following command:
<pre>$ grep 'askgrantdialog.notinca=false' /etc/.java/deployment/deployment.properties</pre>
If properly configured, the output should return:
<pre>deployment.security.askgrantdialog.notinca=false</pre></ocil>
    </Rule>
    <Rule id="java_jre_disable_untrusted_sources_locked" severity="medium">
      <title>Disable User Access to Disabling Untrusted Sources Setting</title>
      <description>To ensure that users cannot change the untrusted sources settings,
add <tt>deployment.security.askgrantdialog.notinca.locked</tt> to
<tt>/etc/.java/deployment/deployment.properties</tt>.</description>
      <rationale>Permitting execution of signed Java applets from un-trusted sources may
result in malware running on the system, and risks system modification,
invasion of privacy, or denial of service. As such, ensuring users cannot
change the permission settings which control the execution of signed Java
applets contributes to a more consistent security profile.</rationale>
      <ref disa="CCI-001695" nist="SC-18 (3)" srg="SRG-APP-000112" stigid="JRE8-UX-000080"/>
      <oval id="java_jre_disable_untrusted_sources_locked"/>
      <ocil clause="it does not exist or is not configured properly">To verify that users cannot change the untrusted sources settings,
run the following command:
<pre>$ grep 'askgrantdialog.notinca.locked' /etc/.java/deployment/deployment.properties</pre>
If properly configured, the output should return:
<pre>deployment.security.askgrantdialog.notinca.locked</pre></ocil>
    </Rule>
    <Rule id="java_jre_enable_jws" severity="high">
      <title>Enable Java Web Start Applications to Run</title>
      <description>To ensure that Java allows applets or Java Web Start (JWS) applications to
run, set <tt>deployment.webjava.enabled</tt> to equal <tt>true</tt> in
<tt>/etc/.java/deployment/deployment.properties</tt>.</description>
      <rationale>Due to the popularity of Java Web Start (JWS) applications, denying these
applications could have a negative impact to the user experience. Whitelisting,
blacklisting, and signing of applications help mitigate the risk of running
JWS applications.</rationale>
      <ref disa="CCI-000366" nist="CM-6(b)" srg="SRG-APP-000516" stigid="JRE8-UX-000070"/>
      <oval id="java_jre_enable_jws"/>
      <ocil clause="it is not configured">To verify that Java allows applets or Java Web Start (JWS) applications to
run, run the following command:
<pre>$ grep 'deployment.webjava.enabled=true' /etc/.java/deployment/deployment.properties</pre>
If properly configured, the output should return:
<pre>deployment.webjava.enabled=true</pre></ocil>
    </Rule>
    <Rule id="java_jre_enable_jws_locked" severity="high">
      <title>Disable User Access to Java Web Start Application Setting</title>
      <description>To ensure that users cannot change the Java Web Start (JWS) application
setting, add <tt>deployment.webjava.enabled.locked</tt> to
<tt>/etc/.java/deployment/deployment.properties</tt>.</description>
      <rationale>Due to the popularity of Java Web Start (JWS) applications, denying these
applications could have a negative impact to the user experience. Whitelisting,
blacklisting, and signing of applications help mitigate the risk of running
JWS applications.</rationale>
      <ref disa="CCI-000366" nist="CM-6(b)" srg="SRG-APP-000516" stigid="JRE8-UX-000070"/>
      <oval id="java_jre_enable_jws_locked"/>
      <ocil clause="it is not configured">To verify that a user cannot change the Java Web Start (JWS) application
setting, run the following command:
<pre>$ grep 'deployment.webjava.enabled.locked' /etc/.java/deployment/deployment.properties</pre>
If properly configured, the output should return:
<pre>deployment.webjava.enabled.locked</pre></ocil>
    </Rule>
    <Rule id="java_jre_insecure_prompt" severity="medium">
      <title>Prompt User Prior to Executing Mobile Code</title>
      <description>To ensure that Java prevents mobile code from executing without prompting
the user, set <tt>deployment.insecure.jres</tt> to equal
<tt>PROMPT</tt> in <tt>/etc/.java/deployment/deployment.properties</tt>.</description>
      <rationale>Mobile code has the potential to cause damage to information systems within
an organization if used maliciously. It can execute without explicit action
from, or notification to, a user. Requiring Java to enforce prompting the user prior
to executing mobile code will strenghten the security posture of the system.</rationale>
      <ref disa="CCI-002460" nist="SC-18(4)" srg="SRG-APP-000488" stigid="JRE8-UX-000170"/>
      <oval id="java_jre_insecure_prompt"/>
      <ocil clause="it is not configured">To verify that Java prevents mobile code from executing without prompting
the user,run the following command:
<pre>$ grep 'deployment.insecure.jres=PROMPT' /etc/.java/deployment/deployment.properties</pre>
If properly configured, the output should return:
<pre>deployment.insecure.jres=PROMPT</pre></ocil>
    </Rule>
    <Rule id="java_jre_insecure_prompt_locked" severity="medium">
      <title>Disable User Access to Insecure Prompt of Mobile Code Setting</title>
      <description>To ensure that users cannot change the mobile code setting for insecure
prompts, add <tt>deployment.insecure.jres.locked</tt> to
<tt>/etc/.java/deployment/deployment.properties</tt>.</description>
      <rationale>Mobile code has the potential to cause damage to information systems within
an organization if used maliciously. It can execute without explicit action
from, or notification to, a user. Requiring Java to enforce prompting the user
prior to executing mobile code will strengthen the security posture of the
system. As such, ensuring users cannot change the permission settings which
control the insecure prompts for mobile code execution contributes to a more
consistent security profile.</rationale>
      <ref disa="CCI-002460" nist="SC-18(4)" srg="SRG-APP-000488" stigid="JRE8-UX-000170"/>
      <oval id="java_jre_insecure_prompt_locked"/>
      <ocil clause="it is not configured">To verify that a user cannot change the mobile code setting for insecure
prompts, run the following command:
<pre>$ grep 'deployment.insecure.jres.locked' /etc/.java/deployment/deployment.properties</pre>
If properly configured, the output should return:
<pre>deployment.insecure.jres.locked</pre></ocil>
    </Rule>
    <Rule id="java_jre_lock_untrusted_sources" severity="medium">
      <title>Lock Execution of Signed Java Applets From Untrusted Sources Setting</title>
      <description>To ensure that Java cannot execute from untrusted sources, set
<tt>deployment.security.askgrantdialog.show</tt> to equal <tt>false</tt>
in <tt>/etc/.java/deployment/deployment.properties</tt>.</description>
      <rationale>Permitting execution of signed Java applets from un-trusted sources may
result in acquiring malware, and risks system modification, invasion of
privacy, or denial of service. Block users from granting permissions to
applets and JWS applications.</rationale>
      <ref disa="CCI-001695" nist="SC-18 (3)" srg="SRG-APP-000112" stigid="JRE8-UX-000090"/>
      <oval id="java_jre_lock_untrusted_sources"/>
      <ocil clause="it does not exist or is not configured properly">To verify that Java cannot execute from untrusted sources,
run the following command:
<pre>$ grep 'askgrantdialog.show=false' /etc/.java/deployment/deployment.properties</pre>
If properly configured, the output should return:
<pre>deployment.security.askgrantdialog.show=false</pre></ocil>
    </Rule>
    <Rule id="java_jre_lock_untrusted_sources_locked" severity="medium">
      <title>Disable User Access to Locking Untrusted Sources Setting</title>
      <description>To ensure that users cannot change the untrusted sources settings,
add <tt>deployment.security.askgrantdialog.show.locked</tt> to
<tt>/etc/.java/deployment/deployment.properties</tt>.</description>
      <rationale>Permitting execution of signed Java applets from un-trusted sources may
result in malware running on the system, and risks system modification,
invasion of privacy, or denial of service. As such, ensuring users cannot
change the permission settings which control the execution of signed Java
applets contributes to a more consistent security profile.</rationale>
      <ref disa="CCI-001695" nist="SC-18 (3)" srg="SRG-APP-000112" stigid="JRE8-UX-000090"/>
      <oval id="java_jre_lock_untrusted_sources_locked"/>
      <ocil clause="it does not exist or is not configured properly">To verify that users cannot change the untrusted sources settings,
run the following command:
<pre>$ grep 'askgrantdialog.show.locked' /etc/.java/deployment/deployment.properties</pre>
If properly configured, the output should return:
<pre>deployment.security.askgrantdialog.show.locked</pre></ocil>
    </Rule>
    <Rule id="java_jre_security_revocation_check" severity="medium">
      <title>Enable Revocation Checks for Publisher Certificates</title>
      <description>To ensure that certificate revocation checks are enabled, set
<tt>deployment.security.revocation.check</tt> to equal <tt>ALL_CERTIFICATES</tt>
in <tt>/etc/.java/deployment/deployment.properties</tt>.</description>
      <rationale>Certificates may be revoked due to improper issuance, compromise of the certificate,
and failure to adhere to policy. Therefore, any certificate found on a CRL
should not be trusted. Permitting execution of an applet published with a
revoked certificate may result in spoofing, malware, system modification,
invasion of privacy, and denial of service.</rationale>
      <ref disa="CCI-001991" nist="IA-5(2)(d)" srg="SRG-APP-000401" stigid="JRE8-UX-000160"/>
      <oval id="java_jre_security_revocation_check"/>
      <ocil clause="it does not exist or is not configured properly">To verify that revocation checks are enabled, run the following command:
<pre>$ grep 'deployment.security.revocation.check=' /etc/.java/deployment/deployment.properties</pre>
If properly configured, the output should return:
<pre>deployment.security.revocation.check=ALL_CERTIFICATES</pre></ocil>
    </Rule>
    <Rule id="java_jre_security_revocation_check_locked" severity="medium">
      <title>Disable User Access to Revocation Check Settings</title>
      <description>To ensure that users cannot change certificate revocation check settings,
add <tt>deployment.security.revocation.check.locked</tt> to
<tt>/etc/.java/deployment/deployment.properties</tt>.</description>
      <rationale>Permitting execution of an applet published with a revoked certificate may
result in spoofing, malware, system modification, invasion of privacy,
and denial of service. As such, ensuring users cannot change settings
contributes to a more consistent security profile.</rationale>
      <ref disa="CCI-001991" nist="IA-5(2)(d)" srg="SRG-APP-000401" stigid="JRE8-UX-000160"/>
      <oval id="java_jre_security_revocation_check_locked"/>
      <ocil clause="it does not exist or is not configured properly">To verify that users cannot change revocation check settings,
run the following command:
<pre>$ grep 'revocation.check.locked' /etc/.java/deployment/deployment.properties</pre>
If properly configured, the output should return:
<pre>deployment.security.revocation.check.locked</pre></ocil>
    </Rule>
    <Rule id="java_jre_unsigned_applications" severity="high">
      <title>Disable Execution of Unsigned Applications</title>
      <description>To ensure that Java does not allow unsigned applications to run, set
<tt>deployment.security.level</tt> to equal <tt>VERY_HIGH</tt> in
<tt>/etc/.java/deployment/deployment.properties</tt>.</description>
      <rationale>Unsigned applications could perform numerous types of attacks on a system.
Applications that are signed with a valid certificate and include the
permissions attribute in the manifest for the main JAR file are allowed to
run with security prompts. All other applications are blocked.</rationale>
      <ref disa="CCI-000366" nist="CM-6(b)" srg="SRG-APP-000516" stigid="JRE8-UX-000060"/>
      <oval id="java_jre_unsigned_applications"/>
      <ocil clause="it is not configured">To verify that Java does not allow unsigned applications to run,
run the following command:
<pre>$ grep 'deployment.security.level=VERY_HIGH' /etc/.java/deployment/deployment.properties</pre>
If properly configured, the output should return:
<pre>deployment.security.level=VERY_HIGH</pre></ocil>
    </Rule>
    <Rule id="java_jre_unsigned_applications_locked" severity="high">
      <title>Disable User Access to Unsigned Applications Setting</title>
      <description>To ensure that users cannot change the unsigned applications setting, add
<tt>deployment.security.level.locked</tt> to
<tt>/etc/.java/deployment/deployment.properties</tt>.</description>
      <rationale>Unsigned applications could perform numerous types of attacks on a system.
As such, ensuring users cannot change the permission settings which control
the execution of unsigned Java applications contributes to a more consistent
security profile.</rationale>
      <ref disa="CCI-000366" nist="CM-6(b)" srg="SRG-APP-000516" stigid="JRE8-UX-000060"/>
      <oval id="java_jre_unsigned_applications_locked"/>
      <ocil clause="it is not configured">To verify that a user cannot change the unsigned applications setting, run
the following command:
<pre>$ grep 'deployment.security.level.locked' /etc/.java/deployment/deployment.properties</pre>
If properly configured,
the output should return:
<pre>deployment.security.level.locked</pre></ocil>
    </Rule>
    <Rule id="java_jre_updated" severity="low">
      <title>Ensure Java Patches Installed</title>
      <description>If the system is joined to the Red Hat Network, a Red Hat Satellite Server,
or a yum server, run the following command to install updates:
<pre>$ sudo yum update</pre>
If the system is not configured to use one of these sources, updates (in the form of RPM packages)
can be manually downloaded and installed using <tt>rpm</tt>.
<br/><br/>
NOTE: U.S. Defense systems are required to be patched within 30 days or sooner as local policy
dictates.</description>
      <rationale>Running an older version of the JRE can introduce security
vulnerabilities to the system.</rationale>
      <ref disa="CCI-002605" nist="SI-2(c)" srg="SRG-APP-000456" stigid="JRE8-UX-000180"/>
      <oval id="java_jre_updated"/>
      <ocil clause="it is not updated">If the system is joined to the Red Hat Network, a Red Hat Satellite Server, or
a yum server which provides updates, invoking the following command will
indicate if updates are available:
<pre>$ sudo yum check-update</pre>
If the system is not configured to update from one of these sources,
run the following command to list when each package was last updated:
<pre>$ rpm -qa -last</pre>
Compare this to Red Hat Security Advisories (RHSA) listed at

    <html:a href="https://access.redhat.com/security/updates/active/">https://access.redhat.com/security/updates/active/</html:a>
to determine if the system is missing applicable updates.</ocil>
    </Rule>
    <Rule id="java_jre_validation_crl" severity="medium">
      <title>Enable Use of Certificate Revocation Lists</title>
      <description>To ensure that certificate revocation lists are enabled, set
<tt>deployment.security.validation.crl</tt> to equal <tt>true</tt>
in <tt>/etc/.java/deployment/deployment.properties</tt>.</description>
      <rationale>A certificate revocation list is a directory which contains a list of
certificates that have been revoked for various reasons. Certificates may be
revoked due to improper issuance, compromise of the certificate, and failure
to adhere to policy. Therefore, any certificate found on a CRL should not be
trusted. Permitting execution of an applet published with a revoked
certificate may result in spoofing, malware, system modification, invasion
of privacy, and denial of service.</rationale>
      <ref disa="CCI-001991" nist="IA-5(2)(d)" srg="SRG-APP-000401" stigid="JRE8-UX-000150"/>
      <oval id="java_jre_validation_crl"/>
      <ocil clause="it does not exist or is not configured properly">To verify that the use of Certificate Revocation Lists are enabled, run the following command:
<pre>$ grep 'validation.crl=true' /etc/.java/deployment/deployment.properties</pre>
If properly configured, the output should return:
<pre>deployment.security.validation.crl=true</pre></ocil>
    </Rule>
    <Rule id="java_jre_validation_crl_locked" severity="medium">
      <title>Disable User Access to Certificate Revocation List Settings</title>
      <description>To ensure that users cannot change certificate revocation list settings,
add <tt>deployment.security.validation.crl.locked</tt> to
<tt>/etc/.java/deployment/deployment.properties</tt>.</description>
      <rationale>Permitting execution of an applet published with a revoked certificate may
result in spoofing, malware, system modification, invasion of privacy, and
denial of service. This is why it is important to ensure to check against a
Certificate Revocation List. As such, ensuring users cannot change settings
contributes to a more consistent security profile.</rationale>
      <ref disa="CCI-001991" nist="IA-5(2)(d)" srg="SRG-APP-000401" stigid="JRE8-UX-000150"/>
      <oval id="java_jre_validation_crl_locked"/>
      <ocil clause="it does not exist or is not configured properly">To verify that users cannot change the use of Certificate Revocation List settings,
run the following command:
<pre>$ grep 'validation.crl.locked' /etc/.java/deployment/deployment.properties</pre>
If properly configured, the output should return:
<pre>deployment.security.validation.crl.locked</pre></ocil>
    </Rule>
    <Rule id="java_jre_validation_ocsp" severity="medium">
      <title>Enable Online Certificate Validation</title>
      <description>To ensure that online certificate verification is enabled, set
<tt>deployment.security.validation.ocsp</tt> to equal <tt>true</tt>
in <tt>/etc/.java/deployment/deployment.properties</tt>.</description>
      <rationale>Online certificate validation provides a greater degree of validation of certificates
when running a signed Java applet. Permitting execution of an applet with an invalid
certificate may result in malware execution , system modification, invasion of privacy,
and denial of service.</rationale>
      <ref disa="CCI-000185" nist="IA-5(2)(a)" srg="SRG-APP-000175" stigid="JRE8-UX-000100"/>
      <oval id="java_jre_validation_ocsp"/>
      <ocil clause="it does not exist or is not configured properly">To verify that online certificate verification is enabled,
run the following command:
<pre>$ grep 'validation.ocsp=true' /etc/.java/deployment/deployment.properties</pre>
If properly configured, the output should return:
<pre>deployment.security.validation.ocsp=true</pre></ocil>
    </Rule>
    <Rule id="java_jre_validation_ocsp_locked" severity="medium">
      <title>Disable User Access to Online Certificate Validation Setting</title>
      <description>To ensure that users cannot change the online certificate verification setting,
add <tt>deployment.security.validation.ocsp.locked</tt> to
<tt>/etc/.java/deployment/deployment.properties</tt>.</description>
      <rationale>Online certificate validation provides a greater degree of validation of certificates
when running a signed Java applet. Permitting execution of an applet with an invalid
certificate may result in malware execution , system modification, invasion of privacy,
and denial of service. As such, ensuring users cannot change settings contributes to
a more consistent security profile.</rationale>
      <ref disa="CCI-000185" nist="IA-5(2)(a)" srg="SRG-APP-000175" stigid="JRE8-UX-000100"/>
      <oval id="java_jre_validation_ocsp_locked"/>
      <ocil clause="it does not exist or is not configured properly">To verify that users cannot change online certificate verification,
run the following command:
<pre>$ grep 'validation.ocsp.locked' /etc/.java/deployment/deployment.properties</pre>
If properly configured, the output should return:
<pre>deployment.security.validation.ocsp.locked</pre></ocil>
    </Rule>
    <Group id="java_jre_accepted_sites_configured">
      <title>Configure the exception.sites File</title>
      <description>Utilizing a whitelist provides a configuration management method for
allowing the execution of only authorized software. Using only authorized
software decreases risk by limiting the number of potential vulnerabilities.
The <tt>exception.sites</tt> file is used for ensuring that authorized
software is allowed to be executed. To ensure that the Java
<tt>/etc/.java/deployment/deployment.properties</tt> file is configured
correctly, <tt>deployment.user.security.exception.sites</tt> must be configured
to point to a valid <tt>exception.sites</tt> file.</description>
      <Rule id="java_jre_accepted_sites_exists" severity="medium">
        <title>The Java exception.sites File Exists</title>
        <description>By default, no <tt>exception.sites</tt> file exists which means that there is no prevention of
unauthorized software. The <tt>exception.sites</tt> file is a text file containing single-line URLs for
accepted risk sites. If the Java accepted sites list file does not exist, it can be added
by running:
<pre>$ sudo mkdir -p -m 755 /etc/.java/deployment
$ sudo touch /etc/.java/deployment/exception.sites
$ sudo chmod 644 /etc/.java/deployment/exception.sites</pre></description>
        <rationale>Utilizing a
whitelist provides a configuration management method for allowing the
execution of only authorized software. Using only authorized software
decreases risk by limiting the number of potential vulnerabilities.</rationale>
        <ref disa="CCI-001774" nist="CM-7(5)(b)" srg="SRG-APP-000386" stigid="JRE8-UX-000130"/>
        <oval id="java_jre_accepted_sites_exists"/>
        <ocil clause="it does not exist">To verify that the <tt>exception.sites</tt> file exists,
run the following command:
<pre>$ ls /etc/.java/deployment</pre>
The output should contain:
<pre>exception.sites</pre></ocil>
      </Rule>
      <Rule id="java_jre_accepted_sites_properties" severity="medium">
        <title>Configure the Path to the exception.sites File</title>
        <description>To ensure that the accepted sites list file is set in
<tt>/etc/.java/deployment/deployment.properties</tt>, add or modify
<tt>deployment.user.security.exception.sites</tt> to equal
<tt>/etc/.java/deployment/exception.sites</tt>.</description>
        <rationale>Without a proper path for the accepted sites list file, unauthorized
software programs are able to be executed. Using only authorized software
decreases risk by limiting the number of potential vulnerabilities.</rationale>
        <ref disa="CCI-001774" nist="CM-7(5)(b)" srg="SRG-APP-000386" stigid="JRE8-UX-000120"/>
        <oval id="java_jre_accepted_sites_properties"/>
        <ocil clause="it is not configured">To verify that <tt>deployment.properties</tt> file is configured properly,
run the following command:
<pre>$ grep 'deployment.user.security.exception.sites=' /etc/.java/deployment/deployment.properties</pre>
If properly configured, the output should return:
<pre>deployment.user.security.exception.sites=/etc/.java/deployment/exception.sites</pre></ocil>
      </Rule>
    </Group>
    <Group id="java_jre_deployment_config_configured">
      <title>Configure the deployment.config File</title>
      <description>The <tt>deployment.config</tt> file if used for specifying the System-level
<tt>deployment.properties</tt> file. The System-level configuration for Java is
configured in <tt>/etc/.java/deployment</tt>. By default, no <tt>deployment.config</tt>
file exists. To ensure that the Java <tt>/etc/.java/deployment/deployment.config</tt> file
is configured correctly, <tt>deployment.system.config</tt> and
<tt>deployment.system.config.mandatory</tt> need to be set correctly.</description>
      <Rule id="java_jre_deployment_config_exists" severity="medium">
        <title>The Java deployment.config File Exists</title>
        <description>If the Java deployment configuration file does not exist, it can be added
by running:
<pre>$ sudo mkdir -p -m 755 /etc/.java/deployment
$ sudo touch /etc/.java/deployment/deployment.config
$ sudo chmod 644 /etc/.java/deployment/deployment.config</pre></description>
        <rationale>By default no deployment.config file exists; thus, no system-wide deployment.properties file
exists. The file must be created. The deployment.config file is used for specifying the
location and execution of system-level properties for the Java Runtime Environment. Without
the deployment.config file, setting particular options for the Java control panel is
not possible.</rationale>
        <ref disa="CCI-000366" nist="CM-6(b)" srg="SRG-APP-000516" stigid="JRE8-UX-000010"/>
        <oval id="java_jre_deployment_config_exists"/>
        <ocil clause="it does not exist">To verify that the <tt>deployment.config</tt> file exists,
run the following command:
<pre>$ ls /etc/.java/deployment</pre>
The output should contain:
<pre>deployment.config</pre></ocil>
      </Rule>
      <Rule id="java_jre_deployment_config_mandatory" severity="medium">
        <title>Configure The Java Deployment Mandatory Setting</title>
        <description>To configure the Java mandatory deployment setting, add or modify
<tt>deployment.system.config.mandatory</tt> to equal <tt>true</tt>
in <tt>/etc/.java/deployment/deployment.config</tt>.</description>
        <rationale>Without a proper path for the properties file, deployment would not be possible.
If the path specified does not lead to a properties file, the value of the
<tt>deployment.system.config.mandatory</tt> key determines how to handle the situation.
If the value of this key is true, JRE will not allow Java applications to run if
the path to the properties file is invalid.</rationale>
        <ref disa="CCI-000366" nist="CM-6(b)" srg="SRG-APP-000516" stigid="JRE8-UX-000020"/>
        <oval id="java_jre_deployment_config_mandatory"/>
        <ocil clause="it is not configured">To verify that <tt>deployment.config</tt> is configured properly,
run the following command:
<pre>$ grep 'deployment.system.config.mandatory' /etc/.java/deployment/deployment.config</pre>
If properly configured, the output should return:
<pre>deployment.system.config.mandatory=true</pre></ocil>
      </Rule>
      <Rule id="java_jre_deployment_config_properties" severity="medium">
        <title>Configure the Path to the deployment.properties File</title>
        <description>To ensure that the Java properties file is set in
<tt>/etc/.java/deployment/deployment.config</tt>, add or modify
<tt>deployment.system.config</tt> to equal
<tt>/etc/.java/deployment/deployment.properties</tt>.</description>
        <rationale>Without a proper path for the properties file, deployment would not be possible.
If the path specified does not lead to a properties file, the value of the
<tt>deployment.system.config.mandatory</tt> key determines how to handle the situation.
If the value of this key is true, JRE will not allow Java applications to run if
the path to the properties file is invalid.</rationale>
        <ref disa="CCI-000366" nist="CM-6(b)" srg="SRG-APP-000516" stigid="JRE8-UX-000020"/>
        <oval id="java_jre_deployment_config_properties"/>
        <ocil clause="it is not configured">To verify that <tt>deployment.config</tt> is configured properly,
run the following command:
<pre>$ grep 'deployment.system.config=file' /etc/.java/deployment/deployment.config</pre>
If properly configured, the output should return:
<pre>deployment.system.config=file:///etc/.java/deployment/deployment.properties</pre></ocil>
      </Rule>
    </Group>
  </Group>
</Benchmark>
