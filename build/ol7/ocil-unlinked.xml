<?xml version="1.0"?>
<ocil xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://scap.nist.gov/schema/ocil/2.0" xmlns:xhtml="http://www.w3.org/1999/xhtml">
  <generator>
    <product_name>xccdf-create-ocil.xslt from SCAP Security Guide</product_name>
    <product_version>ssg: 0.1.58</product_version>
    <schema_version>2.0</schema_version>
    <timestamp>2021-09-19T21:48:21-05:00</timestamp>
  </generator>
  <questionnaires>
    <questionnaire id="prefer_64bit_os_ocil">
      <title>Prefer to use a 64-bit Operating System when supported</title>
      <actions>
        <test_action_ref>prefer_64bit_os_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="rpm_verify_hashes_ocil">
      <title>Verify File Hashes with RPM</title>
      <actions>
        <test_action_ref>rpm_verify_hashes_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="rpm_verify_ownership_ocil">
      <title>Verify and Correct Ownership with RPM</title>
      <actions>
        <test_action_ref>rpm_verify_ownership_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="rpm_verify_permissions_ocil">
      <title>Verify and Correct File Permissions with RPM</title>
      <actions>
        <test_action_ref>rpm_verify_permissions_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_aide_installed_ocil">
      <title>Install AIDE</title>
      <actions>
        <test_action_ref>package_aide_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="aide_build_database_ocil">
      <title>Build and Test AIDE Database</title>
      <actions>
        <test_action_ref>aide_build_database_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="aide_periodic_cron_checking_ocil">
      <title>Configure Periodic Execution of AIDE</title>
      <actions>
        <test_action_ref>aide_periodic_cron_checking_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="aide_scan_notification_ocil">
      <title>Configure Notification of Post-AIDE Scan Details</title>
      <actions>
        <test_action_ref>aide_scan_notification_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="aide_use_fips_hashes_ocil">
      <title>Configure AIDE to Use FIPS 140-2 for Validating Hashes</title>
      <actions>
        <test_action_ref>aide_use_fips_hashes_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="aide_verify_acls_ocil">
      <title>Configure AIDE to Verify Access Control Lists (ACLs)</title>
      <actions>
        <test_action_ref>aide_verify_acls_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="aide_verify_ext_attributes_ocil">
      <title>Configure AIDE to Verify Extended Attributes</title>
      <actions>
        <test_action_ref>aide_verify_ext_attributes_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_dracut-fips-aesni_installed_ocil">
      <title>Install the dracut-fips-aesni Package</title>
      <actions>
        <test_action_ref>package_dracut-fips-aesni_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_dracut-fips_installed_ocil">
      <title>Install the dracut-fips Package</title>
      <actions>
        <test_action_ref>package_dracut-fips_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="etc_system_fips_exists_ocil">
      <title>Ensure '/etc/system-fips' exists</title>
      <actions>
        <test_action_ref>etc_system_fips_exists_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="grub2_enable_fips_mode_ocil">
      <title>Enable FIPS Mode in GRUB2</title>
      <actions>
        <test_action_ref>grub2_enable_fips_mode_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="harden_ssh_client_crypto_policy_ocil">
      <title>Harden SSH client Crypto Policy</title>
      <actions>
        <test_action_ref>harden_ssh_client_crypto_policy_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="harden_sshd_crypto_policy_ocil">
      <title>Harden SSHD Crypto Policy</title>
      <actions>
        <test_action_ref>harden_sshd_crypto_policy_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="installed_OS_is_FIPS_certified_ocil">
      <title>The Installed Operating System Is FIPS 140-2 Certified</title>
      <actions>
        <test_action_ref>installed_OS_is_FIPS_certified_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="installed_OS_is_vendor_supported_ocil">
      <title>The Installed Operating System Is Vendor Supported</title>
      <actions>
        <test_action_ref>installed_OS_is_vendor_supported_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="configure_user_data_backups_ocil">
      <title>Configure Backups of User Data</title>
      <actions>
        <test_action_ref>configure_user_data_backups_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="install_antivirus_ocil">
      <title>Install Virus Scanning Software</title>
      <actions>
        <test_action_ref>install_antivirus_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="install_hids_ocil">
      <title>Install Intrusion Detection Software</title>
      <actions>
        <test_action_ref>install_hids_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="install_mcafee_antivirus_ocil">
      <title>Install McAfee Virus Scanning Software</title>
      <actions>
        <test_action_ref>install_mcafee_antivirus_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="install_mcafee_cma_rt_ocil">
      <title>Install the McAfee Runtime Libraries and Linux Agent</title>
      <actions>
        <test_action_ref>install_mcafee_cma_rt_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_mcafeetp_installed_ocil">
      <title>Install McAfee Endpoint Security for Linux (ENSL)</title>
      <actions>
        <test_action_ref>package_mcafeetp_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="agent_mfetpd_running_ocil">
      <title>Ensure McAfee Endpoint Security for Linux (ENSL) is running</title>
      <actions>
        <test_action_ref>agent_mfetpd_running_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_MFEhiplsm_installed_ocil">
      <title>Install the Host Intrusion Prevention System (HIPS) Module</title>
      <actions>
        <test_action_ref>package_MFEhiplsm_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="install_mcafee_hbss_accm_ocil">
      <title>Install the Asset Configuration Compliance Module (ACCM)</title>
      <actions>
        <test_action_ref>install_mcafee_hbss_accm_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="install_mcafee_hbss_pa_ocil">
      <title>Install the Policy Auditor (PA) Module</title>
      <actions>
        <test_action_ref>install_mcafee_hbss_pa_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="encrypt_partitions_ocil">
      <title>Encrypt Partitions</title>
      <actions>
        <test_action_ref>encrypt_partitions_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="partition_for_boot_ocil">
      <title>Ensure /boot Located On Separate Partition</title>
      <actions>
        <test_action_ref>partition_for_boot_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="partition_for_home_ocil">
      <title>Ensure /home Located On Separate Partition</title>
      <actions>
        <test_action_ref>partition_for_home_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="partition_for_opt_ocil">
      <title>Ensure /opt Located On Separate Partition</title>
      <actions>
        <test_action_ref>partition_for_opt_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="partition_for_srv_ocil">
      <title>Ensure /srv Located On Separate Partition</title>
      <actions>
        <test_action_ref>partition_for_srv_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="partition_for_tmp_ocil">
      <title>Ensure /tmp Located On Separate Partition</title>
      <actions>
        <test_action_ref>partition_for_tmp_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="partition_for_usr_ocil">
      <title>Ensure /usr Located On Separate Partition</title>
      <actions>
        <test_action_ref>partition_for_usr_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="partition_for_var_ocil">
      <title>Ensure /var Located On Separate Partition</title>
      <actions>
        <test_action_ref>partition_for_var_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="partition_for_var_log_ocil">
      <title>Ensure /var/log Located On Separate Partition</title>
      <actions>
        <test_action_ref>partition_for_var_log_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="partition_for_var_log_audit_ocil">
      <title>Ensure /var/log/audit Located On Separate Partition</title>
      <actions>
        <test_action_ref>partition_for_var_log_audit_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="partition_for_var_tmp_ocil">
      <title>Ensure /var/tmp Located On Separate Partition</title>
      <actions>
        <test_action_ref>partition_for_var_tmp_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="dconf_db_up_to_date_ocil">
      <title>Make sure that the dconf databases are up-to-date with regards to respective keyfiles</title>
      <actions>
        <test_action_ref>dconf_db_up_to_date_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="enable_dconf_user_profile_ocil">
      <title>Configure GNOME3 DConf User Profile</title>
      <actions>
        <test_action_ref>enable_dconf_user_profile_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="dconf_gnome_disable_restart_shutdown_ocil">
      <title>Disable the GNOME3 Login Restart and Shutdown Buttons</title>
      <actions>
        <test_action_ref>dconf_gnome_disable_restart_shutdown_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="dconf_gnome_disable_user_list_ocil">
      <title>Disable the GNOME3 Login User List</title>
      <actions>
        <test_action_ref>dconf_gnome_disable_user_list_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="dconf_gnome_enable_smartcard_auth_ocil">
      <title>Enable the GNOME3 Login Smartcard Authentication</title>
      <actions>
        <test_action_ref>dconf_gnome_enable_smartcard_auth_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="dconf_gnome_login_retries_ocil">
      <title>Set the GNOME3 Login Number of Failures</title>
      <actions>
        <test_action_ref>dconf_gnome_login_retries_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="gnome_gdm_disable_automatic_login_ocil">
      <title>Disable GDM Automatic Login</title>
      <actions>
        <test_action_ref>gnome_gdm_disable_automatic_login_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="gnome_gdm_disable_guest_login_ocil">
      <title>Disable GDM Guest Login</title>
      <actions>
        <test_action_ref>gnome_gdm_disable_guest_login_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="gnome_gdm_disable_xdmcp_ocil">
      <title>Disable XDMCP in GDM</title>
      <actions>
        <test_action_ref>gnome_gdm_disable_xdmcp_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="dconf_gnome_disable_automount_ocil">
      <title>Disable GNOME3 Automounting</title>
      <actions>
        <test_action_ref>dconf_gnome_disable_automount_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="dconf_gnome_disable_automount_open_ocil">
      <title>Disable GNOME3 Automount Opening</title>
      <actions>
        <test_action_ref>dconf_gnome_disable_automount_open_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="dconf_gnome_disable_autorun_ocil">
      <title>Disable GNOME3 Automount running</title>
      <actions>
        <test_action_ref>dconf_gnome_disable_autorun_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="dconf_gnome_remote_access_credential_prompt_ocil">
      <title>Require Credential Prompting for Remote Access in GNOME3</title>
      <actions>
        <test_action_ref>dconf_gnome_remote_access_credential_prompt_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="dconf_gnome_remote_access_encryption_ocil">
      <title>Require Encryption for Remote Access in GNOME3</title>
      <actions>
        <test_action_ref>dconf_gnome_remote_access_encryption_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="dconf_gnome_screensaver_idle_activation_enabled_ocil">
      <title>Enable GNOME3 Screensaver Idle Activation</title>
      <actions>
        <test_action_ref>dconf_gnome_screensaver_idle_activation_enabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="dconf_gnome_screensaver_idle_activation_locked_ocil">
      <title>Ensure Users Cannot Change GNOME3 Screensaver Idle Activation</title>
      <actions>
        <test_action_ref>dconf_gnome_screensaver_idle_activation_locked_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="dconf_gnome_screensaver_idle_delay_ocil">
      <title>Set GNOME3 Screensaver Inactivity Timeout</title>
      <actions>
        <test_action_ref>dconf_gnome_screensaver_idle_delay_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="dconf_gnome_screensaver_lock_delay_ocil">
      <title>Set GNOME3 Screensaver Lock Delay After Activation Period</title>
      <actions>
        <test_action_ref>dconf_gnome_screensaver_lock_delay_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="dconf_gnome_screensaver_lock_enabled_ocil">
      <title>Enable GNOME3 Screensaver Lock After Idle Period</title>
      <actions>
        <test_action_ref>dconf_gnome_screensaver_lock_enabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="dconf_gnome_screensaver_lock_locked_ocil">
      <title>Ensure Users Cannot Change GNOME3 Screensaver Lock After Idle Period</title>
      <actions>
        <test_action_ref>dconf_gnome_screensaver_lock_locked_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="dconf_gnome_screensaver_mode_blank_ocil">
      <title>Implement Blank Screensaver</title>
      <actions>
        <test_action_ref>dconf_gnome_screensaver_mode_blank_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="dconf_gnome_screensaver_user_info_ocil">
      <title>Disable Full User Name on Splash Shield</title>
      <actions>
        <test_action_ref>dconf_gnome_screensaver_user_info_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="dconf_gnome_screensaver_user_locks_ocil">
      <title>Ensure Users Cannot Change GNOME3 Screensaver Settings</title>
      <actions>
        <test_action_ref>dconf_gnome_screensaver_user_locks_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="dconf_gnome_session_idle_user_locks_ocil">
      <title>Ensure Users Cannot Change GNOME3 Session Idle Settings</title>
      <actions>
        <test_action_ref>dconf_gnome_session_idle_user_locks_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="dconf_gnome_disable_ctrlaltdel_reboot_ocil">
      <title>Disable Ctrl-Alt-Del Reboot Key Sequence in GNOME3</title>
      <actions>
        <test_action_ref>dconf_gnome_disable_ctrlaltdel_reboot_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="dconf_gnome_disable_user_admin_ocil">
      <title>Disable User Administration in GNOME3</title>
      <actions>
        <test_action_ref>dconf_gnome_disable_user_admin_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_glibc_installed_ocil">
      <title>Package glibc Installed</title>
      <actions>
        <test_action_ref>package_glibc_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_uuidd_installed_ocil">
      <title>Package uuidd Installed</title>
      <actions>
        <test_action_ref>package_uuidd_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_authorized_local_users_sidadm_orasid_ocil">
      <title>Only sidadm and orasid/oracle User Accounts Exist on Operating System</title>
      <actions>
        <test_action_ref>accounts_authorized_local_users_sidadm_orasid_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_sudo_installed_ocil">
      <title>Install sudo Package</title>
      <actions>
        <test_action_ref>package_sudo_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sudo_add_env_reset_ocil">
      <title>Ensure sudo Runs In A Minimal Environment - sudo env_reset</title>
      <actions>
        <test_action_ref>sudo_add_env_reset_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sudo_add_ignore_dot_ocil">
      <title>Ensure sudo Ignores Commands In Current Dir - sudo ignore_dot</title>
      <actions>
        <test_action_ref>sudo_add_ignore_dot_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sudo_add_noexec_ocil">
      <title>Ensure Privileged Escalated Commands Cannot Execute Other Commands - sudo NOEXEC</title>
      <actions>
        <test_action_ref>sudo_add_noexec_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sudo_add_passwd_timeout_ocil">
      <title>Ensure sudo passwd_timeout is appropriate - sudo passwd_timeout</title>
      <actions>
        <test_action_ref>sudo_add_passwd_timeout_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sudo_add_requiretty_ocil">
      <title>Ensure Only Users Logged In To Real tty Can Execute Sudo - sudo requiretty</title>
      <actions>
        <test_action_ref>sudo_add_requiretty_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sudo_add_umask_ocil">
      <title>Ensure sudo umask is appropriate - sudo umask</title>
      <actions>
        <test_action_ref>sudo_add_umask_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sudo_add_use_pty_ocil">
      <title>Ensure Only Users Logged In To Real tty Can Execute Sudo - sudo use_pty</title>
      <actions>
        <test_action_ref>sudo_add_use_pty_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sudo_custom_logfile_ocil">
      <title>Ensure Sudo Logfile Exists - sudo logfile</title>
      <actions>
        <test_action_ref>sudo_custom_logfile_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sudo_dedicated_group_ocil">
      <title>Ensure a dedicated group owns sudo</title>
      <actions>
        <test_action_ref>sudo_dedicated_group_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sudo_remove_no_authenticate_ocil">
      <title>Ensure Users Re-Authenticate for Privilege Escalation - sudo !authenticate</title>
      <actions>
        <test_action_ref>sudo_remove_no_authenticate_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sudo_remove_nopasswd_ocil">
      <title>Ensure Users Re-Authenticate for Privilege Escalation - sudo NOPASSWD</title>
      <actions>
        <test_action_ref>sudo_remove_nopasswd_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sudo_require_authentication_ocil">
      <title>Ensure Users Re-Authenticate for Privilege Escalation - sudo</title>
      <actions>
        <test_action_ref>sudo_require_authentication_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sudo_require_reauthentication_ocil">
      <title>The operating system must require Re-Authentication when using the sudo command. Ensure sudo timestamp_timeout is appropriate - sudo timestamp_timeout</title>
      <actions>
        <test_action_ref>sudo_require_reauthentication_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sudo_restrict_privilege_elevation_to_authorized_ocil">
      <title>The operating system must restrict privilege elevation to authorized personnel</title>
      <actions>
        <test_action_ref>sudo_restrict_privilege_elevation_to_authorized_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sudo_vdsm_nopasswd_ocil">
      <title>Only the VDSM User Can Use sudo NOPASSWD</title>
      <actions>
        <test_action_ref>sudo_vdsm_nopasswd_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sudoers_explicit_command_args_ocil">
      <title>Explicit arguments in sudo specifications</title>
      <actions>
        <test_action_ref>sudoers_explicit_command_args_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sudoers_no_command_negation_ocil">
      <title>Don't define allowed commands in sudoers by means of exclusion</title>
      <actions>
        <test_action_ref>sudoers_no_command_negation_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sudoers_no_root_target_ocil">
      <title>Don't target root user in the sudoers file</title>
      <actions>
        <test_action_ref>sudoers_no_root_target_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sudoers_validate_passwd_ocil">
      <title>Ensure invoking users password for privilege escalation when using sudo</title>
      <actions>
        <test_action_ref>sudoers_validate_passwd_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_binutils_installed_ocil">
      <title>Install binutils Package</title>
      <actions>
        <test_action_ref>package_binutils_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_cryptsetup-luks_installed_ocil">
      <title>Install cryptsetup-luks Package</title>
      <actions>
        <test_action_ref>package_cryptsetup-luks_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_gnutls-utils_installed_ocil">
      <title>Ensure gnutls-utils is installed</title>
      <actions>
        <test_action_ref>package_gnutls-utils_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_libcap-ng-utils_installed_ocil">
      <title>Install libcap-ng-utils Package</title>
      <actions>
        <test_action_ref>package_libcap-ng-utils_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_nss-tools_installed_ocil">
      <title>Ensure nss-tools is installed</title>
      <actions>
        <test_action_ref>package_nss-tools_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_openscap-scanner_installed_ocil">
      <title>Install openscap-scanner Package</title>
      <actions>
        <test_action_ref>package_openscap-scanner_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_rear_installed_ocil">
      <title>Install rear Package</title>
      <actions>
        <test_action_ref>package_rear_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_rng-tools_installed_ocil">
      <title>Install rng-tools Package</title>
      <actions>
        <test_action_ref>package_rng-tools_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_scap-security-guide_installed_ocil">
      <title>Install scap-security-guide Package</title>
      <actions>
        <test_action_ref>package_scap-security-guide_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_tar_installed_ocil">
      <title>Install tar Package</title>
      <actions>
        <test_action_ref>package_tar_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_vim_installed_ocil">
      <title>Install vim Package</title>
      <actions>
        <test_action_ref>package_vim_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_abrt-addon-ccpp_removed_ocil">
      <title>Uninstall abrt-addon-ccpp Package</title>
      <actions>
        <test_action_ref>package_abrt-addon-ccpp_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_abrt-addon-kerneloops_removed_ocil">
      <title>Uninstall abrt-addon-kerneloops Package</title>
      <actions>
        <test_action_ref>package_abrt-addon-kerneloops_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_abrt-addon-python_removed_ocil">
      <title>Uninstall abrt-addon-python Package</title>
      <actions>
        <test_action_ref>package_abrt-addon-python_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_abrt-cli_removed_ocil">
      <title>Uninstall abrt-cli Package</title>
      <actions>
        <test_action_ref>package_abrt-cli_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_abrt-plugin-logger_removed_ocil">
      <title>Uninstall abrt-plugin-logger Package</title>
      <actions>
        <test_action_ref>package_abrt-plugin-logger_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_abrt-plugin-rhtsupport_removed_ocil">
      <title>Uninstall abrt-plugin-rhtsupport Package</title>
      <actions>
        <test_action_ref>package_abrt-plugin-rhtsupport_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_abrt-plugin-sosreport_removed_ocil">
      <title>Uninstall abrt-plugin-sosreport Package</title>
      <actions>
        <test_action_ref>package_abrt-plugin-sosreport_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_geolite2-city_removed_ocil">
      <title>Uninstall geolite2-city Package</title>
      <actions>
        <test_action_ref>package_geolite2-city_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_geolite2-country_removed_ocil">
      <title>Uninstall geolite2-country Package</title>
      <actions>
        <test_action_ref>package_geolite2-country_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_gssproxy_removed_ocil">
      <title>Uninstall gssproxy Package</title>
      <actions>
        <test_action_ref>package_gssproxy_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_iprutils_removed_ocil">
      <title>Uninstall iprutils Package</title>
      <actions>
        <test_action_ref>package_iprutils_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_krb5-workstation_removed_ocil">
      <title>Uninstall krb5-workstation Package</title>
      <actions>
        <test_action_ref>package_krb5-workstation_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_tuned_removed_ocil">
      <title>Uninstall tuned Package</title>
      <actions>
        <test_action_ref>package_tuned_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="clean_components_post_updating_ocil">
      <title>Ensure yum Removes Previous Package Versions</title>
      <actions>
        <test_action_ref>clean_components_post_updating_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="ensure_gpgcheck_globally_activated_ocil">
      <title>Ensure gpgcheck Enabled In Main yum Configuration</title>
      <actions>
        <test_action_ref>ensure_gpgcheck_globally_activated_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="ensure_gpgcheck_local_packages_ocil">
      <title>Ensure gpgcheck Enabled for Local Packages</title>
      <actions>
        <test_action_ref>ensure_gpgcheck_local_packages_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="ensure_gpgcheck_never_disabled_ocil">
      <title>Ensure gpgcheck Enabled for All yum Package Repositories</title>
      <actions>
        <test_action_ref>ensure_gpgcheck_never_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="ensure_gpgcheck_repo_metadata_ocil">
      <title>Ensure gpgcheck Enabled for Repository Metadata</title>
      <actions>
        <test_action_ref>ensure_gpgcheck_repo_metadata_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="ensure_oracle_gpgkey_installed_ocil">
      <title>Ensure Oracle Linux GPG Key Installed</title>
      <actions>
        <test_action_ref>ensure_oracle_gpgkey_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="banner_etc_issue_ocil">
      <title>Modify the System Login Banner</title>
      <actions>
        <test_action_ref>banner_etc_issue_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="banner_etc_motd_ocil">
      <title>Modify the System Message of the Day Banner</title>
      <actions>
        <test_action_ref>banner_etc_motd_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_groupowner_etc_issue_ocil">
      <title>Verify Group Ownership of System Login Banner</title>
      <actions>
        <test_action_ref>file_groupowner_etc_issue_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_groupowner_etc_motd_ocil">
      <title>Verify Group Ownership of Message of the Day Banner</title>
      <actions>
        <test_action_ref>file_groupowner_etc_motd_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_owner_etc_issue_ocil">
      <title>Verify ownership of System Login Banner</title>
      <actions>
        <test_action_ref>file_owner_etc_issue_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_owner_etc_motd_ocil">
      <title>Verify ownership of Message of the Day Banner</title>
      <actions>
        <test_action_ref>file_owner_etc_motd_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_permissions_etc_issue_ocil">
      <title>Verify permissions on System Login Banner</title>
      <actions>
        <test_action_ref>file_permissions_etc_issue_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_permissions_etc_motd_ocil">
      <title>Verify permissions on Message of the Day Banner</title>
      <actions>
        <test_action_ref>file_permissions_etc_motd_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="dconf_gnome_banner_enabled_ocil">
      <title>Enable GNOME3 Login Warning Banner</title>
      <actions>
        <test_action_ref>dconf_gnome_banner_enabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="dconf_gnome_login_banner_text_ocil">
      <title>Set the GNOME3 Login Warning Banner Text</title>
      <actions>
        <test_action_ref>dconf_gnome_login_banner_text_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="display_login_attempts_ocil">
      <title>Ensure PAM Displays Last Logon/Access Notification</title>
      <actions>
        <test_action_ref>display_login_attempts_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="enable_pam_namespace_ocil">
      <title>Set Up a Private Namespace in PAM Configuration</title>
      <actions>
        <test_action_ref>enable_pam_namespace_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_password_pam_pwhistory_remember_password_auth_ocil">
      <title>Limit Password Reuse: password-auth</title>
      <actions>
        <test_action_ref>accounts_password_pam_pwhistory_remember_password_auth_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_password_pam_pwhistory_remember_system_auth_ocil">
      <title>Limit Password Reuse: system-auth</title>
      <actions>
        <test_action_ref>accounts_password_pam_pwhistory_remember_system_auth_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_password_pam_unix_remember_ocil">
      <title>Limit Password Reuse</title>
      <actions>
        <test_action_ref>accounts_password_pam_unix_remember_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_passwords_pam_faillock_deny_ocil">
      <title>Set Deny For Failed Password Attempts</title>
      <actions>
        <test_action_ref>accounts_passwords_pam_faillock_deny_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_passwords_pam_faillock_deny_root_ocil">
      <title>Configure the root Account for Failed Password Attempts</title>
      <actions>
        <test_action_ref>accounts_passwords_pam_faillock_deny_root_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_passwords_pam_faillock_interval_ocil">
      <title>Set Interval For Counting Failed Password Attempts</title>
      <actions>
        <test_action_ref>accounts_passwords_pam_faillock_interval_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_passwords_pam_faillock_unlock_time_ocil">
      <title>Set Lockout Time for Failed Password Attempts</title>
      <actions>
        <test_action_ref>accounts_passwords_pam_faillock_unlock_time_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_password_pam_dcredit_ocil">
      <title>Ensure PAM Enforces Password Requirements - Minimum Digit Characters</title>
      <actions>
        <test_action_ref>accounts_password_pam_dcredit_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_password_pam_difok_ocil">
      <title>Ensure PAM Enforces Password Requirements - Minimum Different Characters</title>
      <actions>
        <test_action_ref>accounts_password_pam_difok_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_password_pam_lcredit_ocil">
      <title>Ensure PAM Enforces Password Requirements - Minimum Lowercase Characters</title>
      <actions>
        <test_action_ref>accounts_password_pam_lcredit_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_password_pam_maxclassrepeat_ocil">
      <title>Ensure PAM Enforces Password Requirements - Maximum Consecutive Repeating Characters from Same Character Class</title>
      <actions>
        <test_action_ref>accounts_password_pam_maxclassrepeat_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_password_pam_maxrepeat_ocil">
      <title>Set Password Maximum Consecutive Repeating Characters</title>
      <actions>
        <test_action_ref>accounts_password_pam_maxrepeat_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_password_pam_minclass_ocil">
      <title>Ensure PAM Enforces Password Requirements - Minimum Different Categories</title>
      <actions>
        <test_action_ref>accounts_password_pam_minclass_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_password_pam_minlen_ocil">
      <title>Ensure PAM Enforces Password Requirements - Minimum Length</title>
      <actions>
        <test_action_ref>accounts_password_pam_minlen_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_password_pam_ocredit_ocil">
      <title>Ensure PAM Enforces Password Requirements - Minimum Special Characters</title>
      <actions>
        <test_action_ref>accounts_password_pam_ocredit_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_password_pam_retry_ocil">
      <title>Ensure PAM Enforces Password Requirements - Authentication Retry Prompts Permitted Per-Session</title>
      <actions>
        <test_action_ref>accounts_password_pam_retry_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_password_pam_ucredit_ocil">
      <title>Ensure PAM Enforces Password Requirements - Minimum Uppercase Characters</title>
      <actions>
        <test_action_ref>accounts_password_pam_ucredit_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="set_password_hashing_algorithm_libuserconf_ocil">
      <title>Set Password Hashing Algorithm in /etc/libuser.conf</title>
      <actions>
        <test_action_ref>set_password_hashing_algorithm_libuserconf_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="set_password_hashing_algorithm_logindefs_ocil">
      <title>Set Password Hashing Algorithm in /etc/login.defs</title>
      <actions>
        <test_action_ref>set_password_hashing_algorithm_logindefs_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="set_password_hashing_algorithm_systemauth_ocil">
      <title>Set PAM's Password Hashing Algorithm</title>
      <actions>
        <test_action_ref>set_password_hashing_algorithm_systemauth_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_debug-shell_disabled_ocil">
      <title>Disable debug-shell SystemD Service</title>
      <actions>
        <test_action_ref>service_debug-shell_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="disable_ctrlaltdel_burstaction_ocil">
      <title>Disable Ctrl-Alt-Del Burst Action</title>
      <actions>
        <test_action_ref>disable_ctrlaltdel_burstaction_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="disable_ctrlaltdel_reboot_ocil">
      <title>Disable Ctrl-Alt-Del Reboot Activation</title>
      <actions>
        <test_action_ref>disable_ctrlaltdel_reboot_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="grub2_disable_interactive_boot_ocil">
      <title>Verify that Interactive Boot is Disabled</title>
      <actions>
        <test_action_ref>grub2_disable_interactive_boot_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="require_emergency_target_auth_ocil">
      <title>Require Authentication for Emergency Systemd Target</title>
      <actions>
        <test_action_ref>require_emergency_target_auth_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="require_singleuser_auth_ocil">
      <title>Require Authentication for Single User Mode</title>
      <actions>
        <test_action_ref>require_singleuser_auth_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_screen_installed_ocil">
      <title>Install the screen Package</title>
      <actions>
        <test_action_ref>package_screen_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_opensc_installed_ocil">
      <title>Install the opensc Package For Multifactor Authentication</title>
      <actions>
        <test_action_ref>package_opensc_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_pcsc-lite_installed_ocil">
      <title>Install the pcsc-lite package</title>
      <actions>
        <test_action_ref>package_pcsc-lite_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="install_smartcard_packages_ocil">
      <title>Install Smart Card Packages For Multifactor Authentication</title>
      <actions>
        <test_action_ref>install_smartcard_packages_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_pcscd_enabled_ocil">
      <title>Enable the pcscd Service</title>
      <actions>
        <test_action_ref>service_pcscd_enabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="configure_opensc_card_drivers_ocil">
      <title>Configure opensc Smart Card Drivers</title>
      <actions>
        <test_action_ref>configure_opensc_card_drivers_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="configure_opensc_nss_db_ocil">
      <title>Configure NSS DB To Use opensc</title>
      <actions>
        <test_action_ref>configure_opensc_nss_db_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="force_opensc_card_drivers_ocil">
      <title>Force opensc To Use Defined Smart Card Driver</title>
      <actions>
        <test_action_ref>force_opensc_card_drivers_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="smartcard_auth_ocil">
      <title>Enable Smart Card Login</title>
      <actions>
        <test_action_ref>smartcard_auth_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="smartcard_configure_cert_checking_ocil">
      <title>Configure Smart Card Certificate Status Checking</title>
      <actions>
        <test_action_ref>smartcard_configure_cert_checking_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="account_unique_id_ocil">
      <title>Ensure All Accounts on the System Have Unique User IDs</title>
      <actions>
        <test_action_ref>account_unique_id_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_authorized_local_users_ocil">
      <title>Only Authorized Local User Accounts Exist on Operating System</title>
      <actions>
        <test_action_ref>accounts_authorized_local_users_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="account_disable_post_pw_expiration_ocil">
      <title>Set Account Expiration Following Inactivity</title>
      <actions>
        <test_action_ref>account_disable_post_pw_expiration_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="account_unique_name_ocil">
      <title>Ensure All Accounts on the System Have Unique Names</title>
      <actions>
        <test_action_ref>account_unique_name_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="account_use_centralized_automated_auth_ocil">
      <title>Use Centralized and Automated Authentication</title>
      <actions>
        <test_action_ref>account_use_centralized_automated_auth_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_maximum_age_login_defs_ocil">
      <title>Set Password Maximum Age</title>
      <actions>
        <test_action_ref>accounts_maximum_age_login_defs_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_minimum_age_login_defs_ocil">
      <title>Set Password Minimum Age</title>
      <actions>
        <test_action_ref>accounts_minimum_age_login_defs_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_password_minlen_login_defs_ocil">
      <title>Set Password Minimum Length in login.defs</title>
      <actions>
        <test_action_ref>accounts_password_minlen_login_defs_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_password_set_max_life_existing_ocil">
      <title>Set Existing Passwords Maximum Age</title>
      <actions>
        <test_action_ref>accounts_password_set_max_life_existing_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_password_set_min_life_existing_ocil">
      <title>Set Existing Passwords Minimum Age</title>
      <actions>
        <test_action_ref>accounts_password_set_min_life_existing_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_password_warn_age_login_defs_ocil">
      <title>Set Password Warning Age</title>
      <actions>
        <test_action_ref>accounts_password_warn_age_login_defs_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_password_all_shadowed_ocil">
      <title>Verify All Account Password Hashes are Shadowed</title>
      <actions>
        <test_action_ref>accounts_password_all_shadowed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_password_pam_unix_rounds_password_auth_ocil">
      <title>Set number of Password Hashing Rounds - password-auth</title>
      <actions>
        <test_action_ref>accounts_password_pam_unix_rounds_password_auth_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_password_pam_unix_rounds_system_auth_ocil">
      <title>Set number of Password Hashing Rounds - system-auth</title>
      <actions>
        <test_action_ref>accounts_password_pam_unix_rounds_system_auth_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="gid_passwd_group_same_ocil">
      <title>All GIDs referenced in /etc/passwd must be defined in /etc/group</title>
      <actions>
        <test_action_ref>gid_passwd_group_same_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="no_empty_passwords_ocil">
      <title>Prevent Login to Accounts With Empty Password</title>
      <actions>
        <test_action_ref>no_empty_passwords_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="no_legacy_plus_entries_etc_group_ocil">
      <title>Ensure there are no legacy + NIS entries in /etc/group</title>
      <actions>
        <test_action_ref>no_legacy_plus_entries_etc_group_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="no_legacy_plus_entries_etc_passwd_ocil">
      <title>Ensure there are no legacy + NIS entries in /etc/passwd</title>
      <actions>
        <test_action_ref>no_legacy_plus_entries_etc_passwd_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="no_legacy_plus_entries_etc_shadow_ocil">
      <title>Ensure there are no legacy + NIS entries in /etc/shadow</title>
      <actions>
        <test_action_ref>no_legacy_plus_entries_etc_shadow_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="no_netrc_files_ocil">
      <title>Verify No netrc Files Exist</title>
      <actions>
        <test_action_ref>no_netrc_files_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_no_uid_except_zero_ocil">
      <title>Verify Only Root Has UID 0</title>
      <actions>
        <test_action_ref>accounts_no_uid_except_zero_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="no_direct_root_logins_ocil">
      <title>Direct root Logins Not Allowed</title>
      <actions>
        <test_action_ref>no_direct_root_logins_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="no_password_auth_for_systemaccounts_ocil">
      <title>Ensure that System Accounts Are Locked</title>
      <actions>
        <test_action_ref>no_password_auth_for_systemaccounts_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="no_root_webbrowsing_ocil">
      <title>Restrict Web Browser Use for Administrative Accounts</title>
      <actions>
        <test_action_ref>no_root_webbrowsing_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="no_shelllogin_for_systemaccounts_ocil">
      <title>Ensure that System Accounts Do Not Run a Shell Upon Login</title>
      <actions>
        <test_action_ref>no_shelllogin_for_systemaccounts_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="restrict_serial_port_logins_ocil">
      <title>Restrict Serial Port Root Logins</title>
      <actions>
        <test_action_ref>restrict_serial_port_logins_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="root_path_default_ocil">
      <title>Root Path Must Be Vendor Default</title>
      <actions>
        <test_action_ref>root_path_default_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="securetty_root_login_console_only_ocil">
      <title>Restrict Virtual Console Root Logins</title>
      <actions>
        <test_action_ref>securetty_root_login_console_only_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="use_pam_wheel_for_su_ocil">
      <title>Enforce usage of pam_wheel for su authentication</title>
      <actions>
        <test_action_ref>use_pam_wheel_for_su_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_have_homedir_login_defs_ocil">
      <title>Ensure Home Directories are Created for New Users</title>
      <actions>
        <test_action_ref>accounts_have_homedir_login_defs_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_logon_fail_delay_ocil">
      <title>Ensure the Logon Failure Delay is Set Correctly in login.defs</title>
      <actions>
        <test_action_ref>accounts_logon_fail_delay_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_max_concurrent_login_sessions_ocil">
      <title>Limit the Number of Concurrent Login Sessions Allowed Per User</title>
      <actions>
        <test_action_ref>accounts_max_concurrent_login_sessions_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_polyinstantiated_tmp_ocil">
      <title>Configure Polyinstantiation of /tmp Directories</title>
      <actions>
        <test_action_ref>accounts_polyinstantiated_tmp_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_polyinstantiated_var_tmp_ocil">
      <title>Configure Polyinstantiation of /var/tmp Directories</title>
      <actions>
        <test_action_ref>accounts_polyinstantiated_var_tmp_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_tmout_ocil">
      <title>Set Interactive Session Timeout</title>
      <actions>
        <test_action_ref>accounts_tmout_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_user_dot_group_ownership_ocil">
      <title>User Initialization Files Must Be Group-Owned By The Primary User</title>
      <actions>
        <test_action_ref>accounts_user_dot_group_ownership_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_user_dot_no_world_writable_programs_ocil">
      <title>User Initialization Files Must Not Run World-Writable Programs</title>
      <actions>
        <test_action_ref>accounts_user_dot_no_world_writable_programs_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_user_dot_user_ownership_ocil">
      <title>User Initialization Files Must Be Owned By the Primary User</title>
      <actions>
        <test_action_ref>accounts_user_dot_user_ownership_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_user_home_paths_only_ocil">
      <title>Ensure that Users Path Contains Only Local Directories</title>
      <actions>
        <test_action_ref>accounts_user_home_paths_only_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_user_interactive_home_directory_defined_ocil">
      <title>All Interactive Users Must Have A Home Directory Defined</title>
      <actions>
        <test_action_ref>accounts_user_interactive_home_directory_defined_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_user_interactive_home_directory_exists_ocil">
      <title>All Interactive Users Home Directories Must Exist</title>
      <actions>
        <test_action_ref>accounts_user_interactive_home_directory_exists_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_users_home_files_groupownership_ocil">
      <title>All User Files and Directories In The Home Directory Must Be Group-Owned By The Primary User</title>
      <actions>
        <test_action_ref>accounts_users_home_files_groupownership_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_users_home_files_ownership_ocil">
      <title>All User Files and Directories In The Home Directory Must Have a Valid Owner</title>
      <actions>
        <test_action_ref>accounts_users_home_files_ownership_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_users_home_files_permissions_ocil">
      <title>All User Files and Directories In The Home Directory Must Have Mode 0750 Or Less Permissive</title>
      <actions>
        <test_action_ref>accounts_users_home_files_permissions_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_groupownership_home_directories_ocil">
      <title>All Interactive User Home Directories Must Be Group-Owned By The Primary User</title>
      <actions>
        <test_action_ref>file_groupownership_home_directories_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_ownership_home_directories_ocil">
      <title>All Interactive User Home Directories Must Be Owned By The Primary User</title>
      <actions>
        <test_action_ref>file_ownership_home_directories_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_permission_user_init_files_ocil">
      <title>Ensure All User Initialization Files Have Mode 0740 Or Less Permissive</title>
      <actions>
        <test_action_ref>file_permission_user_init_files_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_permissions_home_directories_ocil">
      <title>All Interactive User Home Directories Must Have mode 0750 Or Less Permissive</title>
      <actions>
        <test_action_ref>file_permissions_home_directories_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_permissions_home_dirs_ocil">
      <title>Ensure that User Home Directories are not Group-Writable or World-Readable</title>
      <actions>
        <test_action_ref>file_permissions_home_dirs_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_root_path_dirs_no_write_ocil">
      <title>Ensure that Root's Path Does Not Include World or Group-Writable Directories</title>
      <actions>
        <test_action_ref>accounts_root_path_dirs_no_write_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_umask_etc_bashrc_ocil">
      <title>Ensure the Default Bash Umask is Set Correctly</title>
      <actions>
        <test_action_ref>accounts_umask_etc_bashrc_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_umask_etc_csh_cshrc_ocil">
      <title>Ensure the Default C Shell Umask is Set Correctly</title>
      <actions>
        <test_action_ref>accounts_umask_etc_csh_cshrc_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_umask_etc_login_defs_ocil">
      <title>Ensure the Default Umask is Set Correctly in login.defs</title>
      <actions>
        <test_action_ref>accounts_umask_etc_login_defs_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_umask_etc_profile_ocil">
      <title>Ensure the Default Umask is Set Correctly in /etc/profile</title>
      <actions>
        <test_action_ref>accounts_umask_etc_profile_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="accounts_umask_interactive_users_ocil">
      <title>Ensure the Default Umask is Set Correctly For Interactive Users</title>
      <actions>
        <test_action_ref>accounts_umask_interactive_users_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_audispd-plugins_installed_ocil">
      <title>Install audispd-plugins Package</title>
      <actions>
        <test_action_ref>package_audispd-plugins_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_audit-audispd-plugins_installed_ocil">
      <title>Ensure the default plugins for the audit dispatcher are Installed</title>
      <actions>
        <test_action_ref>package_audit-audispd-plugins_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_audit_installed_ocil">
      <title>Ensure the audit Subsystem is Installed</title>
      <actions>
        <test_action_ref>package_audit_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_auditd_enabled_ocil">
      <title>Enable auditd Service</title>
      <actions>
        <test_action_ref>service_auditd_enabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="grub2_audit_argument_ocil">
      <title>Enable Auditing for Processes Which Start Prior to the Audit Daemon</title>
      <actions>
        <test_action_ref>grub2_audit_argument_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="grub2_audit_backlog_limit_argument_ocil">
      <title>Extend Audit Backlog Limit for the Audit Daemon</title>
      <actions>
        <test_action_ref>grub2_audit_backlog_limit_argument_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_etc_group_open_ocil">
      <title>Record Events that Modify User/Group Information via open syscall - /etc/group</title>
      <actions>
        <test_action_ref>audit_rules_etc_group_open_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_etc_group_open_by_handle_at_ocil">
      <title>Record Events that Modify User/Group Information via open_by_handle_at syscall - /etc/group</title>
      <actions>
        <test_action_ref>audit_rules_etc_group_open_by_handle_at_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_etc_group_openat_ocil">
      <title>Record Events that Modify User/Group Information via openat syscall - /etc/group</title>
      <actions>
        <test_action_ref>audit_rules_etc_group_openat_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_etc_gshadow_open_ocil">
      <title>Record Events that Modify User/Group Information via open syscall - /etc/gshadow</title>
      <actions>
        <test_action_ref>audit_rules_etc_gshadow_open_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_etc_gshadow_open_by_handle_at_ocil">
      <title>Record Events that Modify User/Group Information via open_by_handle_at syscall - /etc/gshadow</title>
      <actions>
        <test_action_ref>audit_rules_etc_gshadow_open_by_handle_at_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_etc_gshadow_openat_ocil">
      <title>Record Events that Modify User/Group Information via openat syscall - /etc/gshadow</title>
      <actions>
        <test_action_ref>audit_rules_etc_gshadow_openat_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_etc_passwd_open_ocil">
      <title>Record Events that Modify User/Group Information via open syscall - /etc/passwd</title>
      <actions>
        <test_action_ref>audit_rules_etc_passwd_open_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_etc_passwd_open_by_handle_at_ocil">
      <title>Record Events that Modify User/Group Information via open_by_handle_at syscall - /etc/passwd</title>
      <actions>
        <test_action_ref>audit_rules_etc_passwd_open_by_handle_at_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_etc_passwd_openat_ocil">
      <title>Record Events that Modify User/Group Information via openat syscall - /etc/passwd</title>
      <actions>
        <test_action_ref>audit_rules_etc_passwd_openat_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_etc_shadow_open_ocil">
      <title>Record Events that Modify User/Group Information via open syscall - /etc/shadow</title>
      <actions>
        <test_action_ref>audit_rules_etc_shadow_open_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_etc_shadow_open_by_handle_at_ocil">
      <title>Record Events that Modify User/Group Information via open_by_handle_at syscall - /etc/shadow</title>
      <actions>
        <test_action_ref>audit_rules_etc_shadow_open_by_handle_at_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_etc_shadow_openat_ocil">
      <title>Record Events that Modify User/Group Information via openat syscall - /etc/shadow</title>
      <actions>
        <test_action_ref>audit_rules_etc_shadow_openat_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_mac_modification_ocil">
      <title>Record Events that Modify the System's Mandatory Access Controls</title>
      <actions>
        <test_action_ref>audit_rules_mac_modification_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_media_export_ocil">
      <title>Ensure auditd Collects Information on Exporting to Media (successful)</title>
      <actions>
        <test_action_ref>audit_rules_media_export_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_networkconfig_modification_ocil">
      <title>Record Events that Modify the System's Network Environment</title>
      <actions>
        <test_action_ref>audit_rules_networkconfig_modification_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_sysadmin_actions_ocil">
      <title>Ensure auditd Collects System Administrator Actions</title>
      <actions>
        <test_action_ref>audit_rules_sysadmin_actions_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_system_shutdown_ocil">
      <title>Shutdown System When Auditing Failures Occur</title>
      <actions>
        <test_action_ref>audit_rules_system_shutdown_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_usergroup_modification_ocil">
      <title>Record Events that Modify User/Group Information</title>
      <actions>
        <test_action_ref>audit_rules_usergroup_modification_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_usergroup_modification_group_ocil">
      <title>Record Events that Modify User/Group Information - /etc/group</title>
      <actions>
        <test_action_ref>audit_rules_usergroup_modification_group_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_usergroup_modification_gshadow_ocil">
      <title>Record Events that Modify User/Group Information - /etc/gshadow</title>
      <actions>
        <test_action_ref>audit_rules_usergroup_modification_gshadow_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_usergroup_modification_opasswd_ocil">
      <title>Record Events that Modify User/Group Information - /etc/security/opasswd</title>
      <actions>
        <test_action_ref>audit_rules_usergroup_modification_opasswd_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_usergroup_modification_passwd_ocil">
      <title>Record Events that Modify User/Group Information - /etc/passwd</title>
      <actions>
        <test_action_ref>audit_rules_usergroup_modification_passwd_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_usergroup_modification_shadow_ocil">
      <title>Record Events that Modify User/Group Information - /etc/shadow</title>
      <actions>
        <test_action_ref>audit_rules_usergroup_modification_shadow_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="directory_access_var_log_audit_ocil">
      <title>Record Access Events to Audit Log Directory</title>
      <actions>
        <test_action_ref>directory_access_var_log_audit_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="directory_permissions_var_log_audit_ocil">
      <title>System Audit Logs Must Have Mode 0750 or Less Permissive</title>
      <actions>
        <test_action_ref>directory_permissions_var_log_audit_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_ownership_var_log_audit_ocil">
      <title>System Audit Logs Must Be Owned By Root</title>
      <actions>
        <test_action_ref>file_ownership_var_log_audit_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_permissions_var_log_audit_ocil">
      <title>System Audit Logs Must Have Mode 0640 or Less Permissive</title>
      <actions>
        <test_action_ref>file_permissions_var_log_audit_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_dac_modification_chmod_ocil">
      <title>Record Events that Modify the System's Discretionary Access Controls - chmod</title>
      <actions>
        <test_action_ref>audit_rules_dac_modification_chmod_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_dac_modification_chown_ocil">
      <title>Record Events that Modify the System's Discretionary Access Controls - chown</title>
      <actions>
        <test_action_ref>audit_rules_dac_modification_chown_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_dac_modification_fchmod_ocil">
      <title>Record Events that Modify the System's Discretionary Access Controls - fchmod</title>
      <actions>
        <test_action_ref>audit_rules_dac_modification_fchmod_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_dac_modification_fchmodat_ocil">
      <title>Record Events that Modify the System's Discretionary Access Controls - fchmodat</title>
      <actions>
        <test_action_ref>audit_rules_dac_modification_fchmodat_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_dac_modification_fchown_ocil">
      <title>Record Events that Modify the System's Discretionary Access Controls - fchown</title>
      <actions>
        <test_action_ref>audit_rules_dac_modification_fchown_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_dac_modification_fchownat_ocil">
      <title>Record Events that Modify the System's Discretionary Access Controls - fchownat</title>
      <actions>
        <test_action_ref>audit_rules_dac_modification_fchownat_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_dac_modification_fremovexattr_ocil">
      <title>Record Events that Modify the System's Discretionary Access Controls - fremovexattr</title>
      <actions>
        <test_action_ref>audit_rules_dac_modification_fremovexattr_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_dac_modification_fsetxattr_ocil">
      <title>Record Events that Modify the System's Discretionary Access Controls - fsetxattr</title>
      <actions>
        <test_action_ref>audit_rules_dac_modification_fsetxattr_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_dac_modification_lchown_ocil">
      <title>Record Events that Modify the System's Discretionary Access Controls - lchown</title>
      <actions>
        <test_action_ref>audit_rules_dac_modification_lchown_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_dac_modification_lremovexattr_ocil">
      <title>Record Events that Modify the System's Discretionary Access Controls - lremovexattr</title>
      <actions>
        <test_action_ref>audit_rules_dac_modification_lremovexattr_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_dac_modification_lsetxattr_ocil">
      <title>Record Events that Modify the System's Discretionary Access Controls - lsetxattr</title>
      <actions>
        <test_action_ref>audit_rules_dac_modification_lsetxattr_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_dac_modification_removexattr_ocil">
      <title>Record Events that Modify the System's Discretionary Access Controls - removexattr</title>
      <actions>
        <test_action_ref>audit_rules_dac_modification_removexattr_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_dac_modification_setxattr_ocil">
      <title>Record Events that Modify the System's Discretionary Access Controls - setxattr</title>
      <actions>
        <test_action_ref>audit_rules_dac_modification_setxattr_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_dac_modification_umount_ocil">
      <title>Record Events that Modify the System's Discretionary Access Controls - umount</title>
      <actions>
        <test_action_ref>audit_rules_dac_modification_umount_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_dac_modification_umount2_ocil">
      <title>Record Events that Modify the System's Discretionary Access Controls - umount2</title>
      <actions>
        <test_action_ref>audit_rules_dac_modification_umount2_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_execution_chcon_ocil">
      <title>Record Any Attempts to Run chcon</title>
      <actions>
        <test_action_ref>audit_rules_execution_chcon_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_execution_restorecon_ocil">
      <title>Record Any Attempts to Run restorecon</title>
      <actions>
        <test_action_ref>audit_rules_execution_restorecon_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_execution_semanage_ocil">
      <title>Record Any Attempts to Run semanage</title>
      <actions>
        <test_action_ref>audit_rules_execution_semanage_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_execution_setfiles_ocil">
      <title>Record Any Attempts to Run setfiles</title>
      <actions>
        <test_action_ref>audit_rules_execution_setfiles_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_execution_setsebool_ocil">
      <title>Record Any Attempts to Run setsebool</title>
      <actions>
        <test_action_ref>audit_rules_execution_setsebool_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_execution_seunshare_ocil">
      <title>Record Any Attempts to Run seunshare</title>
      <actions>
        <test_action_ref>audit_rules_execution_seunshare_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_file_deletion_events_ocil">
      <title>Ensure auditd Collects File Deletion Events by User</title>
      <actions>
        <test_action_ref>audit_rules_file_deletion_events_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_file_deletion_events_rename_ocil">
      <title>Ensure auditd Collects File Deletion Events by User - rename</title>
      <actions>
        <test_action_ref>audit_rules_file_deletion_events_rename_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_file_deletion_events_renameat_ocil">
      <title>Ensure auditd Collects File Deletion Events by User - renameat</title>
      <actions>
        <test_action_ref>audit_rules_file_deletion_events_renameat_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_file_deletion_events_rmdir_ocil">
      <title>Ensure auditd Collects File Deletion Events by User - rmdir</title>
      <actions>
        <test_action_ref>audit_rules_file_deletion_events_rmdir_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_file_deletion_events_unlink_ocil">
      <title>Ensure auditd Collects File Deletion Events by User - unlink</title>
      <actions>
        <test_action_ref>audit_rules_file_deletion_events_unlink_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_file_deletion_events_unlinkat_ocil">
      <title>Ensure auditd Collects File Deletion Events by User - unlinkat</title>
      <actions>
        <test_action_ref>audit_rules_file_deletion_events_unlinkat_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_successful_file_modification_chmod_ocil">
      <title>Record Successful Permission Changes to Files - chmod</title>
      <actions>
        <test_action_ref>audit_rules_successful_file_modification_chmod_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_successful_file_modification_chown_ocil">
      <title>Record Successful Ownership Changes to Files - chown</title>
      <actions>
        <test_action_ref>audit_rules_successful_file_modification_chown_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_successful_file_modification_creat_ocil">
      <title>Record Successful Access Attempts to Files - creat</title>
      <actions>
        <test_action_ref>audit_rules_successful_file_modification_creat_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_successful_file_modification_fchmod_ocil">
      <title>Record Successful Permission Changes to Files - fchmod</title>
      <actions>
        <test_action_ref>audit_rules_successful_file_modification_fchmod_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_successful_file_modification_fchmodat_ocil">
      <title>Record Successful Permission Changes to Files - fchmodat</title>
      <actions>
        <test_action_ref>audit_rules_successful_file_modification_fchmodat_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_successful_file_modification_fchown_ocil">
      <title>Record Successful Ownership Changes to Files - fchown</title>
      <actions>
        <test_action_ref>audit_rules_successful_file_modification_fchown_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_successful_file_modification_fchownat_ocil">
      <title>Record Successful Ownership Changes to Files - fchownat</title>
      <actions>
        <test_action_ref>audit_rules_successful_file_modification_fchownat_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_successful_file_modification_fremovexattr_ocil">
      <title>Record Successful Permission Changes to Files - fremovexattr</title>
      <actions>
        <test_action_ref>audit_rules_successful_file_modification_fremovexattr_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_successful_file_modification_fsetxattr_ocil">
      <title>Record Successful Permission Changes to Files - fsetxattr</title>
      <actions>
        <test_action_ref>audit_rules_successful_file_modification_fsetxattr_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_successful_file_modification_ftruncate_ocil">
      <title>Record Successful Access Attempts to Files - ftruncate</title>
      <actions>
        <test_action_ref>audit_rules_successful_file_modification_ftruncate_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_successful_file_modification_lchown_ocil">
      <title>Record Successful Ownership Changes to Files - lchown</title>
      <actions>
        <test_action_ref>audit_rules_successful_file_modification_lchown_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_successful_file_modification_lremovexattr_ocil">
      <title>Record Successful Permission Changes to Files - lremovexattr</title>
      <actions>
        <test_action_ref>audit_rules_successful_file_modification_lremovexattr_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_successful_file_modification_lsetxattr_ocil">
      <title>Record Successful Permission Changes to Files - lsetxattr</title>
      <actions>
        <test_action_ref>audit_rules_successful_file_modification_lsetxattr_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_successful_file_modification_open_ocil">
      <title>Record Successful Access Attempts to Files - open</title>
      <actions>
        <test_action_ref>audit_rules_successful_file_modification_open_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_successful_file_modification_open_by_handle_at_ocil">
      <title>Record Successful Access Attempts to Files - open_by_handle_at</title>
      <actions>
        <test_action_ref>audit_rules_successful_file_modification_open_by_handle_at_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_successful_file_modification_open_by_handle_at_o_creat_ocil">
      <title>Record Successful Creation Attempts to Files - open_by_handle_at O_CREAT</title>
      <actions>
        <test_action_ref>audit_rules_successful_file_modification_open_by_handle_at_o_creat_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_successful_file_modification_open_by_handle_at_o_trunc_write_ocil">
      <title>Record Successful Creation Attempts to Files - open_by_handle_at O_TRUNC_WRITE</title>
      <actions>
        <test_action_ref>audit_rules_successful_file_modification_open_by_handle_at_o_trunc_write_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_successful_file_modification_open_o_creat_ocil">
      <title>Record Successful Creation Attempts to Files - open O_CREAT</title>
      <actions>
        <test_action_ref>audit_rules_successful_file_modification_open_o_creat_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_successful_file_modification_open_o_trunc_write_ocil">
      <title>Record Successful Creation Attempts to Files - open O_TRUNC_WRITE</title>
      <actions>
        <test_action_ref>audit_rules_successful_file_modification_open_o_trunc_write_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_successful_file_modification_openat_ocil">
      <title>Record Successful Access Attempts to Files - openat</title>
      <actions>
        <test_action_ref>audit_rules_successful_file_modification_openat_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_successful_file_modification_openat_o_creat_ocil">
      <title>Record Successful Creation Attempts to Files - openat O_CREAT</title>
      <actions>
        <test_action_ref>audit_rules_successful_file_modification_openat_o_creat_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_successful_file_modification_openat_o_trunc_write_ocil">
      <title>Record Successful Creation Attempts to Files - openat O_TRUNC_WRITE</title>
      <actions>
        <test_action_ref>audit_rules_successful_file_modification_openat_o_trunc_write_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_successful_file_modification_removexattr_ocil">
      <title>Record Successful Permission Changes to Files - removexattr</title>
      <actions>
        <test_action_ref>audit_rules_successful_file_modification_removexattr_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_successful_file_modification_rename_ocil">
      <title>Record Successful Delete Attempts to Files - rename</title>
      <actions>
        <test_action_ref>audit_rules_successful_file_modification_rename_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_successful_file_modification_renameat_ocil">
      <title>Record Successful Delete Attempts to Files - renameat</title>
      <actions>
        <test_action_ref>audit_rules_successful_file_modification_renameat_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_successful_file_modification_setxattr_ocil">
      <title>Record Successful Permission Changes to Files - setxattr</title>
      <actions>
        <test_action_ref>audit_rules_successful_file_modification_setxattr_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_successful_file_modification_truncate_ocil">
      <title>Record Successful Access Attempts to Files - truncate</title>
      <actions>
        <test_action_ref>audit_rules_successful_file_modification_truncate_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_successful_file_modification_unlink_ocil">
      <title>Record Successful Delete Attempts to Files - unlink</title>
      <actions>
        <test_action_ref>audit_rules_successful_file_modification_unlink_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_successful_file_modification_unlinkat_ocil">
      <title>Record Successful Delete Attempts to Files - unlinkat</title>
      <actions>
        <test_action_ref>audit_rules_successful_file_modification_unlinkat_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_ocil">
      <title>Ensure auditd Collects Unauthorized Access Attempts to Files (unsuccessful)</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_chmod_ocil">
      <title>Record Unsuccessul Permission Changes to Files - chmod</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_chmod_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_chown_ocil">
      <title>Record Unsuccessul Ownership Changes to Files - chown</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_chown_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_creat_ocil">
      <title>Record Unsuccessful Access Attempts to Files - creat</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_creat_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_fchmod_ocil">
      <title>Record Unsuccessul Permission Changes to Files - fchmod</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_fchmod_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_fchmodat_ocil">
      <title>Record Unsuccessul Permission Changes to Files - fchmodat</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_fchmodat_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_fchown_ocil">
      <title>Record Unsuccessul Ownership Changes to Files - fchown</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_fchown_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_fchownat_ocil">
      <title>Record Unsuccessul Ownership Changes to Files - fchownat</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_fchownat_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_fremovexattr_ocil">
      <title>Record Unsuccessul Permission Changes to Files - fremovexattr</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_fremovexattr_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_fsetxattr_ocil">
      <title>Record Unsuccessul Permission Changes to Files - fsetxattr</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_fsetxattr_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_ftruncate_ocil">
      <title>Record Unsuccessful Access Attempts to Files - ftruncate</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_ftruncate_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_lchown_ocil">
      <title>Record Unsuccessul Ownership Changes to Files - lchown</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_lchown_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_lremovexattr_ocil">
      <title>Record Unsuccessul Permission Changes to Files - lremovexattr</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_lremovexattr_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_lsetxattr_ocil">
      <title>Record Unsuccessul Permission Changes to Files - lsetxattr</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_lsetxattr_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_open_ocil">
      <title>Record Unsuccessful Access Attempts to Files - open</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_open_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_open_by_handle_at_ocil">
      <title>Record Unsuccessful Access Attempts to Files - open_by_handle_at</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_open_by_handle_at_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_open_by_handle_at_o_creat_ocil">
      <title>Record Unsuccessful Creation Attempts to Files - open_by_handle_at O_CREAT</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_open_by_handle_at_o_creat_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_open_by_handle_at_o_trunc_write_ocil">
      <title>Record Unsuccessful Modification Attempts to Files - open_by_handle_at O_TRUNC_WRITE</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_open_by_handle_at_o_trunc_write_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_open_by_handle_at_rule_order_ocil">
      <title>Ensure auditd Unauthorized Access Attempts To open_by_handle_at Are Ordered Correctly</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_open_by_handle_at_rule_order_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_open_o_creat_ocil">
      <title>Record Unsuccessful Creation Attempts to Files - open O_CREAT</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_open_o_creat_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_open_o_trunc_write_ocil">
      <title>Record Unsuccessful Modification Attempts to Files - open O_TRUNC_WRITE</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_open_o_trunc_write_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_open_rule_order_ocil">
      <title>Ensure auditd Rules For Unauthorized Attempts To open Are Ordered Correctly</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_open_rule_order_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_openat_ocil">
      <title>Record Unsuccessful Access Attempts to Files - openat</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_openat_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_openat_o_creat_ocil">
      <title>Record Unsuccessful Creation Attempts to Files - openat O_CREAT</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_openat_o_creat_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_openat_o_trunc_write_ocil">
      <title>Record Unsuccessful Modification Attempts to Files - openat O_TRUNC_WRITE</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_openat_o_trunc_write_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_openat_rule_order_ocil">
      <title>Ensure auditd Rules For Unauthorized Attempts To openat Are Ordered Correctly</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_openat_rule_order_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_removexattr_ocil">
      <title>Record Unsuccessul Permission Changes to Files - removexattr</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_removexattr_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_rename_ocil">
      <title>Record Unsuccessul Delete Attempts to Files - rename</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_rename_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_renameat_ocil">
      <title>Record Unsuccessul Delete Attempts to Files - renameat</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_renameat_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_setxattr_ocil">
      <title>Record Unsuccessul Permission Changes to Files - setxattr</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_setxattr_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_truncate_ocil">
      <title>Record Unsuccessful Access Attempts to Files - truncate</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_truncate_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_unlink_ocil">
      <title>Record Unsuccessul Delete Attempts to Files - unlink</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_unlink_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_unsuccessful_file_modification_unlinkat_ocil">
      <title>Record Unsuccessul Delete Attempts to Files - unlinkat</title>
      <actions>
        <test_action_ref>audit_rules_unsuccessful_file_modification_unlinkat_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_kernel_module_loading_ocil">
      <title>Ensure auditd Collects Information on Kernel Module Loading and Unloading</title>
      <actions>
        <test_action_ref>audit_rules_kernel_module_loading_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_kernel_module_loading_delete_ocil">
      <title>Ensure auditd Collects Information on Kernel Module Unloading - delete_module</title>
      <actions>
        <test_action_ref>audit_rules_kernel_module_loading_delete_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_kernel_module_loading_finit_ocil">
      <title>Ensure auditd Collects Information on Kernel Module Loading and Unloading - finit_module</title>
      <actions>
        <test_action_ref>audit_rules_kernel_module_loading_finit_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_kernel_module_loading_init_ocil">
      <title>Ensure auditd Collects Information on Kernel Module Loading - init_module</title>
      <actions>
        <test_action_ref>audit_rules_kernel_module_loading_init_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_login_events_faillock_ocil">
      <title>Record Attempts to Alter Logon and Logout Events - faillock</title>
      <actions>
        <test_action_ref>audit_rules_login_events_faillock_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_login_events_lastlog_ocil">
      <title>Record Attempts to Alter Logon and Logout Events - lastlog</title>
      <actions>
        <test_action_ref>audit_rules_login_events_lastlog_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_login_events_tallylog_ocil">
      <title>Record Attempts to Alter Logon and Logout Events - tallylog</title>
      <actions>
        <test_action_ref>audit_rules_login_events_tallylog_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_privileged_commands_ocil">
      <title>Ensure auditd Collects Information on the Use of Privileged Commands</title>
      <actions>
        <test_action_ref>audit_rules_privileged_commands_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_privileged_commands_at_ocil">
      <title>Ensure auditd Collects Information on the Use of Privileged Commands - at</title>
      <actions>
        <test_action_ref>audit_rules_privileged_commands_at_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_privileged_commands_chage_ocil">
      <title>Ensure auditd Collects Information on the Use of Privileged Commands - chage</title>
      <actions>
        <test_action_ref>audit_rules_privileged_commands_chage_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_privileged_commands_chsh_ocil">
      <title>Ensure auditd Collects Information on the Use of Privileged Commands - chsh</title>
      <actions>
        <test_action_ref>audit_rules_privileged_commands_chsh_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_privileged_commands_crontab_ocil">
      <title>Ensure auditd Collects Information on the Use of Privileged Commands - crontab</title>
      <actions>
        <test_action_ref>audit_rules_privileged_commands_crontab_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_privileged_commands_gpasswd_ocil">
      <title>Ensure auditd Collects Information on the Use of Privileged Commands - gpasswd</title>
      <actions>
        <test_action_ref>audit_rules_privileged_commands_gpasswd_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_privileged_commands_mount_ocil">
      <title>Ensure auditd Collects Information on the Use of Privileged Commands - mount</title>
      <actions>
        <test_action_ref>audit_rules_privileged_commands_mount_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_privileged_commands_newgidmap_ocil">
      <title>Ensure auditd Collects Information on the Use of Privileged Commands - newgidmap</title>
      <actions>
        <test_action_ref>audit_rules_privileged_commands_newgidmap_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_privileged_commands_newgrp_ocil">
      <title>Ensure auditd Collects Information on the Use of Privileged Commands - newgrp</title>
      <actions>
        <test_action_ref>audit_rules_privileged_commands_newgrp_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_privileged_commands_newuidmap_ocil">
      <title>Ensure auditd Collects Information on the Use of Privileged Commands - newuidmap</title>
      <actions>
        <test_action_ref>audit_rules_privileged_commands_newuidmap_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_privileged_commands_pam_timestamp_check_ocil">
      <title>Ensure auditd Collects Information on the Use of Privileged Commands - pam_timestamp_check</title>
      <actions>
        <test_action_ref>audit_rules_privileged_commands_pam_timestamp_check_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_privileged_commands_passwd_ocil">
      <title>Ensure auditd Collects Information on the Use of Privileged Commands - passwd</title>
      <actions>
        <test_action_ref>audit_rules_privileged_commands_passwd_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_privileged_commands_postdrop_ocil">
      <title>Ensure auditd Collects Information on the Use of Privileged Commands - postdrop</title>
      <actions>
        <test_action_ref>audit_rules_privileged_commands_postdrop_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_privileged_commands_postqueue_ocil">
      <title>Ensure auditd Collects Information on the Use of Privileged Commands - postqueue</title>
      <actions>
        <test_action_ref>audit_rules_privileged_commands_postqueue_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_privileged_commands_pt_chown_ocil">
      <title>Ensure auditd Collects Information on the Use of Privileged Commands - pt_chown</title>
      <actions>
        <test_action_ref>audit_rules_privileged_commands_pt_chown_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_privileged_commands_ssh_keysign_ocil">
      <title>Ensure auditd Collects Information on the Use of Privileged Commands - ssh-keysign</title>
      <actions>
        <test_action_ref>audit_rules_privileged_commands_ssh_keysign_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_privileged_commands_su_ocil">
      <title>Ensure auditd Collects Information on the Use of Privileged Commands - su</title>
      <actions>
        <test_action_ref>audit_rules_privileged_commands_su_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_privileged_commands_sudo_ocil">
      <title>Ensure auditd Collects Information on the Use of Privileged Commands - sudo</title>
      <actions>
        <test_action_ref>audit_rules_privileged_commands_sudo_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_privileged_commands_sudoedit_ocil">
      <title>Ensure auditd Collects Information on the Use of Privileged Commands - sudoedit</title>
      <actions>
        <test_action_ref>audit_rules_privileged_commands_sudoedit_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_privileged_commands_umount_ocil">
      <title>Ensure auditd Collects Information on the Use of Privileged Commands - umount</title>
      <actions>
        <test_action_ref>audit_rules_privileged_commands_umount_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_privileged_commands_unix_chkpwd_ocil">
      <title>Ensure auditd Collects Information on the Use of Privileged Commands - unix_chkpwd</title>
      <actions>
        <test_action_ref>audit_rules_privileged_commands_unix_chkpwd_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_privileged_commands_userhelper_ocil">
      <title>Ensure auditd Collects Information on the Use of Privileged Commands - userhelper</title>
      <actions>
        <test_action_ref>audit_rules_privileged_commands_userhelper_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_privileged_commands_usernetctl_ocil">
      <title>Ensure auditd Collects Information on the Use of Privileged Commands - usernetctl</title>
      <actions>
        <test_action_ref>audit_rules_privileged_commands_usernetctl_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_time_adjtimex_ocil">
      <title>Record attempts to alter time through adjtimex</title>
      <actions>
        <test_action_ref>audit_rules_time_adjtimex_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_time_clock_settime_ocil">
      <title>Record Attempts to Alter Time Through clock_settime</title>
      <actions>
        <test_action_ref>audit_rules_time_clock_settime_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_time_settimeofday_ocil">
      <title>Record attempts to alter time through settimeofday</title>
      <actions>
        <test_action_ref>audit_rules_time_settimeofday_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_time_stime_ocil">
      <title>Record Attempts to Alter Time Through stime</title>
      <actions>
        <test_action_ref>audit_rules_time_stime_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_time_watch_localtime_ocil">
      <title>Record Attempts to Alter the localtime File</title>
      <actions>
        <test_action_ref>audit_rules_time_watch_localtime_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="auditd_audispd_configure_remote_server_ocil">
      <title>Configure audispd Plugin To Send Logs To Remote Server</title>
      <actions>
        <test_action_ref>auditd_audispd_configure_remote_server_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="auditd_audispd_disk_full_action_ocil">
      <title>Configure audispd's Plugin disk_full_action When Disk Is Full</title>
      <actions>
        <test_action_ref>auditd_audispd_disk_full_action_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="auditd_audispd_encrypt_sent_records_ocil">
      <title>Encrypt Audit Records Sent With audispd Plugin</title>
      <actions>
        <test_action_ref>auditd_audispd_encrypt_sent_records_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="auditd_audispd_network_failure_action_ocil">
      <title>Configure audispd's Plugin network_failure_action On Network Failure</title>
      <actions>
        <test_action_ref>auditd_audispd_network_failure_action_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="auditd_audispd_syslog_plugin_activated_ocil">
      <title>Configure auditd to use audispd's syslog plugin</title>
      <actions>
        <test_action_ref>auditd_audispd_syslog_plugin_activated_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="auditd_data_disk_error_action_ocil">
      <title>Configure auditd Disk Error Action on Disk Error</title>
      <actions>
        <test_action_ref>auditd_data_disk_error_action_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="auditd_data_disk_full_action_ocil">
      <title>Configure auditd Disk Full Action when Disk Space Is Full</title>
      <actions>
        <test_action_ref>auditd_data_disk_full_action_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="auditd_data_retention_action_mail_acct_ocil">
      <title>Configure auditd mail_acct Action on Low Disk Space</title>
      <actions>
        <test_action_ref>auditd_data_retention_action_mail_acct_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="auditd_data_retention_admin_space_left_action_ocil">
      <title>Configure auditd admin_space_left Action on Low Disk Space</title>
      <actions>
        <test_action_ref>auditd_data_retention_admin_space_left_action_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="auditd_data_retention_flush_ocil">
      <title>Configure auditd flush priority</title>
      <actions>
        <test_action_ref>auditd_data_retention_flush_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="auditd_data_retention_max_log_file_ocil">
      <title>Configure auditd Max Log File Size</title>
      <actions>
        <test_action_ref>auditd_data_retention_max_log_file_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="auditd_data_retention_max_log_file_action_ocil">
      <title>Configure auditd max_log_file_action Upon Reaching Maximum Log Size</title>
      <actions>
        <test_action_ref>auditd_data_retention_max_log_file_action_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="auditd_data_retention_num_logs_ocil">
      <title>Configure auditd Number of Logs Retained</title>
      <actions>
        <test_action_ref>auditd_data_retention_num_logs_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="auditd_data_retention_space_left_ocil">
      <title>Configure auditd space_left on Low Disk Space</title>
      <actions>
        <test_action_ref>auditd_data_retention_space_left_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="auditd_data_retention_space_left_action_ocil">
      <title>Configure auditd space_left Action on Low Disk Space</title>
      <actions>
        <test_action_ref>auditd_data_retention_space_left_action_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="auditd_freq_ocil">
      <title>Set number of records to cause an explicit flush to audit logs</title>
      <actions>
        <test_action_ref>auditd_freq_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="auditd_local_events_ocil">
      <title>Include Local Events in Audit Logs</title>
      <actions>
        <test_action_ref>auditd_local_events_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="auditd_log_format_ocil">
      <title>Resolve information before writing to audit logs</title>
      <actions>
        <test_action_ref>auditd_log_format_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="auditd_name_format_ocil">
      <title>Set hostname as computer node name in audit logs</title>
      <actions>
        <test_action_ref>auditd_name_format_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="auditd_overflow_action_ocil">
      <title>Appropriate Action Must be Setup When the Internal Audit Event Queue is Full</title>
      <actions>
        <test_action_ref>auditd_overflow_action_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="auditd_write_logs_ocil">
      <title>Write Audit Logs to the Disk</title>
      <actions>
        <test_action_ref>auditd_write_logs_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="audit_rules_for_ospp_ocil">
      <title>Configure audit according to OSPP requirements</title>
      <actions>
        <test_action_ref>audit_rules_for_ospp_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="grub2_vsyscall_argument_ocil">
      <title>Disable vsyscalls</title>
      <actions>
        <test_action_ref>grub2_vsyscall_argument_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_groupowner_grub2_cfg_ocil">
      <title>Verify /boot/grub2/grub.cfg Group Ownership</title>
      <actions>
        <test_action_ref>file_groupowner_grub2_cfg_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_owner_grub2_cfg_ocil">
      <title>Verify /boot/grub2/grub.cfg User Ownership</title>
      <actions>
        <test_action_ref>file_owner_grub2_cfg_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_permissions_grub2_cfg_ocil">
      <title>Verify /boot/grub2/grub.cfg Permissions</title>
      <actions>
        <test_action_ref>file_permissions_grub2_cfg_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="grub2_admin_username_ocil">
      <title>Set the Boot Loader Admin Username to a Non-Default Value</title>
      <actions>
        <test_action_ref>grub2_admin_username_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="grub2_no_removeable_media_ocil">
      <title>Boot Loader Is Not Installed On Removeable Media</title>
      <actions>
        <test_action_ref>grub2_no_removeable_media_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="grub2_password_ocil">
      <title>Set Boot Loader Password in grub2</title>
      <actions>
        <test_action_ref>grub2_password_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_groupowner_efi_grub2_cfg_ocil">
      <title>Verify the UEFI Boot Loader grub.cfg Group Ownership</title>
      <actions>
        <test_action_ref>file_groupowner_efi_grub2_cfg_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_owner_efi_grub2_cfg_ocil">
      <title>Verify the UEFI Boot Loader grub.cfg User Ownership</title>
      <actions>
        <test_action_ref>file_owner_efi_grub2_cfg_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_permissions_efi_grub2_cfg_ocil">
      <title>Verify the UEFI Boot Loader grub.cfg Permissions</title>
      <actions>
        <test_action_ref>file_permissions_efi_grub2_cfg_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="grub2_uefi_admin_username_ocil">
      <title>Set the UEFI Boot Loader Admin Username to a Non-Default Value</title>
      <actions>
        <test_action_ref>grub2_uefi_admin_username_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="grub2_uefi_password_ocil">
      <title>Set the UEFI Boot Loader Password</title>
      <actions>
        <test_action_ref>grub2_uefi_password_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="uefi_no_removeable_media_ocil">
      <title>UEFI Boot Loader Is Not Installed On Removeable Media</title>
      <actions>
        <test_action_ref>uefi_no_removeable_media_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_rsyslog_installed_ocil">
      <title>Ensure rsyslog is Installed</title>
      <actions>
        <test_action_ref>package_rsyslog_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_rsyslog_enabled_ocil">
      <title>Enable rsyslog Service</title>
      <actions>
        <test_action_ref>service_rsyslog_enabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="rsyslog_cron_logging_ocil">
      <title>Ensure cron Is Logging To Rsyslog</title>
      <actions>
        <test_action_ref>rsyslog_cron_logging_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="rsyslog_encrypt_offload_actionsendstreamdriverauthmode_ocil">
      <title>Ensure Rsyslog Authenticates Off-Loaded Audit Records</title>
      <actions>
        <test_action_ref>rsyslog_encrypt_offload_actionsendstreamdriverauthmode_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="rsyslog_encrypt_offload_actionsendstreamdrivermode_ocil">
      <title>Ensure Rsyslog Encrypts Off-Loaded Audit Records</title>
      <actions>
        <test_action_ref>rsyslog_encrypt_offload_actionsendstreamdrivermode_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="rsyslog_encrypt_offload_defaultnetstreamdriver_ocil">
      <title>Ensure Rsyslog Encrypts Off-Loaded Audit Records</title>
      <actions>
        <test_action_ref>rsyslog_encrypt_offload_defaultnetstreamdriver_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="rsyslog_files_groupownership_ocil">
      <title>Ensure Log Files Are Owned By Appropriate Group</title>
      <actions>
        <test_action_ref>rsyslog_files_groupownership_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="rsyslog_files_ownership_ocil">
      <title>Ensure Log Files Are Owned By Appropriate User</title>
      <actions>
        <test_action_ref>rsyslog_files_ownership_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="rsyslog_files_permissions_ocil">
      <title>Ensure System Log Files Have Correct Permissions</title>
      <actions>
        <test_action_ref>rsyslog_files_permissions_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="ensure_logrotate_activated_ocil">
      <title>Ensure Logrotate Runs Periodically</title>
      <actions>
        <test_action_ref>ensure_logrotate_activated_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_syslogng_installed_ocil">
      <title>Ensure syslog-ng is Installed</title>
      <actions>
        <test_action_ref>package_syslogng_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_syslogng_enabled_ocil">
      <title>Enable syslog-ng Service</title>
      <actions>
        <test_action_ref>service_syslogng_enabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="rsyslog_nolisten_ocil">
      <title>Ensure rsyslog Does Not Accept Remote Messages Unless Acting As Log Server</title>
      <actions>
        <test_action_ref>rsyslog_nolisten_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="rsyslog_remote_loghost_ocil">
      <title>Ensure Logs Sent To Remote Host</title>
      <actions>
        <test_action_ref>rsyslog_remote_loghost_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="network_configure_name_resolution_ocil">
      <title>Configure Multiple DNS Servers in /etc/resolv.conf</title>
      <actions>
        <test_action_ref>network_configure_name_resolution_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="network_sniffer_disabled_ocil">
      <title>Ensure System is Not Acting as a Network Sniffer</title>
      <actions>
        <test_action_ref>network_sniffer_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_firewalld_installed_ocil">
      <title>Install firewalld Package</title>
      <actions>
        <test_action_ref>package_firewalld_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_firewalld_enabled_ocil">
      <title>Verify firewalld Enabled</title>
      <actions>
        <test_action_ref>service_firewalld_enabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="configure_firewalld_ports_ocil">
      <title>Configure the Firewalld Ports</title>
      <actions>
        <test_action_ref>configure_firewalld_ports_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="configure_firewalld_rate_limiting_ocil">
      <title>Configure firewalld To Rate Limit Connections</title>
      <actions>
        <test_action_ref>configure_firewalld_rate_limiting_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="set_firewalld_default_zone_ocil">
      <title>Set Default firewalld Zone for Incoming Packets</title>
      <actions>
        <test_action_ref>set_firewalld_default_zone_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_libreswan_installed_ocil">
      <title>Install libreswan Package</title>
      <actions>
        <test_action_ref>package_libreswan_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="libreswan_approved_tunnels_ocil">
      <title>Verify Any Configured IPSec Tunnel Connections</title>
      <actions>
        <test_action_ref>libreswan_approved_tunnels_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_iptables_installed_ocil">
      <title>Install iptables Package</title>
      <actions>
        <test_action_ref>package_iptables_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_ip6tables_enabled_ocil">
      <title>Verify ip6tables Enabled if Using IPv6</title>
      <actions>
        <test_action_ref>service_ip6tables_enabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_iptables_enabled_ocil">
      <title>Verify iptables Enabled</title>
      <actions>
        <test_action_ref>service_iptables_enabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="set_ip6tables_default_rule_ocil">
      <title>Set Default ip6tables Policy for Incoming Packets</title>
      <actions>
        <test_action_ref>set_ip6tables_default_rule_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="set_iptables_default_rule_ocil">
      <title>Set Default iptables Policy for Incoming Packets</title>
      <actions>
        <test_action_ref>set_iptables_default_rule_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="set_iptables_default_rule_forward_ocil">
      <title>Set Default iptables Policy for Forwarded Packets</title>
      <actions>
        <test_action_ref>set_iptables_default_rule_forward_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="grub2_ipv6_disable_argument_ocil">
      <title>Ensure IPv6 is disabled through kernel boot parameter</title>
      <actions>
        <test_action_ref>grub2_ipv6_disable_argument_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="kernel_module_ipv6_option_disabled_ocil">
      <title>Disable IPv6 Networking Support Automatic Loading</title>
      <actions>
        <test_action_ref>kernel_module_ipv6_option_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv6_conf_all_disable_ipv6_ocil">
      <title>Disable IPv6 Addressing on All IPv6 Interfaces</title>
      <actions>
        <test_action_ref>sysctl_net_ipv6_conf_all_disable_ipv6_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv6_conf_default_disable_ipv6_ocil">
      <title>Disable IPv6 Addressing on IPv6 Interfaces by Default</title>
      <actions>
        <test_action_ref>sysctl_net_ipv6_conf_default_disable_ipv6_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv6_conf_all_accept_ra_ocil">
      <title>Configure Accepting Router Advertisements on All IPv6 Interfaces</title>
      <actions>
        <test_action_ref>sysctl_net_ipv6_conf_all_accept_ra_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv6_conf_all_accept_ra_defrtr_ocil">
      <title>Configure Accepting Default Router in Router Advertisements on All IPv6 Interfaces</title>
      <actions>
        <test_action_ref>sysctl_net_ipv6_conf_all_accept_ra_defrtr_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv6_conf_all_accept_ra_pinfo_ocil">
      <title>Configure Accepting Prefix Information in Router Advertisements on All IPv6 Interfaces</title>
      <actions>
        <test_action_ref>sysctl_net_ipv6_conf_all_accept_ra_pinfo_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv6_conf_all_accept_ra_rtr_pref_ocil">
      <title>Configure Accepting Router Preference in Router Advertisements on All IPv6 Interfaces</title>
      <actions>
        <test_action_ref>sysctl_net_ipv6_conf_all_accept_ra_rtr_pref_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv6_conf_all_accept_redirects_ocil">
      <title>Disable Accepting ICMP Redirects for All IPv6 Interfaces</title>
      <actions>
        <test_action_ref>sysctl_net_ipv6_conf_all_accept_redirects_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv6_conf_all_accept_source_route_ocil">
      <title>Disable Kernel Parameter for Accepting Source-Routed Packets on all IPv6 Interfaces</title>
      <actions>
        <test_action_ref>sysctl_net_ipv6_conf_all_accept_source_route_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv6_conf_all_autoconf_ocil">
      <title>Configure Auto Configuration on All IPv6 Interfaces</title>
      <actions>
        <test_action_ref>sysctl_net_ipv6_conf_all_autoconf_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv6_conf_all_forwarding_ocil">
      <title>Disable Kernel Parameter for IPv6 Forwarding</title>
      <actions>
        <test_action_ref>sysctl_net_ipv6_conf_all_forwarding_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv6_conf_all_max_addresses_ocil">
      <title>Configure Maximum Number of Autoconfigured Addresses on All IPv6 Interfaces</title>
      <actions>
        <test_action_ref>sysctl_net_ipv6_conf_all_max_addresses_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv6_conf_all_router_solicitations_ocil">
      <title>Configure Denying Router Solicitations on All IPv6 Interfaces</title>
      <actions>
        <test_action_ref>sysctl_net_ipv6_conf_all_router_solicitations_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv6_conf_default_accept_ra_ocil">
      <title>Disable Accepting Router Advertisements on all IPv6 Interfaces by Default</title>
      <actions>
        <test_action_ref>sysctl_net_ipv6_conf_default_accept_ra_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv6_conf_default_accept_ra_defrtr_ocil">
      <title>Configure Accepting Default Router in Router Advertisements on All IPv6 Interfaces By Default</title>
      <actions>
        <test_action_ref>sysctl_net_ipv6_conf_default_accept_ra_defrtr_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv6_conf_default_accept_ra_pinfo_ocil">
      <title>Configure Accepting Prefix Information in Router Advertisements on All IPv6 Interfaces By Default</title>
      <actions>
        <test_action_ref>sysctl_net_ipv6_conf_default_accept_ra_pinfo_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv6_conf_default_accept_ra_rtr_pref_ocil">
      <title>Configure Accepting Router Preference in Router Advertisements on All IPv6 Interfaces By Default</title>
      <actions>
        <test_action_ref>sysctl_net_ipv6_conf_default_accept_ra_rtr_pref_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv6_conf_default_accept_redirects_ocil">
      <title>Disable Kernel Parameter for Accepting ICMP Redirects by Default on IPv6 Interfaces</title>
      <actions>
        <test_action_ref>sysctl_net_ipv6_conf_default_accept_redirects_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv6_conf_default_accept_source_route_ocil">
      <title>Disable Kernel Parameter for Accepting Source-Routed Packets on IPv6 Interfaces by Default</title>
      <actions>
        <test_action_ref>sysctl_net_ipv6_conf_default_accept_source_route_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv6_conf_default_autoconf_ocil">
      <title>Configure Auto Configuration on All IPv6 Interfaces By Default</title>
      <actions>
        <test_action_ref>sysctl_net_ipv6_conf_default_autoconf_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv6_conf_default_max_addresses_ocil">
      <title>Configure Maximum Number of Autoconfigured Addresses on All IPv6 Interfaces By Default</title>
      <actions>
        <test_action_ref>sysctl_net_ipv6_conf_default_max_addresses_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv6_conf_default_router_solicitations_ocil">
      <title>Configure Denying Router Solicitations on All IPv6 Interfaces By Default</title>
      <actions>
        <test_action_ref>sysctl_net_ipv6_conf_default_router_solicitations_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv4_conf_all_accept_redirects_ocil">
      <title>Disable Accepting ICMP Redirects for All IPv4 Interfaces</title>
      <actions>
        <test_action_ref>sysctl_net_ipv4_conf_all_accept_redirects_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv4_conf_all_accept_source_route_ocil">
      <title>Disable Kernel Parameter for Accepting Source-Routed Packets on all IPv4 Interfaces</title>
      <actions>
        <test_action_ref>sysctl_net_ipv4_conf_all_accept_source_route_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv4_conf_all_log_martians_ocil">
      <title>Enable Kernel Parameter to Log Martian Packets on all IPv4 Interfaces</title>
      <actions>
        <test_action_ref>sysctl_net_ipv4_conf_all_log_martians_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv4_conf_all_rp_filter_ocil">
      <title>Enable Kernel Parameter to Use Reverse Path Filtering on all IPv4 Interfaces</title>
      <actions>
        <test_action_ref>sysctl_net_ipv4_conf_all_rp_filter_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv4_conf_all_secure_redirects_ocil">
      <title>Disable Kernel Parameter for Accepting Secure ICMP Redirects on all IPv4 Interfaces</title>
      <actions>
        <test_action_ref>sysctl_net_ipv4_conf_all_secure_redirects_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv4_conf_default_accept_redirects_ocil">
      <title>Disable Kernel Parameter for Accepting ICMP Redirects by Default on IPv4 Interfaces</title>
      <actions>
        <test_action_ref>sysctl_net_ipv4_conf_default_accept_redirects_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv4_conf_default_accept_source_route_ocil">
      <title>Disable Kernel Parameter for Accepting Source-Routed Packets on IPv4 Interfaces by Default</title>
      <actions>
        <test_action_ref>sysctl_net_ipv4_conf_default_accept_source_route_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv4_conf_default_log_martians_ocil">
      <title>Enable Kernel Paremeter to Log Martian Packets on all IPv4 Interfaces by Default</title>
      <actions>
        <test_action_ref>sysctl_net_ipv4_conf_default_log_martians_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv4_conf_default_rp_filter_ocil">
      <title>Enable Kernel Parameter to Use Reverse Path Filtering on all IPv4 Interfaces by Default</title>
      <actions>
        <test_action_ref>sysctl_net_ipv4_conf_default_rp_filter_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv4_conf_default_secure_redirects_ocil">
      <title>Configure Kernel Parameter for Accepting Secure Redirects By Default</title>
      <actions>
        <test_action_ref>sysctl_net_ipv4_conf_default_secure_redirects_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv4_icmp_echo_ignore_broadcasts_ocil">
      <title>Enable Kernel Parameter to Ignore ICMP Broadcast Echo Requests on IPv4 Interfaces</title>
      <actions>
        <test_action_ref>sysctl_net_ipv4_icmp_echo_ignore_broadcasts_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv4_icmp_ignore_bogus_error_responses_ocil">
      <title>Enable Kernel Parameter to Ignore Bogus ICMP Error Responses on IPv4 Interfaces</title>
      <actions>
        <test_action_ref>sysctl_net_ipv4_icmp_ignore_bogus_error_responses_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv4_ip_local_port_range_ocil">
      <title>Set Kernel Parameter to Increase Local Port Range</title>
      <actions>
        <test_action_ref>sysctl_net_ipv4_ip_local_port_range_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv4_tcp_invalid_ratelimit_ocil">
      <title>Configure Kernel to Rate Limit Sending of Duplicate TCP Acknowledgments</title>
      <actions>
        <test_action_ref>sysctl_net_ipv4_tcp_invalid_ratelimit_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv4_tcp_rfc1337_ocil">
      <title>Enable Kernel Parameter to Use TCP RFC 1337 on IPv4 Interfaces</title>
      <actions>
        <test_action_ref>sysctl_net_ipv4_tcp_rfc1337_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv4_tcp_syncookies_ocil">
      <title>Enable Kernel Parameter to Use TCP Syncookies on IPv4 Interfaces</title>
      <actions>
        <test_action_ref>sysctl_net_ipv4_tcp_syncookies_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv4_conf_all_send_redirects_ocil">
      <title>Disable Kernel Parameter for Sending ICMP Redirects on all IPv4 Interfaces</title>
      <actions>
        <test_action_ref>sysctl_net_ipv4_conf_all_send_redirects_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv4_conf_default_send_redirects_ocil">
      <title>Disable Kernel Parameter for Sending ICMP Redirects on all IPv4 Interfaces by Default</title>
      <actions>
        <test_action_ref>sysctl_net_ipv4_conf_default_send_redirects_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_net_ipv4_ip_forward_ocil">
      <title>Disable Kernel Parameter for IP Forwarding on IPv4 Interfaces</title>
      <actions>
        <test_action_ref>sysctl_net_ipv4_ip_forward_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="kernel_module_dccp_disabled_ocil">
      <title>Disable DCCP Support</title>
      <actions>
        <test_action_ref>kernel_module_dccp_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="kernel_module_rds_disabled_ocil">
      <title>Disable RDS Support</title>
      <actions>
        <test_action_ref>kernel_module_rds_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="kernel_module_sctp_disabled_ocil">
      <title>Disable SCTP Support</title>
      <actions>
        <test_action_ref>kernel_module_sctp_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="kernel_module_tipc_disabled_ocil">
      <title>Disable TIPC Support</title>
      <actions>
        <test_action_ref>kernel_module_tipc_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="kernel_module_bluetooth_disabled_ocil">
      <title>Disable Bluetooth Kernel Module</title>
      <actions>
        <test_action_ref>kernel_module_bluetooth_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="wireless_disable_interfaces_ocil">
      <title>Deactivate Wireless Network Interfaces</title>
      <actions>
        <test_action_ref>wireless_disable_interfaces_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="dir_perms_world_writable_root_owned_ocil">
      <title>Ensure All World-Writable Directories Are Owned by root user</title>
      <actions>
        <test_action_ref>dir_perms_world_writable_root_owned_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="dir_perms_world_writable_sticky_bits_ocil">
      <title>Verify that All World-Writable Directories Have Sticky Bits Set</title>
      <actions>
        <test_action_ref>dir_perms_world_writable_sticky_bits_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="dir_perms_world_writable_system_owned_ocil">
      <title>Ensure All World-Writable Directories Are Owned by a System Account</title>
      <actions>
        <test_action_ref>dir_perms_world_writable_system_owned_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="dir_perms_world_writable_system_owned_group_ocil">
      <title>Ensure All World-Writable Directories Are Group Owned by a System Account</title>
      <actions>
        <test_action_ref>dir_perms_world_writable_system_owned_group_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_permissions_systemmap_ocil">
      <title>Verify that local System.map file (if exists) is readable only by root</title>
      <actions>
        <test_action_ref>file_permissions_systemmap_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_permissions_unauthorized_sgid_ocil">
      <title>Ensure All SGID Executables Are Authorized</title>
      <actions>
        <test_action_ref>file_permissions_unauthorized_sgid_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_permissions_unauthorized_suid_ocil">
      <title>Ensure All SUID Executables Are Authorized</title>
      <actions>
        <test_action_ref>file_permissions_unauthorized_suid_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_permissions_unauthorized_world_writable_ocil">
      <title>Ensure No World-Writable Files Exist</title>
      <actions>
        <test_action_ref>file_permissions_unauthorized_world_writable_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_permissions_ungroupowned_ocil">
      <title>Ensure All Files Are Owned by a Group</title>
      <actions>
        <test_action_ref>file_permissions_ungroupowned_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="no_files_unowned_by_user_ocil">
      <title>Ensure All Files Are Owned by a User</title>
      <actions>
        <test_action_ref>no_files_unowned_by_user_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_fs_protected_hardlinks_ocil">
      <title>Enable Kernel Parameter to Enforce DAC on Hardlinks</title>
      <actions>
        <test_action_ref>sysctl_fs_protected_hardlinks_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_fs_protected_symlinks_ocil">
      <title>Enable Kernel Parameter to Enforce DAC on Symlinks</title>
      <actions>
        <test_action_ref>sysctl_fs_protected_symlinks_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_groupowner_backup_etc_group_ocil">
      <title>Verify Group Who Owns Backup group File</title>
      <actions>
        <test_action_ref>file_groupowner_backup_etc_group_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_groupowner_backup_etc_gshadow_ocil">
      <title>Verify Group Who Owns Backup gshadow File</title>
      <actions>
        <test_action_ref>file_groupowner_backup_etc_gshadow_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_groupowner_backup_etc_passwd_ocil">
      <title>Verify Group Who Owns Backup passwd File</title>
      <actions>
        <test_action_ref>file_groupowner_backup_etc_passwd_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_groupowner_backup_etc_shadow_ocil">
      <title>Verify User Who Owns Backup shadow File</title>
      <actions>
        <test_action_ref>file_groupowner_backup_etc_shadow_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_groupowner_etc_group_ocil">
      <title>Verify Group Who Owns group File</title>
      <actions>
        <test_action_ref>file_groupowner_etc_group_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_groupowner_etc_gshadow_ocil">
      <title>Verify Group Who Owns gshadow File</title>
      <actions>
        <test_action_ref>file_groupowner_etc_gshadow_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_groupowner_etc_passwd_ocil">
      <title>Verify Group Who Owns passwd File</title>
      <actions>
        <test_action_ref>file_groupowner_etc_passwd_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_groupowner_etc_shadow_ocil">
      <title>Verify Group Who Owns shadow File</title>
      <actions>
        <test_action_ref>file_groupowner_etc_shadow_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_owner_backup_etc_group_ocil">
      <title>Verify User Who Owns Backup group File</title>
      <actions>
        <test_action_ref>file_owner_backup_etc_group_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_owner_backup_etc_gshadow_ocil">
      <title>Verify User Who Owns Backup gshadow File</title>
      <actions>
        <test_action_ref>file_owner_backup_etc_gshadow_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_owner_backup_etc_passwd_ocil">
      <title>Verify User Who Owns Backup passwd File</title>
      <actions>
        <test_action_ref>file_owner_backup_etc_passwd_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_owner_backup_etc_shadow_ocil">
      <title>Verify Group Who Owns Backup shadow File</title>
      <actions>
        <test_action_ref>file_owner_backup_etc_shadow_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_owner_etc_group_ocil">
      <title>Verify User Who Owns group File</title>
      <actions>
        <test_action_ref>file_owner_etc_group_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_owner_etc_gshadow_ocil">
      <title>Verify User Who Owns gshadow File</title>
      <actions>
        <test_action_ref>file_owner_etc_gshadow_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_owner_etc_passwd_ocil">
      <title>Verify User Who Owns passwd File</title>
      <actions>
        <test_action_ref>file_owner_etc_passwd_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_owner_etc_shadow_ocil">
      <title>Verify User Who Owns shadow File</title>
      <actions>
        <test_action_ref>file_owner_etc_shadow_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_permissions_backup_etc_group_ocil">
      <title>Verify Permissions on Backup group File</title>
      <actions>
        <test_action_ref>file_permissions_backup_etc_group_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_permissions_backup_etc_gshadow_ocil">
      <title>Verify Permissions on Backup gshadow File</title>
      <actions>
        <test_action_ref>file_permissions_backup_etc_gshadow_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_permissions_backup_etc_passwd_ocil">
      <title>Verify Permissions on Backup passwd File</title>
      <actions>
        <test_action_ref>file_permissions_backup_etc_passwd_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_permissions_backup_etc_shadow_ocil">
      <title>Verify Permissions on Backup shadow File</title>
      <actions>
        <test_action_ref>file_permissions_backup_etc_shadow_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_permissions_etc_group_ocil">
      <title>Verify Permissions on group File</title>
      <actions>
        <test_action_ref>file_permissions_etc_group_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_permissions_etc_gshadow_ocil">
      <title>Verify Permissions on gshadow File</title>
      <actions>
        <test_action_ref>file_permissions_etc_gshadow_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_permissions_etc_passwd_ocil">
      <title>Verify Permissions on passwd File</title>
      <actions>
        <test_action_ref>file_permissions_etc_passwd_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_permissions_etc_shadow_ocil">
      <title>Verify Permissions on shadow File</title>
      <actions>
        <test_action_ref>file_permissions_etc_shadow_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_groupowner_var_log_ocil">
      <title>Verify Group Who Owns /var/log Directory</title>
      <actions>
        <test_action_ref>file_groupowner_var_log_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_groupowner_var_log_messages_ocil">
      <title>Verify Group Who Owns /var/log/messages File</title>
      <actions>
        <test_action_ref>file_groupowner_var_log_messages_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_owner_var_log_ocil">
      <title>Verify User Who Owns /var/log Directory</title>
      <actions>
        <test_action_ref>file_owner_var_log_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_owner_var_log_messages_ocil">
      <title>Verify User Who Owns /var/log/messages File</title>
      <actions>
        <test_action_ref>file_owner_var_log_messages_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_permissions_var_log_ocil">
      <title>Verify Permissions on /var/log Directory</title>
      <actions>
        <test_action_ref>file_permissions_var_log_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_permissions_var_log_messages_ocil">
      <title>Verify Permissions on /var/log/messages File</title>
      <actions>
        <test_action_ref>file_permissions_var_log_messages_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="dir_ownership_library_dirs_ocil">
      <title>Verify that Shared Library Directories Have Root Ownership</title>
      <actions>
        <test_action_ref>dir_ownership_library_dirs_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="dir_permissions_library_dirs_ocil">
      <title>Verify that Shared Library Directories Have Restrictive Permissions</title>
      <actions>
        <test_action_ref>dir_permissions_library_dirs_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_ownership_binary_dirs_ocil">
      <title>Verify that System Executables Have Root Ownership</title>
      <actions>
        <test_action_ref>file_ownership_binary_dirs_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_ownership_library_dirs_ocil">
      <title>Verify that Shared Library Files Have Root Ownership</title>
      <actions>
        <test_action_ref>file_ownership_library_dirs_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_permissions_binary_dirs_ocil">
      <title>Verify that System Executables Have Restrictive Permissions</title>
      <actions>
        <test_action_ref>file_permissions_binary_dirs_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_permissions_library_dirs_ocil">
      <title>Verify that Shared Library Files Have Restrictive Permissions</title>
      <actions>
        <test_action_ref>file_permissions_library_dirs_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_autofs_disabled_ocil">
      <title>Disable the Automounter</title>
      <actions>
        <test_action_ref>service_autofs_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="kernel_module_cramfs_disabled_ocil">
      <title>Disable Mounting of cramfs</title>
      <actions>
        <test_action_ref>kernel_module_cramfs_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="kernel_module_usb-storage_disabled_ocil">
      <title>Disable Modprobe Loading of USB Storage Driver</title>
      <actions>
        <test_action_ref>kernel_module_usb-storage_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_boot_noauto_ocil">
      <title>Add noauto Option to /boot</title>
      <actions>
        <test_action_ref>mount_option_boot_noauto_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_boot_nodev_ocil">
      <title>Add nodev Option to /boot</title>
      <actions>
        <test_action_ref>mount_option_boot_nodev_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_boot_noexec_ocil">
      <title>Add noexec Option to /boot</title>
      <actions>
        <test_action_ref>mount_option_boot_noexec_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_boot_nosuid_ocil">
      <title>Add nosuid Option to /boot</title>
      <actions>
        <test_action_ref>mount_option_boot_nosuid_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_dev_shm_nodev_ocil">
      <title>Add nodev Option to /dev/shm</title>
      <actions>
        <test_action_ref>mount_option_dev_shm_nodev_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_dev_shm_noexec_ocil">
      <title>Add noexec Option to /dev/shm</title>
      <actions>
        <test_action_ref>mount_option_dev_shm_noexec_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_dev_shm_nosuid_ocil">
      <title>Add nosuid Option to /dev/shm</title>
      <actions>
        <test_action_ref>mount_option_dev_shm_nosuid_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_home_nodev_ocil">
      <title>Add nodev Option to /home</title>
      <actions>
        <test_action_ref>mount_option_home_nodev_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_home_noexec_ocil">
      <title>Add noexec Option to /home</title>
      <actions>
        <test_action_ref>mount_option_home_noexec_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_home_nosuid_ocil">
      <title>Add nosuid Option to /home</title>
      <actions>
        <test_action_ref>mount_option_home_nosuid_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_nodev_nonroot_local_partitions_ocil">
      <title>Add nodev Option to Non-Root Local Partitions</title>
      <actions>
        <test_action_ref>mount_option_nodev_nonroot_local_partitions_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_noexec_removable_partitions_ocil">
      <title>Add noexec Option to Removable Media Partitions</title>
      <actions>
        <test_action_ref>mount_option_noexec_removable_partitions_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_opt_nosuid_ocil">
      <title>Add nosuid Option to /opt</title>
      <actions>
        <test_action_ref>mount_option_opt_nosuid_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_srv_nosuid_ocil">
      <title>Add nosuid Option to /srv</title>
      <actions>
        <test_action_ref>mount_option_srv_nosuid_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_tmp_nodev_ocil">
      <title>Add nodev Option to /tmp</title>
      <actions>
        <test_action_ref>mount_option_tmp_nodev_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_tmp_noexec_ocil">
      <title>Add noexec Option to /tmp</title>
      <actions>
        <test_action_ref>mount_option_tmp_noexec_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_tmp_nosuid_ocil">
      <title>Add nosuid Option to /tmp</title>
      <actions>
        <test_action_ref>mount_option_tmp_nosuid_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_var_log_audit_nodev_ocil">
      <title>Add nodev Option to /var/log/audit</title>
      <actions>
        <test_action_ref>mount_option_var_log_audit_nodev_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_var_log_audit_noexec_ocil">
      <title>Add noexec Option to /var/log/audit</title>
      <actions>
        <test_action_ref>mount_option_var_log_audit_noexec_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_var_log_audit_nosuid_ocil">
      <title>Add nosuid Option to /var/log/audit</title>
      <actions>
        <test_action_ref>mount_option_var_log_audit_nosuid_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_var_log_nodev_ocil">
      <title>Add nodev Option to /var/log</title>
      <actions>
        <test_action_ref>mount_option_var_log_nodev_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_var_log_noexec_ocil">
      <title>Add noexec Option to /var/log</title>
      <actions>
        <test_action_ref>mount_option_var_log_noexec_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_var_log_nosuid_ocil">
      <title>Add nosuid Option to /var/log</title>
      <actions>
        <test_action_ref>mount_option_var_log_nosuid_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_var_nodev_ocil">
      <title>Add nodev Option to /var</title>
      <actions>
        <test_action_ref>mount_option_var_nodev_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_var_noexec_ocil">
      <title>Add noexec Option to /var</title>
      <actions>
        <test_action_ref>mount_option_var_noexec_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_var_nosuid_ocil">
      <title>Add nosuid Option to /var</title>
      <actions>
        <test_action_ref>mount_option_var_nosuid_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_var_tmp_nodev_ocil">
      <title>Add nodev Option to /var/tmp</title>
      <actions>
        <test_action_ref>mount_option_var_tmp_nodev_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_var_tmp_noexec_ocil">
      <title>Add noexec Option to /var/tmp</title>
      <actions>
        <test_action_ref>mount_option_var_tmp_noexec_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_var_tmp_nosuid_ocil">
      <title>Add nosuid Option to /var/tmp</title>
      <actions>
        <test_action_ref>mount_option_var_tmp_nosuid_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_kernel_dmesg_restrict_ocil">
      <title>Restrict Access to Kernel Message Buffer</title>
      <actions>
        <test_action_ref>sysctl_kernel_dmesg_restrict_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_kernel_kexec_load_disabled_ocil">
      <title>Disable Kernel Image Loading</title>
      <actions>
        <test_action_ref>sysctl_kernel_kexec_load_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_kernel_modules_disabled_ocil">
      <title>Disable loading and unloading of kernel modules</title>
      <actions>
        <test_action_ref>sysctl_kernel_modules_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_kernel_perf_cpu_time_max_percent_ocil">
      <title>Limit CPU consumption of the Perf system</title>
      <actions>
        <test_action_ref>sysctl_kernel_perf_cpu_time_max_percent_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_kernel_perf_event_max_sample_rate_ocil">
      <title>Limit sampling frequency of the Perf system</title>
      <actions>
        <test_action_ref>sysctl_kernel_perf_event_max_sample_rate_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_kernel_perf_event_paranoid_ocil">
      <title>Disallow kernel profiling by unprivileged users</title>
      <actions>
        <test_action_ref>sysctl_kernel_perf_event_paranoid_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_kernel_pid_max_ocil">
      <title>Configure maximum number of process identifiers</title>
      <actions>
        <test_action_ref>sysctl_kernel_pid_max_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_kernel_sysrq_ocil">
      <title>Disallow magic SysRq key</title>
      <actions>
        <test_action_ref>sysctl_kernel_sysrq_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_kernel_yama_ptrace_scope_ocil">
      <title>Restrict usage of ptrace to descendant processes</title>
      <actions>
        <test_action_ref>sysctl_kernel_yama_ptrace_scope_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_vm_mmap_min_addr_ocil">
      <title>Prevent applications from mapping low portion of virtual memory</title>
      <actions>
        <test_action_ref>sysctl_vm_mmap_min_addr_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="coredump_disable_backtraces_ocil">
      <title>Disable core dump backtraces</title>
      <actions>
        <test_action_ref>coredump_disable_backtraces_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="coredump_disable_storage_ocil">
      <title>Disable storing core dump</title>
      <actions>
        <test_action_ref>coredump_disable_storage_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="disable_users_coredumps_ocil">
      <title>Disable Core Dumps for All Users</title>
      <actions>
        <test_action_ref>disable_users_coredumps_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_fs_suid_dumpable_ocil">
      <title>Disable Core Dumps for SUID programs</title>
      <actions>
        <test_action_ref>sysctl_fs_suid_dumpable_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_kernel_kptr_restrict_ocil">
      <title>Restrict Exposed Kernel Pointer Addresses Access</title>
      <actions>
        <test_action_ref>sysctl_kernel_kptr_restrict_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sysctl_kernel_randomize_va_space_ocil">
      <title>Enable Randomized Layout of Virtual Address Space</title>
      <actions>
        <test_action_ref>sysctl_kernel_randomize_va_space_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="grub2_page_poison_argument_ocil">
      <title>Enable page allocator poisoning</title>
      <actions>
        <test_action_ref>grub2_page_poison_argument_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="grub2_slub_debug_argument_ocil">
      <title>Enable SLUB/SLAB allocator poisoning</title>
      <actions>
        <test_action_ref>grub2_slub_debug_argument_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_libselinux_installed_ocil">
      <title>Install libselinux Package</title>
      <actions>
        <test_action_ref>package_libselinux_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_policycoreutils_installed_ocil">
      <title>Install policycoreutils Package</title>
      <actions>
        <test_action_ref>package_policycoreutils_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_setroubleshoot-plugins_removed_ocil">
      <title>Uninstall setroubleshoot-plugins Package</title>
      <actions>
        <test_action_ref>package_setroubleshoot-plugins_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_setroubleshoot-server_removed_ocil">
      <title>Uninstall setroubleshoot-server Package</title>
      <actions>
        <test_action_ref>package_setroubleshoot-server_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="coreos_enable_selinux_kernel_argument_ocil">
      <title>Ensure SELinux Not Disabled in the kernel arguments</title>
      <actions>
        <test_action_ref>coreos_enable_selinux_kernel_argument_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="grub2_enable_selinux_ocil">
      <title>Ensure SELinux Not Disabled in /etc/default/grub</title>
      <actions>
        <test_action_ref>grub2_enable_selinux_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="selinux_all_devicefiles_labeled_ocil">
      <title>Ensure No Device Files are Unlabeled by SELinux</title>
      <actions>
        <test_action_ref>selinux_all_devicefiles_labeled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="selinux_confinement_of_daemons_ocil">
      <title>Ensure No Daemons are Unconfined by SELinux</title>
      <actions>
        <test_action_ref>selinux_confinement_of_daemons_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="selinux_policytype_ocil">
      <title>Configure SELinux Policy</title>
      <actions>
        <test_action_ref>selinux_policytype_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="selinux_state_ocil">
      <title>Ensure SELinux State is Enforcing</title>
      <actions>
        <test_action_ref>selinux_state_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="selinux_user_login_roles_ocil">
      <title>Map System Users To The Appropriate SELinux Role</title>
      <actions>
        <test_action_ref>selinux_user_login_roles_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sebool_polyinstantiation_enabled_ocil">
      <title>Disable the polyinstantiation_enabled SELinux Boolean</title>
      <actions>
        <test_action_ref>sebool_polyinstantiation_enabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sebool_secure_mode_insmod_ocil">
      <title>Disable the secure_mode_insmod SELinux Boolean</title>
      <actions>
        <test_action_ref>sebool_secure_mode_insmod_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sebool_selinuxuser_execheap_ocil">
      <title>Disable the selinuxuser_execheap SELinux Boolean</title>
      <actions>
        <test_action_ref>sebool_selinuxuser_execheap_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sebool_selinuxuser_execmod_ocil">
      <title>Enable the selinuxuser_execmod SELinux Boolean</title>
      <actions>
        <test_action_ref>sebool_selinuxuser_execmod_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sebool_selinuxuser_execstack_ocil">
      <title>disable the selinuxuser_execstack SELinux Boolean</title>
      <actions>
        <test_action_ref>sebool_selinuxuser_execstack_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sebool_ssh_sysadm_login_ocil">
      <title>Disable the ssh_sysadm_login SELinux Boolean</title>
      <actions>
        <test_action_ref>sebool_ssh_sysadm_login_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_avahi-daemon_disabled_ocil">
      <title>Disable Avahi Server Software</title>
      <actions>
        <test_action_ref>service_avahi-daemon_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_abrt_removed_ocil">
      <title>Uninstall Automatic Bug Reporting Tool (abrt)</title>
      <actions>
        <test_action_ref>package_abrt_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_abrtd_disabled_ocil">
      <title>Disable Automatic Bug Reporting Tool (abrtd)</title>
      <actions>
        <test_action_ref>service_abrtd_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_cockpit_disabled_ocil">
      <title>Disable Cockpit Management Server</title>
      <actions>
        <test_action_ref>service_cockpit_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_kdump_disabled_ocil">
      <title>Disable KDump Kernel Crash Analyzer (kdump)</title>
      <actions>
        <test_action_ref>service_kdump_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_ntpdate_disabled_ocil">
      <title>Disable ntpdate Service (ntpdate)</title>
      <actions>
        <test_action_ref>service_ntpdate_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_oddjobd_disabled_ocil">
      <title>Disable Odd Job Daemon (oddjobd)</title>
      <actions>
        <test_action_ref>service_oddjobd_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_qpidd_disabled_ocil">
      <title>Disable Apache Qpid (qpidd)</title>
      <actions>
        <test_action_ref>service_qpidd_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_rdisc_disabled_ocil">
      <title>Disable Network Router Discovery Daemon (rdisc)</title>
      <actions>
        <test_action_ref>service_rdisc_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_cron_enabled_ocil">
      <title>Enable cron Service</title>
      <actions>
        <test_action_ref>service_cron_enabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_crond_enabled_ocil">
      <title>Enable cron Service</title>
      <actions>
        <test_action_ref>service_crond_enabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_atd_disabled_ocil">
      <title>Disable At Service (atd)</title>
      <actions>
        <test_action_ref>service_atd_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_groupowner_cron_allow_ocil">
      <title>Verify Group Who Owns /etc/cron.allow file</title>
      <actions>
        <test_action_ref>file_groupowner_cron_allow_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_owner_cron_allow_ocil">
      <title>Verify User Who Owns /etc/cron.allow file</title>
      <actions>
        <test_action_ref>file_owner_cron_allow_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_dhcp_removed_ocil">
      <title>Uninstall DHCP Server Package</title>
      <actions>
        <test_action_ref>package_dhcp_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_bind_removed_ocil">
      <title>Uninstall bind Package</title>
      <actions>
        <test_action_ref>package_bind_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_vsftpd_removed_ocil">
      <title>Uninstall vsftpd Package</title>
      <actions>
        <test_action_ref>package_vsftpd_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_krb5-server_removed_ocil">
      <title>Remove the Kerberos Server Package</title>
      <actions>
        <test_action_ref>package_krb5-server_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="kerberos_disable_no_keytab_ocil">
      <title>Disable Kerberos by removing host keytab</title>
      <actions>
        <test_action_ref>kerberos_disable_no_keytab_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_openldap-clients_removed_ocil">
      <title>Ensure LDAP client is not installed</title>
      <actions>
        <test_action_ref>package_openldap-clients_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_sendmail_removed_ocil">
      <title>Uninstall Sendmail Package</title>
      <actions>
        <test_action_ref>package_sendmail_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_postfix_enabled_ocil">
      <title>Enable Postfix Service</title>
      <actions>
        <test_action_ref>service_postfix_enabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="postfix_client_configure_mail_alias_ocil">
      <title>Configure System to Forward All Mail For The Root Account</title>
      <actions>
        <test_action_ref>postfix_client_configure_mail_alias_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="postfix_client_configure_relayhost_ocil">
      <title>Configure System to Forward All Mail through a specific host</title>
      <actions>
        <test_action_ref>postfix_client_configure_relayhost_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="postfix_network_listening_disabled_ocil">
      <title>Disable Postfix Network Listening</title>
      <actions>
        <test_action_ref>postfix_network_listening_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="postfix_prevent_unrestricted_relay_ocil">
      <title>Prevent Unrestricted Mail Relaying</title>
      <actions>
        <test_action_ref>postfix_prevent_unrestricted_relay_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_nfs-utils_removed_ocil">
      <title>Uninstall nfs-utils Package</title>
      <actions>
        <test_action_ref>package_nfs-utils_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_krb_sec_remote_filesystems_ocil">
      <title>Mount Remote Filesystems with Kerberos Security</title>
      <actions>
        <test_action_ref>mount_option_krb_sec_remote_filesystems_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_noexec_remote_filesystems_ocil">
      <title>Mount Remote Filesystems with noexec</title>
      <actions>
        <test_action_ref>mount_option_noexec_remote_filesystems_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="mount_option_nosuid_remote_filesystems_ocil">
      <title>Mount Remote Filesystems with nosuid</title>
      <actions>
        <test_action_ref>mount_option_nosuid_remote_filesystems_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="no_all_squash_exports_ocil">
      <title>Ensure All-Squashing Disabled On All Exports</title>
      <actions>
        <test_action_ref>no_all_squash_exports_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="use_kerberos_security_all_exports_ocil">
      <title>Use Kerberos Security on All Exports</title>
      <actions>
        <test_action_ref>use_kerberos_security_all_exports_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_chrony_installed_ocil">
      <title>The Chrony package is installed</title>
      <actions>
        <test_action_ref>package_chrony_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_chronyd_enabled_ocil">
      <title>The Chronyd service is enabled</title>
      <actions>
        <test_action_ref>service_chronyd_enabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_chronyd_or_ntpd_enabled_ocil">
      <title>Enable the NTP Daemon</title>
      <actions>
        <test_action_ref>service_chronyd_or_ntpd_enabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_ntp_enabled_ocil">
      <title>Enable the NTP Daemon</title>
      <actions>
        <test_action_ref>service_ntp_enabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_ntpd_enabled_ocil">
      <title>Enable the NTP Daemon</title>
      <actions>
        <test_action_ref>service_ntpd_enabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="chronyd_or_ntpd_set_maxpoll_ocil">
      <title>Configure Time Service Maxpoll Interval</title>
      <actions>
        <test_action_ref>chronyd_or_ntpd_set_maxpoll_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="chronyd_or_ntpd_specify_remote_server_ocil">
      <title>Specify a Remote NTP Server</title>
      <actions>
        <test_action_ref>chronyd_or_ntpd_specify_remote_server_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="chronyd_specify_remote_server_ocil">
      <title>A remote time server for Chrony is configured</title>
      <actions>
        <test_action_ref>chronyd_specify_remote_server_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="ntpd_specify_remote_server_ocil">
      <title>Specify a Remote NTP Server</title>
      <actions>
        <test_action_ref>ntpd_specify_remote_server_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_rsyncd_disabled_ocil">
      <title>Ensure rsyncd service is diabled</title>
      <actions>
        <test_action_ref>service_rsyncd_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_xinetd_removed_ocil">
      <title>Uninstall xinetd Package</title>
      <actions>
        <test_action_ref>package_xinetd_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_xinetd_disabled_ocil">
      <title>Disable xinetd Service</title>
      <actions>
        <test_action_ref>service_xinetd_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="configure_etc_hosts_deny_ocil">
      <title>Ensure /etc/hosts.deny is configured</title>
      <actions>
        <test_action_ref>configure_etc_hosts_deny_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_groupowner_etc_hosts_allow_ocil">
      <title>Verify Group Ownership of /etc/hosts.allow</title>
      <actions>
        <test_action_ref>file_groupowner_etc_hosts_allow_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_groupowner_etc_hosts_deny_ocil">
      <title>Verify Group Ownership of /etc/hosts.deny</title>
      <actions>
        <test_action_ref>file_groupowner_etc_hosts_deny_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_owner_etc_hosts_allow_ocil">
      <title>Verify Ownership of /etc/hosts.allow</title>
      <actions>
        <test_action_ref>file_owner_etc_hosts_allow_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_owner_etc_hosts_deny_ocil">
      <title>Verify Ownership of /etc/hosts.deny</title>
      <actions>
        <test_action_ref>file_owner_etc_hosts_deny_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_permissions_etc_hosts_allow_ocil">
      <title>Verify Permissions on /etc/hosts.allow</title>
      <actions>
        <test_action_ref>file_permissions_etc_hosts_allow_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_permissions_etc_hosts_deny_ocil">
      <title>Verify Permissions on /etc/hosts.deny</title>
      <actions>
        <test_action_ref>file_permissions_etc_hosts_deny_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_ypbind_removed_ocil">
      <title>Remove NIS Client</title>
      <actions>
        <test_action_ref>package_ypbind_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_ypserv_removed_ocil">
      <title>Uninstall ypserv Package</title>
      <actions>
        <test_action_ref>package_ypserv_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_ypbind_disabled_ocil">
      <title>Disable ypbind Service</title>
      <actions>
        <test_action_ref>service_ypbind_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_rsh-server_removed_ocil">
      <title>Uninstall rsh-server Package</title>
      <actions>
        <test_action_ref>package_rsh-server_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_rsh_removed_ocil">
      <title>Uninstall rsh Package</title>
      <actions>
        <test_action_ref>package_rsh_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_rexec_disabled_ocil">
      <title>Disable rexec Service</title>
      <actions>
        <test_action_ref>service_rexec_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_rlogin_disabled_ocil">
      <title>Disable rlogin Service</title>
      <actions>
        <test_action_ref>service_rlogin_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_rsh_disabled_ocil">
      <title>Disable rsh Service</title>
      <actions>
        <test_action_ref>service_rsh_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="no_host_based_files_ocil">
      <title>Remove Host-Based Authentication Files</title>
      <actions>
        <test_action_ref>no_host_based_files_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="no_rsh_trust_files_ocil">
      <title>Remove Rsh Trust Files</title>
      <actions>
        <test_action_ref>no_rsh_trust_files_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="no_user_host_based_files_ocil">
      <title>Remove User Host-Based Authentication Files</title>
      <actions>
        <test_action_ref>no_user_host_based_files_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_talk-server_removed_ocil">
      <title>Uninstall talk-server Package</title>
      <actions>
        <test_action_ref>package_talk-server_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_talk_removed_ocil">
      <title>Uninstall talk Package</title>
      <actions>
        <test_action_ref>package_talk_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_telnet-server_removed_ocil">
      <title>Uninstall telnet-server Package</title>
      <actions>
        <test_action_ref>package_telnet-server_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_telnet_removed_ocil">
      <title>Remove telnet Clients</title>
      <actions>
        <test_action_ref>package_telnet_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_telnet_disabled_ocil">
      <title>Disable telnet Service</title>
      <actions>
        <test_action_ref>service_telnet_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_tftp-server_removed_ocil">
      <title>Uninstall tftp-server Package</title>
      <actions>
        <test_action_ref>package_tftp-server_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="tftpd_uses_secure_mode_ocil">
      <title>Ensure tftp Daemon Uses Secure Mode</title>
      <actions>
        <test_action_ref>tftpd_uses_secure_mode_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_squid_removed_ocil">
      <title>Uninstall squid Package</title>
      <actions>
        <test_action_ref>package_squid_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_squid_disabled_ocil">
      <title>Disable Squid</title>
      <actions>
        <test_action_ref>service_squid_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_freeradius_removed_ocil">
      <title>Remove the FreeRadius Server Package</title>
      <actions>
        <test_action_ref>package_freeradius_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_quagga_removed_ocil">
      <title>Uninstall quagga Package</title>
      <actions>
        <test_action_ref>package_quagga_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_zebra_disabled_ocil">
      <title>Disable Quagga Service</title>
      <actions>
        <test_action_ref>service_zebra_disabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_net-snmp_removed_ocil">
      <title>Uninstall net-snmp Package</title>
      <actions>
        <test_action_ref>package_net-snmp_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="snmpd_not_default_password_ocil">
      <title>Ensure Default SNMP Password Is Not Used</title>
      <actions>
        <test_action_ref>snmpd_not_default_password_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_openssh-server_installed_ocil">
      <title>Install the OpenSSH Server Package</title>
      <actions>
        <test_action_ref>package_openssh-server_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_openssh-server_removed_ocil">
      <title>Remove the OpenSSH Server Package</title>
      <actions>
        <test_action_ref>package_openssh-server_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_sshd_enabled_ocil">
      <title>Enable the OpenSSH Service</title>
      <actions>
        <test_action_ref>service_sshd_enabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_permissions_sshd_private_key_ocil">
      <title>Verify Permissions on SSH Server Private *_key Key Files</title>
      <actions>
        <test_action_ref>file_permissions_sshd_private_key_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="file_permissions_sshd_pub_key_ocil">
      <title>Verify Permissions on SSH Server Public *.pub Key Files</title>
      <actions>
        <test_action_ref>file_permissions_sshd_pub_key_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="disable_host_auth_ocil">
      <title>Disable Host-Based Authentication</title>
      <actions>
        <test_action_ref>disable_host_auth_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="firewalld_sshd_port_enabled_ocil">
      <title>Enable SSH Server firewalld Firewall Exception</title>
      <actions>
        <test_action_ref>firewalld_sshd_port_enabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_allow_only_protocol2_ocil">
      <title>Allow Only SSH Protocol 2</title>
      <actions>
        <test_action_ref>sshd_allow_only_protocol2_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_disable_compression_ocil">
      <title>Disable Compression Or Set Compression to delayed</title>
      <actions>
        <test_action_ref>sshd_disable_compression_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_disable_empty_passwords_ocil">
      <title>Disable SSH Access via Empty Passwords</title>
      <actions>
        <test_action_ref>sshd_disable_empty_passwords_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_disable_gssapi_auth_ocil">
      <title>Disable GSSAPI Authentication</title>
      <actions>
        <test_action_ref>sshd_disable_gssapi_auth_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_disable_kerb_auth_ocil">
      <title>Disable Kerberos Authentication</title>
      <actions>
        <test_action_ref>sshd_disable_kerb_auth_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_disable_pubkey_auth_ocil">
      <title>Disable PubkeyAuthentication Authentication</title>
      <actions>
        <test_action_ref>sshd_disable_pubkey_auth_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_disable_rhosts_ocil">
      <title>Disable SSH Support for .rhosts Files</title>
      <actions>
        <test_action_ref>sshd_disable_rhosts_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_disable_rhosts_rsa_ocil">
      <title>Disable SSH Support for Rhosts RSA Authentication</title>
      <actions>
        <test_action_ref>sshd_disable_rhosts_rsa_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_disable_root_login_ocil">
      <title>Disable SSH Root Login</title>
      <actions>
        <test_action_ref>sshd_disable_root_login_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_disable_root_password_login_ocil">
      <title>Disable SSH root Login with a Password (Insecure)</title>
      <actions>
        <test_action_ref>sshd_disable_root_password_login_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_disable_tcp_forwarding_ocil">
      <title>Disable SSH TCP Forwarding</title>
      <actions>
        <test_action_ref>sshd_disable_tcp_forwarding_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_disable_user_known_hosts_ocil">
      <title>Disable SSH Support for User Known Hosts</title>
      <actions>
        <test_action_ref>sshd_disable_user_known_hosts_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_disable_x11_forwarding_ocil">
      <title>Disable X11 Forwarding</title>
      <actions>
        <test_action_ref>sshd_disable_x11_forwarding_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_do_not_permit_user_env_ocil">
      <title>Do Not Allow SSH Environment Options</title>
      <actions>
        <test_action_ref>sshd_do_not_permit_user_env_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_enable_gssapi_auth_ocil">
      <title>Enable GSSAPI Authentication</title>
      <actions>
        <test_action_ref>sshd_enable_gssapi_auth_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_enable_strictmodes_ocil">
      <title>Enable Use of Strict Mode Checking</title>
      <actions>
        <test_action_ref>sshd_enable_strictmodes_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_enable_warning_banner_ocil">
      <title>Enable SSH Warning Banner</title>
      <actions>
        <test_action_ref>sshd_enable_warning_banner_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_enable_x11_forwarding_ocil">
      <title>Enable Encrypted X11 Forwarding</title>
      <actions>
        <test_action_ref>sshd_enable_x11_forwarding_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_limit_user_access_ocil">
      <title>Limit Users' SSH Access</title>
      <actions>
        <test_action_ref>sshd_limit_user_access_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_print_last_log_ocil">
      <title>Enable SSH Print Last Log</title>
      <actions>
        <test_action_ref>sshd_print_last_log_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_rekey_limit_ocil">
      <title>Force frequent session key renegotiation</title>
      <actions>
        <test_action_ref>sshd_rekey_limit_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_set_idle_timeout_ocil">
      <title>Set SSH Idle Timeout Interval</title>
      <actions>
        <test_action_ref>sshd_set_idle_timeout_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_set_keepalive_ocil">
      <title>Set SSH Client Alive Count Max</title>
      <actions>
        <test_action_ref>sshd_set_keepalive_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_set_keepalive_0_ocil">
      <title>Set SSH Client Alive Count Max to zero</title>
      <actions>
        <test_action_ref>sshd_set_keepalive_0_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_set_loglevel_info_ocil">
      <title>Set LogLevel to INFO</title>
      <actions>
        <test_action_ref>sshd_set_loglevel_info_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_set_loglevel_verbose_ocil">
      <title>Set SSH Daemon LogLevel to VERBOSE</title>
      <actions>
        <test_action_ref>sshd_set_loglevel_verbose_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_set_max_auth_tries_ocil">
      <title>Set SSH authentication attempt limit</title>
      <actions>
        <test_action_ref>sshd_set_max_auth_tries_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_set_max_sessions_ocil">
      <title>Set SSH MaxSessions limit</title>
      <actions>
        <test_action_ref>sshd_set_max_sessions_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_set_maxstartups_ocil">
      <title>Ensure SSH MaxStartups is configured</title>
      <actions>
        <test_action_ref>sshd_set_maxstartups_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_use_approved_ciphers_ocil">
      <title>Use Only FIPS 140-2 Validated Ciphers</title>
      <actions>
        <test_action_ref>sshd_use_approved_ciphers_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_use_approved_ciphers_ordered_stig_ocil">
      <title>Use Only FIPS 140-2 Validated Ciphers</title>
      <actions>
        <test_action_ref>sshd_use_approved_ciphers_ordered_stig_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_use_approved_macs_ocil">
      <title>Use Only FIPS 140-2 Validated MACs</title>
      <actions>
        <test_action_ref>sshd_use_approved_macs_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_use_approved_macs_ordered_stig_ocil">
      <title>Use Only FIPS 140-2 Validated MACs</title>
      <actions>
        <test_action_ref>sshd_use_approved_macs_ordered_stig_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_use_priv_separation_ocil">
      <title>Enable Use of Privilege Separation</title>
      <actions>
        <test_action_ref>sshd_use_priv_separation_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_use_strong_ciphers_ocil">
      <title>Use Only Strong Ciphers</title>
      <actions>
        <test_action_ref>sshd_use_strong_ciphers_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_use_strong_macs_ocil">
      <title>Use Only Strong MACs</title>
      <actions>
        <test_action_ref>sshd_use_strong_macs_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sshd_x11_use_localhost_ocil">
      <title>Prevent remote hosts from connecting to the proxy display</title>
      <actions>
        <test_action_ref>sshd_x11_use_localhost_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_sssd-ipa_installed_ocil">
      <title>Install sssd-ipa Package</title>
      <actions>
        <test_action_ref>package_sssd-ipa_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_sssd_installed_ocil">
      <title>Install the SSSD Package</title>
      <actions>
        <test_action_ref>package_sssd_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="service_sssd_enabled_ocil">
      <title>Enable the SSSD Service</title>
      <actions>
        <test_action_ref>service_sssd_enabled_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sssd_enable_pam_services_ocil">
      <title>Configure PAM in SSSD Services</title>
      <actions>
        <test_action_ref>sssd_enable_pam_services_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sssd_enable_smartcards_ocil">
      <title>Enable Smartcards in SSSD</title>
      <actions>
        <test_action_ref>sssd_enable_smartcards_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sssd_memcache_timeout_ocil">
      <title>Configure SSSD's Memory Cache to Expire</title>
      <actions>
        <test_action_ref>sssd_memcache_timeout_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sssd_offline_cred_expiration_ocil">
      <title>Configure SSSD to Expire Offline Credentials</title>
      <actions>
        <test_action_ref>sssd_offline_cred_expiration_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sssd_ldap_configure_tls_ca_ocil">
      <title>Configure SSSD LDAP Backend Client CA Certificate</title>
      <actions>
        <test_action_ref>sssd_ldap_configure_tls_ca_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sssd_ldap_configure_tls_ca_dir_ocil">
      <title>Configure SSSD LDAP Backend Client CA Certificate Location</title>
      <actions>
        <test_action_ref>sssd_ldap_configure_tls_ca_dir_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sssd_ldap_configure_tls_reqcert_ocil">
      <title>Configure SSSD LDAP Backend Client to Demand a Valid Certificate from the Server</title>
      <actions>
        <test_action_ref>sssd_ldap_configure_tls_reqcert_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="sssd_ldap_start_tls_ocil">
      <title>Configure SSSD LDAP Backend to Use TLS For All Transactions</title>
      <actions>
        <test_action_ref>sssd_ldap_start_tls_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_usbguard_installed_ocil">
      <title>Install usbguard Package</title>
      <actions>
        <test_action_ref>package_usbguard_installed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="package_xorg-x11-server-common_removed_ocil">
      <title>Remove the X Windows Package Group</title>
      <actions>
        <test_action_ref>package_xorg-x11-server-common_removed_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="xwindows_remove_packages_ocil">
      <title>Disable graphical user interface</title>
      <actions>
        <test_action_ref>xwindows_remove_packages_action</test_action_ref>
      </actions>
    </questionnaire>
    <questionnaire id="xwindows_runlevel_target_ocil">
      <title>Disable X Windows Startup By Setting Default Target</title>
      <actions>
        <test_action_ref>xwindows_runlevel_target_action</test_action_ref>
      </actions>
    </questionnaire>
  </questionnaires>
  <test_actions>
    <boolean_question_test_action id="prefer_64bit_os_action" question_ref="prefer_64bit_os_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="rpm_verify_hashes_action" question_ref="rpm_verify_hashes_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="rpm_verify_ownership_action" question_ref="rpm_verify_ownership_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="rpm_verify_permissions_action" question_ref="rpm_verify_permissions_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_aide_installed_action" question_ref="package_aide_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="aide_build_database_action" question_ref="aide_build_database_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="aide_periodic_cron_checking_action" question_ref="aide_periodic_cron_checking_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="aide_scan_notification_action" question_ref="aide_scan_notification_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="aide_use_fips_hashes_action" question_ref="aide_use_fips_hashes_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="aide_verify_acls_action" question_ref="aide_verify_acls_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="aide_verify_ext_attributes_action" question_ref="aide_verify_ext_attributes_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_dracut-fips-aesni_installed_action" question_ref="package_dracut-fips-aesni_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_dracut-fips_installed_action" question_ref="package_dracut-fips_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="etc_system_fips_exists_action" question_ref="etc_system_fips_exists_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="grub2_enable_fips_mode_action" question_ref="grub2_enable_fips_mode_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="harden_ssh_client_crypto_policy_action" question_ref="harden_ssh_client_crypto_policy_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="harden_sshd_crypto_policy_action" question_ref="harden_sshd_crypto_policy_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="installed_OS_is_FIPS_certified_action" question_ref="installed_OS_is_FIPS_certified_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="installed_OS_is_vendor_supported_action" question_ref="installed_OS_is_vendor_supported_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="configure_user_data_backups_action" question_ref="configure_user_data_backups_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="install_antivirus_action" question_ref="install_antivirus_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="install_hids_action" question_ref="install_hids_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="install_mcafee_antivirus_action" question_ref="install_mcafee_antivirus_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="install_mcafee_cma_rt_action" question_ref="install_mcafee_cma_rt_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_mcafeetp_installed_action" question_ref="package_mcafeetp_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="agent_mfetpd_running_action" question_ref="agent_mfetpd_running_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_MFEhiplsm_installed_action" question_ref="package_MFEhiplsm_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="install_mcafee_hbss_accm_action" question_ref="install_mcafee_hbss_accm_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="install_mcafee_hbss_pa_action" question_ref="install_mcafee_hbss_pa_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="encrypt_partitions_action" question_ref="encrypt_partitions_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="partition_for_boot_action" question_ref="partition_for_boot_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="partition_for_home_action" question_ref="partition_for_home_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="partition_for_opt_action" question_ref="partition_for_opt_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="partition_for_srv_action" question_ref="partition_for_srv_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="partition_for_tmp_action" question_ref="partition_for_tmp_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="partition_for_usr_action" question_ref="partition_for_usr_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="partition_for_var_action" question_ref="partition_for_var_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="partition_for_var_log_action" question_ref="partition_for_var_log_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="partition_for_var_log_audit_action" question_ref="partition_for_var_log_audit_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="partition_for_var_tmp_action" question_ref="partition_for_var_tmp_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="dconf_db_up_to_date_action" question_ref="dconf_db_up_to_date_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="enable_dconf_user_profile_action" question_ref="enable_dconf_user_profile_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="dconf_gnome_disable_restart_shutdown_action" question_ref="dconf_gnome_disable_restart_shutdown_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="dconf_gnome_disable_user_list_action" question_ref="dconf_gnome_disable_user_list_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="dconf_gnome_enable_smartcard_auth_action" question_ref="dconf_gnome_enable_smartcard_auth_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="dconf_gnome_login_retries_action" question_ref="dconf_gnome_login_retries_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="gnome_gdm_disable_automatic_login_action" question_ref="gnome_gdm_disable_automatic_login_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="gnome_gdm_disable_guest_login_action" question_ref="gnome_gdm_disable_guest_login_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="gnome_gdm_disable_xdmcp_action" question_ref="gnome_gdm_disable_xdmcp_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="dconf_gnome_disable_automount_action" question_ref="dconf_gnome_disable_automount_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="dconf_gnome_disable_automount_open_action" question_ref="dconf_gnome_disable_automount_open_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="dconf_gnome_disable_autorun_action" question_ref="dconf_gnome_disable_autorun_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="dconf_gnome_remote_access_credential_prompt_action" question_ref="dconf_gnome_remote_access_credential_prompt_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="dconf_gnome_remote_access_encryption_action" question_ref="dconf_gnome_remote_access_encryption_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="dconf_gnome_screensaver_idle_activation_enabled_action" question_ref="dconf_gnome_screensaver_idle_activation_enabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="dconf_gnome_screensaver_idle_activation_locked_action" question_ref="dconf_gnome_screensaver_idle_activation_locked_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="dconf_gnome_screensaver_idle_delay_action" question_ref="dconf_gnome_screensaver_idle_delay_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="dconf_gnome_screensaver_lock_delay_action" question_ref="dconf_gnome_screensaver_lock_delay_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="dconf_gnome_screensaver_lock_enabled_action" question_ref="dconf_gnome_screensaver_lock_enabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="dconf_gnome_screensaver_lock_locked_action" question_ref="dconf_gnome_screensaver_lock_locked_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="dconf_gnome_screensaver_mode_blank_action" question_ref="dconf_gnome_screensaver_mode_blank_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="dconf_gnome_screensaver_user_info_action" question_ref="dconf_gnome_screensaver_user_info_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="dconf_gnome_screensaver_user_locks_action" question_ref="dconf_gnome_screensaver_user_locks_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="dconf_gnome_session_idle_user_locks_action" question_ref="dconf_gnome_session_idle_user_locks_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="dconf_gnome_disable_ctrlaltdel_reboot_action" question_ref="dconf_gnome_disable_ctrlaltdel_reboot_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="dconf_gnome_disable_user_admin_action" question_ref="dconf_gnome_disable_user_admin_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_glibc_installed_action" question_ref="package_glibc_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_uuidd_installed_action" question_ref="package_uuidd_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_authorized_local_users_sidadm_orasid_action" question_ref="accounts_authorized_local_users_sidadm_orasid_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_sudo_installed_action" question_ref="package_sudo_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sudo_add_env_reset_action" question_ref="sudo_add_env_reset_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sudo_add_ignore_dot_action" question_ref="sudo_add_ignore_dot_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sudo_add_noexec_action" question_ref="sudo_add_noexec_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sudo_add_passwd_timeout_action" question_ref="sudo_add_passwd_timeout_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sudo_add_requiretty_action" question_ref="sudo_add_requiretty_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sudo_add_umask_action" question_ref="sudo_add_umask_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sudo_add_use_pty_action" question_ref="sudo_add_use_pty_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sudo_custom_logfile_action" question_ref="sudo_custom_logfile_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sudo_dedicated_group_action" question_ref="sudo_dedicated_group_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sudo_remove_no_authenticate_action" question_ref="sudo_remove_no_authenticate_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sudo_remove_nopasswd_action" question_ref="sudo_remove_nopasswd_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sudo_require_authentication_action" question_ref="sudo_require_authentication_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sudo_require_reauthentication_action" question_ref="sudo_require_reauthentication_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sudo_restrict_privilege_elevation_to_authorized_action" question_ref="sudo_restrict_privilege_elevation_to_authorized_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sudo_vdsm_nopasswd_action" question_ref="sudo_vdsm_nopasswd_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sudoers_explicit_command_args_action" question_ref="sudoers_explicit_command_args_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sudoers_no_command_negation_action" question_ref="sudoers_no_command_negation_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sudoers_no_root_target_action" question_ref="sudoers_no_root_target_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sudoers_validate_passwd_action" question_ref="sudoers_validate_passwd_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_binutils_installed_action" question_ref="package_binutils_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_cryptsetup-luks_installed_action" question_ref="package_cryptsetup-luks_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_gnutls-utils_installed_action" question_ref="package_gnutls-utils_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_libcap-ng-utils_installed_action" question_ref="package_libcap-ng-utils_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_nss-tools_installed_action" question_ref="package_nss-tools_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_openscap-scanner_installed_action" question_ref="package_openscap-scanner_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_rear_installed_action" question_ref="package_rear_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_rng-tools_installed_action" question_ref="package_rng-tools_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_scap-security-guide_installed_action" question_ref="package_scap-security-guide_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_tar_installed_action" question_ref="package_tar_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_vim_installed_action" question_ref="package_vim_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_abrt-addon-ccpp_removed_action" question_ref="package_abrt-addon-ccpp_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_abrt-addon-kerneloops_removed_action" question_ref="package_abrt-addon-kerneloops_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_abrt-addon-python_removed_action" question_ref="package_abrt-addon-python_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_abrt-cli_removed_action" question_ref="package_abrt-cli_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_abrt-plugin-logger_removed_action" question_ref="package_abrt-plugin-logger_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_abrt-plugin-rhtsupport_removed_action" question_ref="package_abrt-plugin-rhtsupport_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_abrt-plugin-sosreport_removed_action" question_ref="package_abrt-plugin-sosreport_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_geolite2-city_removed_action" question_ref="package_geolite2-city_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_geolite2-country_removed_action" question_ref="package_geolite2-country_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_gssproxy_removed_action" question_ref="package_gssproxy_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_iprutils_removed_action" question_ref="package_iprutils_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_krb5-workstation_removed_action" question_ref="package_krb5-workstation_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_tuned_removed_action" question_ref="package_tuned_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="clean_components_post_updating_action" question_ref="clean_components_post_updating_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="ensure_gpgcheck_globally_activated_action" question_ref="ensure_gpgcheck_globally_activated_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="ensure_gpgcheck_local_packages_action" question_ref="ensure_gpgcheck_local_packages_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="ensure_gpgcheck_never_disabled_action" question_ref="ensure_gpgcheck_never_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="ensure_gpgcheck_repo_metadata_action" question_ref="ensure_gpgcheck_repo_metadata_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="ensure_oracle_gpgkey_installed_action" question_ref="ensure_oracle_gpgkey_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="banner_etc_issue_action" question_ref="banner_etc_issue_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="banner_etc_motd_action" question_ref="banner_etc_motd_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_groupowner_etc_issue_action" question_ref="file_groupowner_etc_issue_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_groupowner_etc_motd_action" question_ref="file_groupowner_etc_motd_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_owner_etc_issue_action" question_ref="file_owner_etc_issue_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_owner_etc_motd_action" question_ref="file_owner_etc_motd_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_permissions_etc_issue_action" question_ref="file_permissions_etc_issue_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_permissions_etc_motd_action" question_ref="file_permissions_etc_motd_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="dconf_gnome_banner_enabled_action" question_ref="dconf_gnome_banner_enabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="dconf_gnome_login_banner_text_action" question_ref="dconf_gnome_login_banner_text_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="display_login_attempts_action" question_ref="display_login_attempts_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="enable_pam_namespace_action" question_ref="enable_pam_namespace_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_password_pam_pwhistory_remember_password_auth_action" question_ref="accounts_password_pam_pwhistory_remember_password_auth_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_password_pam_pwhistory_remember_system_auth_action" question_ref="accounts_password_pam_pwhistory_remember_system_auth_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_password_pam_unix_remember_action" question_ref="accounts_password_pam_unix_remember_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_passwords_pam_faillock_deny_action" question_ref="accounts_passwords_pam_faillock_deny_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_passwords_pam_faillock_deny_root_action" question_ref="accounts_passwords_pam_faillock_deny_root_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_passwords_pam_faillock_interval_action" question_ref="accounts_passwords_pam_faillock_interval_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_passwords_pam_faillock_unlock_time_action" question_ref="accounts_passwords_pam_faillock_unlock_time_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_password_pam_dcredit_action" question_ref="accounts_password_pam_dcredit_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_password_pam_difok_action" question_ref="accounts_password_pam_difok_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_password_pam_lcredit_action" question_ref="accounts_password_pam_lcredit_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_password_pam_maxclassrepeat_action" question_ref="accounts_password_pam_maxclassrepeat_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_password_pam_maxrepeat_action" question_ref="accounts_password_pam_maxrepeat_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_password_pam_minclass_action" question_ref="accounts_password_pam_minclass_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_password_pam_minlen_action" question_ref="accounts_password_pam_minlen_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_password_pam_ocredit_action" question_ref="accounts_password_pam_ocredit_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_password_pam_retry_action" question_ref="accounts_password_pam_retry_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_password_pam_ucredit_action" question_ref="accounts_password_pam_ucredit_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="set_password_hashing_algorithm_libuserconf_action" question_ref="set_password_hashing_algorithm_libuserconf_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="set_password_hashing_algorithm_logindefs_action" question_ref="set_password_hashing_algorithm_logindefs_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="set_password_hashing_algorithm_systemauth_action" question_ref="set_password_hashing_algorithm_systemauth_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_debug-shell_disabled_action" question_ref="service_debug-shell_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="disable_ctrlaltdel_burstaction_action" question_ref="disable_ctrlaltdel_burstaction_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="disable_ctrlaltdel_reboot_action" question_ref="disable_ctrlaltdel_reboot_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="grub2_disable_interactive_boot_action" question_ref="grub2_disable_interactive_boot_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="require_emergency_target_auth_action" question_ref="require_emergency_target_auth_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="require_singleuser_auth_action" question_ref="require_singleuser_auth_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_screen_installed_action" question_ref="package_screen_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_opensc_installed_action" question_ref="package_opensc_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_pcsc-lite_installed_action" question_ref="package_pcsc-lite_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="install_smartcard_packages_action" question_ref="install_smartcard_packages_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_pcscd_enabled_action" question_ref="service_pcscd_enabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="configure_opensc_card_drivers_action" question_ref="configure_opensc_card_drivers_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="configure_opensc_nss_db_action" question_ref="configure_opensc_nss_db_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="force_opensc_card_drivers_action" question_ref="force_opensc_card_drivers_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="smartcard_auth_action" question_ref="smartcard_auth_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="smartcard_configure_cert_checking_action" question_ref="smartcard_configure_cert_checking_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="account_unique_id_action" question_ref="account_unique_id_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_authorized_local_users_action" question_ref="accounts_authorized_local_users_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="account_disable_post_pw_expiration_action" question_ref="account_disable_post_pw_expiration_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="account_unique_name_action" question_ref="account_unique_name_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="account_use_centralized_automated_auth_action" question_ref="account_use_centralized_automated_auth_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_maximum_age_login_defs_action" question_ref="accounts_maximum_age_login_defs_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_minimum_age_login_defs_action" question_ref="accounts_minimum_age_login_defs_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_password_minlen_login_defs_action" question_ref="accounts_password_minlen_login_defs_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_password_set_max_life_existing_action" question_ref="accounts_password_set_max_life_existing_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_password_set_min_life_existing_action" question_ref="accounts_password_set_min_life_existing_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_password_warn_age_login_defs_action" question_ref="accounts_password_warn_age_login_defs_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_password_all_shadowed_action" question_ref="accounts_password_all_shadowed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_password_pam_unix_rounds_password_auth_action" question_ref="accounts_password_pam_unix_rounds_password_auth_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_password_pam_unix_rounds_system_auth_action" question_ref="accounts_password_pam_unix_rounds_system_auth_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="gid_passwd_group_same_action" question_ref="gid_passwd_group_same_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="no_empty_passwords_action" question_ref="no_empty_passwords_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="no_legacy_plus_entries_etc_group_action" question_ref="no_legacy_plus_entries_etc_group_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="no_legacy_plus_entries_etc_passwd_action" question_ref="no_legacy_plus_entries_etc_passwd_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="no_legacy_plus_entries_etc_shadow_action" question_ref="no_legacy_plus_entries_etc_shadow_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="no_netrc_files_action" question_ref="no_netrc_files_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_no_uid_except_zero_action" question_ref="accounts_no_uid_except_zero_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="no_direct_root_logins_action" question_ref="no_direct_root_logins_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="no_password_auth_for_systemaccounts_action" question_ref="no_password_auth_for_systemaccounts_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="no_root_webbrowsing_action" question_ref="no_root_webbrowsing_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="no_shelllogin_for_systemaccounts_action" question_ref="no_shelllogin_for_systemaccounts_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="restrict_serial_port_logins_action" question_ref="restrict_serial_port_logins_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="root_path_default_action" question_ref="root_path_default_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="securetty_root_login_console_only_action" question_ref="securetty_root_login_console_only_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="use_pam_wheel_for_su_action" question_ref="use_pam_wheel_for_su_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_have_homedir_login_defs_action" question_ref="accounts_have_homedir_login_defs_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_logon_fail_delay_action" question_ref="accounts_logon_fail_delay_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_max_concurrent_login_sessions_action" question_ref="accounts_max_concurrent_login_sessions_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_polyinstantiated_tmp_action" question_ref="accounts_polyinstantiated_tmp_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_polyinstantiated_var_tmp_action" question_ref="accounts_polyinstantiated_var_tmp_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_tmout_action" question_ref="accounts_tmout_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_user_dot_group_ownership_action" question_ref="accounts_user_dot_group_ownership_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_user_dot_no_world_writable_programs_action" question_ref="accounts_user_dot_no_world_writable_programs_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_user_dot_user_ownership_action" question_ref="accounts_user_dot_user_ownership_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_user_home_paths_only_action" question_ref="accounts_user_home_paths_only_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_user_interactive_home_directory_defined_action" question_ref="accounts_user_interactive_home_directory_defined_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_user_interactive_home_directory_exists_action" question_ref="accounts_user_interactive_home_directory_exists_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_users_home_files_groupownership_action" question_ref="accounts_users_home_files_groupownership_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_users_home_files_ownership_action" question_ref="accounts_users_home_files_ownership_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_users_home_files_permissions_action" question_ref="accounts_users_home_files_permissions_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_groupownership_home_directories_action" question_ref="file_groupownership_home_directories_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_ownership_home_directories_action" question_ref="file_ownership_home_directories_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_permission_user_init_files_action" question_ref="file_permission_user_init_files_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_permissions_home_directories_action" question_ref="file_permissions_home_directories_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_permissions_home_dirs_action" question_ref="file_permissions_home_dirs_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_root_path_dirs_no_write_action" question_ref="accounts_root_path_dirs_no_write_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_umask_etc_bashrc_action" question_ref="accounts_umask_etc_bashrc_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_umask_etc_csh_cshrc_action" question_ref="accounts_umask_etc_csh_cshrc_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_umask_etc_login_defs_action" question_ref="accounts_umask_etc_login_defs_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_umask_etc_profile_action" question_ref="accounts_umask_etc_profile_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="accounts_umask_interactive_users_action" question_ref="accounts_umask_interactive_users_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_audispd-plugins_installed_action" question_ref="package_audispd-plugins_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_audit-audispd-plugins_installed_action" question_ref="package_audit-audispd-plugins_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_audit_installed_action" question_ref="package_audit_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_auditd_enabled_action" question_ref="service_auditd_enabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="grub2_audit_argument_action" question_ref="grub2_audit_argument_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="grub2_audit_backlog_limit_argument_action" question_ref="grub2_audit_backlog_limit_argument_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_etc_group_open_action" question_ref="audit_rules_etc_group_open_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_etc_group_open_by_handle_at_action" question_ref="audit_rules_etc_group_open_by_handle_at_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_etc_group_openat_action" question_ref="audit_rules_etc_group_openat_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_etc_gshadow_open_action" question_ref="audit_rules_etc_gshadow_open_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_etc_gshadow_open_by_handle_at_action" question_ref="audit_rules_etc_gshadow_open_by_handle_at_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_etc_gshadow_openat_action" question_ref="audit_rules_etc_gshadow_openat_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_etc_passwd_open_action" question_ref="audit_rules_etc_passwd_open_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_etc_passwd_open_by_handle_at_action" question_ref="audit_rules_etc_passwd_open_by_handle_at_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_etc_passwd_openat_action" question_ref="audit_rules_etc_passwd_openat_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_etc_shadow_open_action" question_ref="audit_rules_etc_shadow_open_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_etc_shadow_open_by_handle_at_action" question_ref="audit_rules_etc_shadow_open_by_handle_at_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_etc_shadow_openat_action" question_ref="audit_rules_etc_shadow_openat_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_mac_modification_action" question_ref="audit_rules_mac_modification_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_media_export_action" question_ref="audit_rules_media_export_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_networkconfig_modification_action" question_ref="audit_rules_networkconfig_modification_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_sysadmin_actions_action" question_ref="audit_rules_sysadmin_actions_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_system_shutdown_action" question_ref="audit_rules_system_shutdown_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_usergroup_modification_action" question_ref="audit_rules_usergroup_modification_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_usergroup_modification_group_action" question_ref="audit_rules_usergroup_modification_group_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_usergroup_modification_gshadow_action" question_ref="audit_rules_usergroup_modification_gshadow_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_usergroup_modification_opasswd_action" question_ref="audit_rules_usergroup_modification_opasswd_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_usergroup_modification_passwd_action" question_ref="audit_rules_usergroup_modification_passwd_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_usergroup_modification_shadow_action" question_ref="audit_rules_usergroup_modification_shadow_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="directory_access_var_log_audit_action" question_ref="directory_access_var_log_audit_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="directory_permissions_var_log_audit_action" question_ref="directory_permissions_var_log_audit_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_ownership_var_log_audit_action" question_ref="file_ownership_var_log_audit_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_permissions_var_log_audit_action" question_ref="file_permissions_var_log_audit_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_dac_modification_chmod_action" question_ref="audit_rules_dac_modification_chmod_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_dac_modification_chown_action" question_ref="audit_rules_dac_modification_chown_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_dac_modification_fchmod_action" question_ref="audit_rules_dac_modification_fchmod_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_dac_modification_fchmodat_action" question_ref="audit_rules_dac_modification_fchmodat_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_dac_modification_fchown_action" question_ref="audit_rules_dac_modification_fchown_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_dac_modification_fchownat_action" question_ref="audit_rules_dac_modification_fchownat_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_dac_modification_fremovexattr_action" question_ref="audit_rules_dac_modification_fremovexattr_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_dac_modification_fsetxattr_action" question_ref="audit_rules_dac_modification_fsetxattr_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_dac_modification_lchown_action" question_ref="audit_rules_dac_modification_lchown_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_dac_modification_lremovexattr_action" question_ref="audit_rules_dac_modification_lremovexattr_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_dac_modification_lsetxattr_action" question_ref="audit_rules_dac_modification_lsetxattr_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_dac_modification_removexattr_action" question_ref="audit_rules_dac_modification_removexattr_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_dac_modification_setxattr_action" question_ref="audit_rules_dac_modification_setxattr_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_dac_modification_umount_action" question_ref="audit_rules_dac_modification_umount_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_dac_modification_umount2_action" question_ref="audit_rules_dac_modification_umount2_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_execution_chcon_action" question_ref="audit_rules_execution_chcon_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_execution_restorecon_action" question_ref="audit_rules_execution_restorecon_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_execution_semanage_action" question_ref="audit_rules_execution_semanage_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_execution_setfiles_action" question_ref="audit_rules_execution_setfiles_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_execution_setsebool_action" question_ref="audit_rules_execution_setsebool_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_execution_seunshare_action" question_ref="audit_rules_execution_seunshare_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_file_deletion_events_action" question_ref="audit_rules_file_deletion_events_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_file_deletion_events_rename_action" question_ref="audit_rules_file_deletion_events_rename_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_file_deletion_events_renameat_action" question_ref="audit_rules_file_deletion_events_renameat_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_file_deletion_events_rmdir_action" question_ref="audit_rules_file_deletion_events_rmdir_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_file_deletion_events_unlink_action" question_ref="audit_rules_file_deletion_events_unlink_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_file_deletion_events_unlinkat_action" question_ref="audit_rules_file_deletion_events_unlinkat_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_successful_file_modification_chmod_action" question_ref="audit_rules_successful_file_modification_chmod_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_successful_file_modification_chown_action" question_ref="audit_rules_successful_file_modification_chown_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_successful_file_modification_creat_action" question_ref="audit_rules_successful_file_modification_creat_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_successful_file_modification_fchmod_action" question_ref="audit_rules_successful_file_modification_fchmod_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_successful_file_modification_fchmodat_action" question_ref="audit_rules_successful_file_modification_fchmodat_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_successful_file_modification_fchown_action" question_ref="audit_rules_successful_file_modification_fchown_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_successful_file_modification_fchownat_action" question_ref="audit_rules_successful_file_modification_fchownat_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_successful_file_modification_fremovexattr_action" question_ref="audit_rules_successful_file_modification_fremovexattr_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_successful_file_modification_fsetxattr_action" question_ref="audit_rules_successful_file_modification_fsetxattr_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_successful_file_modification_ftruncate_action" question_ref="audit_rules_successful_file_modification_ftruncate_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_successful_file_modification_lchown_action" question_ref="audit_rules_successful_file_modification_lchown_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_successful_file_modification_lremovexattr_action" question_ref="audit_rules_successful_file_modification_lremovexattr_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_successful_file_modification_lsetxattr_action" question_ref="audit_rules_successful_file_modification_lsetxattr_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_successful_file_modification_open_action" question_ref="audit_rules_successful_file_modification_open_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_successful_file_modification_open_by_handle_at_action" question_ref="audit_rules_successful_file_modification_open_by_handle_at_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_successful_file_modification_open_by_handle_at_o_creat_action" question_ref="audit_rules_successful_file_modification_open_by_handle_at_o_creat_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_successful_file_modification_open_by_handle_at_o_trunc_write_action" question_ref="audit_rules_successful_file_modification_open_by_handle_at_o_trunc_write_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_successful_file_modification_open_o_creat_action" question_ref="audit_rules_successful_file_modification_open_o_creat_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_successful_file_modification_open_o_trunc_write_action" question_ref="audit_rules_successful_file_modification_open_o_trunc_write_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_successful_file_modification_openat_action" question_ref="audit_rules_successful_file_modification_openat_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_successful_file_modification_openat_o_creat_action" question_ref="audit_rules_successful_file_modification_openat_o_creat_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_successful_file_modification_openat_o_trunc_write_action" question_ref="audit_rules_successful_file_modification_openat_o_trunc_write_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_successful_file_modification_removexattr_action" question_ref="audit_rules_successful_file_modification_removexattr_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_successful_file_modification_rename_action" question_ref="audit_rules_successful_file_modification_rename_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_successful_file_modification_renameat_action" question_ref="audit_rules_successful_file_modification_renameat_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_successful_file_modification_setxattr_action" question_ref="audit_rules_successful_file_modification_setxattr_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_successful_file_modification_truncate_action" question_ref="audit_rules_successful_file_modification_truncate_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_successful_file_modification_unlink_action" question_ref="audit_rules_successful_file_modification_unlink_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_successful_file_modification_unlinkat_action" question_ref="audit_rules_successful_file_modification_unlinkat_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_action" question_ref="audit_rules_unsuccessful_file_modification_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_chmod_action" question_ref="audit_rules_unsuccessful_file_modification_chmod_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_chown_action" question_ref="audit_rules_unsuccessful_file_modification_chown_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_creat_action" question_ref="audit_rules_unsuccessful_file_modification_creat_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_fchmod_action" question_ref="audit_rules_unsuccessful_file_modification_fchmod_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_fchmodat_action" question_ref="audit_rules_unsuccessful_file_modification_fchmodat_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_fchown_action" question_ref="audit_rules_unsuccessful_file_modification_fchown_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_fchownat_action" question_ref="audit_rules_unsuccessful_file_modification_fchownat_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_fremovexattr_action" question_ref="audit_rules_unsuccessful_file_modification_fremovexattr_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_fsetxattr_action" question_ref="audit_rules_unsuccessful_file_modification_fsetxattr_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_ftruncate_action" question_ref="audit_rules_unsuccessful_file_modification_ftruncate_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_lchown_action" question_ref="audit_rules_unsuccessful_file_modification_lchown_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_lremovexattr_action" question_ref="audit_rules_unsuccessful_file_modification_lremovexattr_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_lsetxattr_action" question_ref="audit_rules_unsuccessful_file_modification_lsetxattr_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_open_action" question_ref="audit_rules_unsuccessful_file_modification_open_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_open_by_handle_at_action" question_ref="audit_rules_unsuccessful_file_modification_open_by_handle_at_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_open_by_handle_at_o_creat_action" question_ref="audit_rules_unsuccessful_file_modification_open_by_handle_at_o_creat_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_open_by_handle_at_o_trunc_write_action" question_ref="audit_rules_unsuccessful_file_modification_open_by_handle_at_o_trunc_write_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_open_by_handle_at_rule_order_action" question_ref="audit_rules_unsuccessful_file_modification_open_by_handle_at_rule_order_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_open_o_creat_action" question_ref="audit_rules_unsuccessful_file_modification_open_o_creat_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_open_o_trunc_write_action" question_ref="audit_rules_unsuccessful_file_modification_open_o_trunc_write_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_open_rule_order_action" question_ref="audit_rules_unsuccessful_file_modification_open_rule_order_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_openat_action" question_ref="audit_rules_unsuccessful_file_modification_openat_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_openat_o_creat_action" question_ref="audit_rules_unsuccessful_file_modification_openat_o_creat_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_openat_o_trunc_write_action" question_ref="audit_rules_unsuccessful_file_modification_openat_o_trunc_write_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_openat_rule_order_action" question_ref="audit_rules_unsuccessful_file_modification_openat_rule_order_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_removexattr_action" question_ref="audit_rules_unsuccessful_file_modification_removexattr_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_rename_action" question_ref="audit_rules_unsuccessful_file_modification_rename_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_renameat_action" question_ref="audit_rules_unsuccessful_file_modification_renameat_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_setxattr_action" question_ref="audit_rules_unsuccessful_file_modification_setxattr_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_truncate_action" question_ref="audit_rules_unsuccessful_file_modification_truncate_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_unlink_action" question_ref="audit_rules_unsuccessful_file_modification_unlink_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_unsuccessful_file_modification_unlinkat_action" question_ref="audit_rules_unsuccessful_file_modification_unlinkat_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_kernel_module_loading_action" question_ref="audit_rules_kernel_module_loading_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_kernel_module_loading_delete_action" question_ref="audit_rules_kernel_module_loading_delete_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_kernel_module_loading_finit_action" question_ref="audit_rules_kernel_module_loading_finit_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_kernel_module_loading_init_action" question_ref="audit_rules_kernel_module_loading_init_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_login_events_faillock_action" question_ref="audit_rules_login_events_faillock_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_login_events_lastlog_action" question_ref="audit_rules_login_events_lastlog_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_login_events_tallylog_action" question_ref="audit_rules_login_events_tallylog_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_privileged_commands_action" question_ref="audit_rules_privileged_commands_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_privileged_commands_at_action" question_ref="audit_rules_privileged_commands_at_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_privileged_commands_chage_action" question_ref="audit_rules_privileged_commands_chage_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_privileged_commands_chsh_action" question_ref="audit_rules_privileged_commands_chsh_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_privileged_commands_crontab_action" question_ref="audit_rules_privileged_commands_crontab_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_privileged_commands_gpasswd_action" question_ref="audit_rules_privileged_commands_gpasswd_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_privileged_commands_mount_action" question_ref="audit_rules_privileged_commands_mount_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_privileged_commands_newgidmap_action" question_ref="audit_rules_privileged_commands_newgidmap_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_privileged_commands_newgrp_action" question_ref="audit_rules_privileged_commands_newgrp_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_privileged_commands_newuidmap_action" question_ref="audit_rules_privileged_commands_newuidmap_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_privileged_commands_pam_timestamp_check_action" question_ref="audit_rules_privileged_commands_pam_timestamp_check_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_privileged_commands_passwd_action" question_ref="audit_rules_privileged_commands_passwd_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_privileged_commands_postdrop_action" question_ref="audit_rules_privileged_commands_postdrop_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_privileged_commands_postqueue_action" question_ref="audit_rules_privileged_commands_postqueue_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_privileged_commands_pt_chown_action" question_ref="audit_rules_privileged_commands_pt_chown_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_privileged_commands_ssh_keysign_action" question_ref="audit_rules_privileged_commands_ssh_keysign_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_privileged_commands_su_action" question_ref="audit_rules_privileged_commands_su_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_privileged_commands_sudo_action" question_ref="audit_rules_privileged_commands_sudo_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_privileged_commands_sudoedit_action" question_ref="audit_rules_privileged_commands_sudoedit_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_privileged_commands_umount_action" question_ref="audit_rules_privileged_commands_umount_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_privileged_commands_unix_chkpwd_action" question_ref="audit_rules_privileged_commands_unix_chkpwd_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_privileged_commands_userhelper_action" question_ref="audit_rules_privileged_commands_userhelper_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_privileged_commands_usernetctl_action" question_ref="audit_rules_privileged_commands_usernetctl_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_time_adjtimex_action" question_ref="audit_rules_time_adjtimex_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_time_clock_settime_action" question_ref="audit_rules_time_clock_settime_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_time_settimeofday_action" question_ref="audit_rules_time_settimeofday_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_time_stime_action" question_ref="audit_rules_time_stime_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_time_watch_localtime_action" question_ref="audit_rules_time_watch_localtime_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="auditd_audispd_configure_remote_server_action" question_ref="auditd_audispd_configure_remote_server_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="auditd_audispd_disk_full_action_action" question_ref="auditd_audispd_disk_full_action_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="auditd_audispd_encrypt_sent_records_action" question_ref="auditd_audispd_encrypt_sent_records_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="auditd_audispd_network_failure_action_action" question_ref="auditd_audispd_network_failure_action_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="auditd_audispd_syslog_plugin_activated_action" question_ref="auditd_audispd_syslog_plugin_activated_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="auditd_data_disk_error_action_action" question_ref="auditd_data_disk_error_action_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="auditd_data_disk_full_action_action" question_ref="auditd_data_disk_full_action_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="auditd_data_retention_action_mail_acct_action" question_ref="auditd_data_retention_action_mail_acct_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="auditd_data_retention_admin_space_left_action_action" question_ref="auditd_data_retention_admin_space_left_action_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="auditd_data_retention_flush_action" question_ref="auditd_data_retention_flush_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="auditd_data_retention_max_log_file_action" question_ref="auditd_data_retention_max_log_file_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="auditd_data_retention_max_log_file_action_action" question_ref="auditd_data_retention_max_log_file_action_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="auditd_data_retention_num_logs_action" question_ref="auditd_data_retention_num_logs_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="auditd_data_retention_space_left_action" question_ref="auditd_data_retention_space_left_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="auditd_data_retention_space_left_action_action" question_ref="auditd_data_retention_space_left_action_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="auditd_freq_action" question_ref="auditd_freq_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="auditd_local_events_action" question_ref="auditd_local_events_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="auditd_log_format_action" question_ref="auditd_log_format_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="auditd_name_format_action" question_ref="auditd_name_format_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="auditd_overflow_action_action" question_ref="auditd_overflow_action_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="auditd_write_logs_action" question_ref="auditd_write_logs_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="audit_rules_for_ospp_action" question_ref="audit_rules_for_ospp_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="grub2_vsyscall_argument_action" question_ref="grub2_vsyscall_argument_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_groupowner_grub2_cfg_action" question_ref="file_groupowner_grub2_cfg_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_owner_grub2_cfg_action" question_ref="file_owner_grub2_cfg_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_permissions_grub2_cfg_action" question_ref="file_permissions_grub2_cfg_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="grub2_admin_username_action" question_ref="grub2_admin_username_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="grub2_no_removeable_media_action" question_ref="grub2_no_removeable_media_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="grub2_password_action" question_ref="grub2_password_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_groupowner_efi_grub2_cfg_action" question_ref="file_groupowner_efi_grub2_cfg_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_owner_efi_grub2_cfg_action" question_ref="file_owner_efi_grub2_cfg_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_permissions_efi_grub2_cfg_action" question_ref="file_permissions_efi_grub2_cfg_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="grub2_uefi_admin_username_action" question_ref="grub2_uefi_admin_username_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="grub2_uefi_password_action" question_ref="grub2_uefi_password_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="uefi_no_removeable_media_action" question_ref="uefi_no_removeable_media_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_rsyslog_installed_action" question_ref="package_rsyslog_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_rsyslog_enabled_action" question_ref="service_rsyslog_enabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="rsyslog_cron_logging_action" question_ref="rsyslog_cron_logging_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="rsyslog_encrypt_offload_actionsendstreamdriverauthmode_action" question_ref="rsyslog_encrypt_offload_actionsendstreamdriverauthmode_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="rsyslog_encrypt_offload_actionsendstreamdrivermode_action" question_ref="rsyslog_encrypt_offload_actionsendstreamdrivermode_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="rsyslog_encrypt_offload_defaultnetstreamdriver_action" question_ref="rsyslog_encrypt_offload_defaultnetstreamdriver_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="rsyslog_files_groupownership_action" question_ref="rsyslog_files_groupownership_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="rsyslog_files_ownership_action" question_ref="rsyslog_files_ownership_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="rsyslog_files_permissions_action" question_ref="rsyslog_files_permissions_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="ensure_logrotate_activated_action" question_ref="ensure_logrotate_activated_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_syslogng_installed_action" question_ref="package_syslogng_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_syslogng_enabled_action" question_ref="service_syslogng_enabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="rsyslog_nolisten_action" question_ref="rsyslog_nolisten_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="rsyslog_remote_loghost_action" question_ref="rsyslog_remote_loghost_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="network_configure_name_resolution_action" question_ref="network_configure_name_resolution_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="network_sniffer_disabled_action" question_ref="network_sniffer_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_firewalld_installed_action" question_ref="package_firewalld_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_firewalld_enabled_action" question_ref="service_firewalld_enabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="configure_firewalld_ports_action" question_ref="configure_firewalld_ports_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="configure_firewalld_rate_limiting_action" question_ref="configure_firewalld_rate_limiting_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="set_firewalld_default_zone_action" question_ref="set_firewalld_default_zone_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_libreswan_installed_action" question_ref="package_libreswan_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="libreswan_approved_tunnels_action" question_ref="libreswan_approved_tunnels_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_iptables_installed_action" question_ref="package_iptables_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_ip6tables_enabled_action" question_ref="service_ip6tables_enabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_iptables_enabled_action" question_ref="service_iptables_enabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="set_ip6tables_default_rule_action" question_ref="set_ip6tables_default_rule_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="set_iptables_default_rule_action" question_ref="set_iptables_default_rule_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="set_iptables_default_rule_forward_action" question_ref="set_iptables_default_rule_forward_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="grub2_ipv6_disable_argument_action" question_ref="grub2_ipv6_disable_argument_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="kernel_module_ipv6_option_disabled_action" question_ref="kernel_module_ipv6_option_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv6_conf_all_disable_ipv6_action" question_ref="sysctl_net_ipv6_conf_all_disable_ipv6_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv6_conf_default_disable_ipv6_action" question_ref="sysctl_net_ipv6_conf_default_disable_ipv6_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv6_conf_all_accept_ra_action" question_ref="sysctl_net_ipv6_conf_all_accept_ra_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv6_conf_all_accept_ra_defrtr_action" question_ref="sysctl_net_ipv6_conf_all_accept_ra_defrtr_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv6_conf_all_accept_ra_pinfo_action" question_ref="sysctl_net_ipv6_conf_all_accept_ra_pinfo_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv6_conf_all_accept_ra_rtr_pref_action" question_ref="sysctl_net_ipv6_conf_all_accept_ra_rtr_pref_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv6_conf_all_accept_redirects_action" question_ref="sysctl_net_ipv6_conf_all_accept_redirects_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv6_conf_all_accept_source_route_action" question_ref="sysctl_net_ipv6_conf_all_accept_source_route_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv6_conf_all_autoconf_action" question_ref="sysctl_net_ipv6_conf_all_autoconf_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv6_conf_all_forwarding_action" question_ref="sysctl_net_ipv6_conf_all_forwarding_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv6_conf_all_max_addresses_action" question_ref="sysctl_net_ipv6_conf_all_max_addresses_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv6_conf_all_router_solicitations_action" question_ref="sysctl_net_ipv6_conf_all_router_solicitations_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv6_conf_default_accept_ra_action" question_ref="sysctl_net_ipv6_conf_default_accept_ra_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv6_conf_default_accept_ra_defrtr_action" question_ref="sysctl_net_ipv6_conf_default_accept_ra_defrtr_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv6_conf_default_accept_ra_pinfo_action" question_ref="sysctl_net_ipv6_conf_default_accept_ra_pinfo_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv6_conf_default_accept_ra_rtr_pref_action" question_ref="sysctl_net_ipv6_conf_default_accept_ra_rtr_pref_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv6_conf_default_accept_redirects_action" question_ref="sysctl_net_ipv6_conf_default_accept_redirects_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv6_conf_default_accept_source_route_action" question_ref="sysctl_net_ipv6_conf_default_accept_source_route_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv6_conf_default_autoconf_action" question_ref="sysctl_net_ipv6_conf_default_autoconf_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv6_conf_default_max_addresses_action" question_ref="sysctl_net_ipv6_conf_default_max_addresses_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv6_conf_default_router_solicitations_action" question_ref="sysctl_net_ipv6_conf_default_router_solicitations_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv4_conf_all_accept_redirects_action" question_ref="sysctl_net_ipv4_conf_all_accept_redirects_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv4_conf_all_accept_source_route_action" question_ref="sysctl_net_ipv4_conf_all_accept_source_route_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv4_conf_all_log_martians_action" question_ref="sysctl_net_ipv4_conf_all_log_martians_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv4_conf_all_rp_filter_action" question_ref="sysctl_net_ipv4_conf_all_rp_filter_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv4_conf_all_secure_redirects_action" question_ref="sysctl_net_ipv4_conf_all_secure_redirects_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv4_conf_default_accept_redirects_action" question_ref="sysctl_net_ipv4_conf_default_accept_redirects_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv4_conf_default_accept_source_route_action" question_ref="sysctl_net_ipv4_conf_default_accept_source_route_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv4_conf_default_log_martians_action" question_ref="sysctl_net_ipv4_conf_default_log_martians_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv4_conf_default_rp_filter_action" question_ref="sysctl_net_ipv4_conf_default_rp_filter_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv4_conf_default_secure_redirects_action" question_ref="sysctl_net_ipv4_conf_default_secure_redirects_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv4_icmp_echo_ignore_broadcasts_action" question_ref="sysctl_net_ipv4_icmp_echo_ignore_broadcasts_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv4_icmp_ignore_bogus_error_responses_action" question_ref="sysctl_net_ipv4_icmp_ignore_bogus_error_responses_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv4_ip_local_port_range_action" question_ref="sysctl_net_ipv4_ip_local_port_range_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv4_tcp_invalid_ratelimit_action" question_ref="sysctl_net_ipv4_tcp_invalid_ratelimit_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv4_tcp_rfc1337_action" question_ref="sysctl_net_ipv4_tcp_rfc1337_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv4_tcp_syncookies_action" question_ref="sysctl_net_ipv4_tcp_syncookies_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv4_conf_all_send_redirects_action" question_ref="sysctl_net_ipv4_conf_all_send_redirects_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv4_conf_default_send_redirects_action" question_ref="sysctl_net_ipv4_conf_default_send_redirects_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_net_ipv4_ip_forward_action" question_ref="sysctl_net_ipv4_ip_forward_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="kernel_module_dccp_disabled_action" question_ref="kernel_module_dccp_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="kernel_module_rds_disabled_action" question_ref="kernel_module_rds_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="kernel_module_sctp_disabled_action" question_ref="kernel_module_sctp_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="kernel_module_tipc_disabled_action" question_ref="kernel_module_tipc_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="kernel_module_bluetooth_disabled_action" question_ref="kernel_module_bluetooth_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="wireless_disable_interfaces_action" question_ref="wireless_disable_interfaces_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="dir_perms_world_writable_root_owned_action" question_ref="dir_perms_world_writable_root_owned_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="dir_perms_world_writable_sticky_bits_action" question_ref="dir_perms_world_writable_sticky_bits_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="dir_perms_world_writable_system_owned_action" question_ref="dir_perms_world_writable_system_owned_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="dir_perms_world_writable_system_owned_group_action" question_ref="dir_perms_world_writable_system_owned_group_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_permissions_systemmap_action" question_ref="file_permissions_systemmap_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_permissions_unauthorized_sgid_action" question_ref="file_permissions_unauthorized_sgid_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_permissions_unauthorized_suid_action" question_ref="file_permissions_unauthorized_suid_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_permissions_unauthorized_world_writable_action" question_ref="file_permissions_unauthorized_world_writable_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_permissions_ungroupowned_action" question_ref="file_permissions_ungroupowned_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="no_files_unowned_by_user_action" question_ref="no_files_unowned_by_user_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_fs_protected_hardlinks_action" question_ref="sysctl_fs_protected_hardlinks_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_fs_protected_symlinks_action" question_ref="sysctl_fs_protected_symlinks_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_groupowner_backup_etc_group_action" question_ref="file_groupowner_backup_etc_group_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_groupowner_backup_etc_gshadow_action" question_ref="file_groupowner_backup_etc_gshadow_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_groupowner_backup_etc_passwd_action" question_ref="file_groupowner_backup_etc_passwd_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_groupowner_backup_etc_shadow_action" question_ref="file_groupowner_backup_etc_shadow_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_groupowner_etc_group_action" question_ref="file_groupowner_etc_group_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_groupowner_etc_gshadow_action" question_ref="file_groupowner_etc_gshadow_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_groupowner_etc_passwd_action" question_ref="file_groupowner_etc_passwd_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_groupowner_etc_shadow_action" question_ref="file_groupowner_etc_shadow_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_owner_backup_etc_group_action" question_ref="file_owner_backup_etc_group_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_owner_backup_etc_gshadow_action" question_ref="file_owner_backup_etc_gshadow_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_owner_backup_etc_passwd_action" question_ref="file_owner_backup_etc_passwd_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_owner_backup_etc_shadow_action" question_ref="file_owner_backup_etc_shadow_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_owner_etc_group_action" question_ref="file_owner_etc_group_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_owner_etc_gshadow_action" question_ref="file_owner_etc_gshadow_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_owner_etc_passwd_action" question_ref="file_owner_etc_passwd_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_owner_etc_shadow_action" question_ref="file_owner_etc_shadow_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_permissions_backup_etc_group_action" question_ref="file_permissions_backup_etc_group_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_permissions_backup_etc_gshadow_action" question_ref="file_permissions_backup_etc_gshadow_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_permissions_backup_etc_passwd_action" question_ref="file_permissions_backup_etc_passwd_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_permissions_backup_etc_shadow_action" question_ref="file_permissions_backup_etc_shadow_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_permissions_etc_group_action" question_ref="file_permissions_etc_group_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_permissions_etc_gshadow_action" question_ref="file_permissions_etc_gshadow_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_permissions_etc_passwd_action" question_ref="file_permissions_etc_passwd_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_permissions_etc_shadow_action" question_ref="file_permissions_etc_shadow_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_groupowner_var_log_action" question_ref="file_groupowner_var_log_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_groupowner_var_log_messages_action" question_ref="file_groupowner_var_log_messages_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_owner_var_log_action" question_ref="file_owner_var_log_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_owner_var_log_messages_action" question_ref="file_owner_var_log_messages_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_permissions_var_log_action" question_ref="file_permissions_var_log_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_permissions_var_log_messages_action" question_ref="file_permissions_var_log_messages_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="dir_ownership_library_dirs_action" question_ref="dir_ownership_library_dirs_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="dir_permissions_library_dirs_action" question_ref="dir_permissions_library_dirs_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_ownership_binary_dirs_action" question_ref="file_ownership_binary_dirs_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_ownership_library_dirs_action" question_ref="file_ownership_library_dirs_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_permissions_binary_dirs_action" question_ref="file_permissions_binary_dirs_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_permissions_library_dirs_action" question_ref="file_permissions_library_dirs_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_autofs_disabled_action" question_ref="service_autofs_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="kernel_module_cramfs_disabled_action" question_ref="kernel_module_cramfs_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="kernel_module_usb-storage_disabled_action" question_ref="kernel_module_usb-storage_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_boot_noauto_action" question_ref="mount_option_boot_noauto_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_boot_nodev_action" question_ref="mount_option_boot_nodev_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_boot_noexec_action" question_ref="mount_option_boot_noexec_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_boot_nosuid_action" question_ref="mount_option_boot_nosuid_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_dev_shm_nodev_action" question_ref="mount_option_dev_shm_nodev_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_dev_shm_noexec_action" question_ref="mount_option_dev_shm_noexec_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_dev_shm_nosuid_action" question_ref="mount_option_dev_shm_nosuid_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_home_nodev_action" question_ref="mount_option_home_nodev_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_home_noexec_action" question_ref="mount_option_home_noexec_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_home_nosuid_action" question_ref="mount_option_home_nosuid_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_nodev_nonroot_local_partitions_action" question_ref="mount_option_nodev_nonroot_local_partitions_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_noexec_removable_partitions_action" question_ref="mount_option_noexec_removable_partitions_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_opt_nosuid_action" question_ref="mount_option_opt_nosuid_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_srv_nosuid_action" question_ref="mount_option_srv_nosuid_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_tmp_nodev_action" question_ref="mount_option_tmp_nodev_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_tmp_noexec_action" question_ref="mount_option_tmp_noexec_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_tmp_nosuid_action" question_ref="mount_option_tmp_nosuid_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_var_log_audit_nodev_action" question_ref="mount_option_var_log_audit_nodev_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_var_log_audit_noexec_action" question_ref="mount_option_var_log_audit_noexec_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_var_log_audit_nosuid_action" question_ref="mount_option_var_log_audit_nosuid_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_var_log_nodev_action" question_ref="mount_option_var_log_nodev_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_var_log_noexec_action" question_ref="mount_option_var_log_noexec_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_var_log_nosuid_action" question_ref="mount_option_var_log_nosuid_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_var_nodev_action" question_ref="mount_option_var_nodev_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_var_noexec_action" question_ref="mount_option_var_noexec_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_var_nosuid_action" question_ref="mount_option_var_nosuid_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_var_tmp_nodev_action" question_ref="mount_option_var_tmp_nodev_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_var_tmp_noexec_action" question_ref="mount_option_var_tmp_noexec_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_var_tmp_nosuid_action" question_ref="mount_option_var_tmp_nosuid_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_kernel_dmesg_restrict_action" question_ref="sysctl_kernel_dmesg_restrict_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_kernel_kexec_load_disabled_action" question_ref="sysctl_kernel_kexec_load_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_kernel_modules_disabled_action" question_ref="sysctl_kernel_modules_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_kernel_perf_cpu_time_max_percent_action" question_ref="sysctl_kernel_perf_cpu_time_max_percent_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_kernel_perf_event_max_sample_rate_action" question_ref="sysctl_kernel_perf_event_max_sample_rate_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_kernel_perf_event_paranoid_action" question_ref="sysctl_kernel_perf_event_paranoid_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_kernel_pid_max_action" question_ref="sysctl_kernel_pid_max_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_kernel_sysrq_action" question_ref="sysctl_kernel_sysrq_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_kernel_yama_ptrace_scope_action" question_ref="sysctl_kernel_yama_ptrace_scope_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_vm_mmap_min_addr_action" question_ref="sysctl_vm_mmap_min_addr_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="coredump_disable_backtraces_action" question_ref="coredump_disable_backtraces_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="coredump_disable_storage_action" question_ref="coredump_disable_storage_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="disable_users_coredumps_action" question_ref="disable_users_coredumps_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_fs_suid_dumpable_action" question_ref="sysctl_fs_suid_dumpable_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_kernel_kptr_restrict_action" question_ref="sysctl_kernel_kptr_restrict_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sysctl_kernel_randomize_va_space_action" question_ref="sysctl_kernel_randomize_va_space_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="grub2_page_poison_argument_action" question_ref="grub2_page_poison_argument_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="grub2_slub_debug_argument_action" question_ref="grub2_slub_debug_argument_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_libselinux_installed_action" question_ref="package_libselinux_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_policycoreutils_installed_action" question_ref="package_policycoreutils_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_setroubleshoot-plugins_removed_action" question_ref="package_setroubleshoot-plugins_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_setroubleshoot-server_removed_action" question_ref="package_setroubleshoot-server_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="coreos_enable_selinux_kernel_argument_action" question_ref="coreos_enable_selinux_kernel_argument_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="grub2_enable_selinux_action" question_ref="grub2_enable_selinux_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="selinux_all_devicefiles_labeled_action" question_ref="selinux_all_devicefiles_labeled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="selinux_confinement_of_daemons_action" question_ref="selinux_confinement_of_daemons_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="selinux_policytype_action" question_ref="selinux_policytype_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="selinux_state_action" question_ref="selinux_state_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="selinux_user_login_roles_action" question_ref="selinux_user_login_roles_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sebool_polyinstantiation_enabled_action" question_ref="sebool_polyinstantiation_enabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sebool_secure_mode_insmod_action" question_ref="sebool_secure_mode_insmod_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sebool_selinuxuser_execheap_action" question_ref="sebool_selinuxuser_execheap_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sebool_selinuxuser_execmod_action" question_ref="sebool_selinuxuser_execmod_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sebool_selinuxuser_execstack_action" question_ref="sebool_selinuxuser_execstack_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sebool_ssh_sysadm_login_action" question_ref="sebool_ssh_sysadm_login_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_avahi-daemon_disabled_action" question_ref="service_avahi-daemon_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_abrt_removed_action" question_ref="package_abrt_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_abrtd_disabled_action" question_ref="service_abrtd_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_cockpit_disabled_action" question_ref="service_cockpit_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_kdump_disabled_action" question_ref="service_kdump_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_ntpdate_disabled_action" question_ref="service_ntpdate_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_oddjobd_disabled_action" question_ref="service_oddjobd_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_qpidd_disabled_action" question_ref="service_qpidd_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_rdisc_disabled_action" question_ref="service_rdisc_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_cron_enabled_action" question_ref="service_cron_enabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_crond_enabled_action" question_ref="service_crond_enabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_atd_disabled_action" question_ref="service_atd_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_groupowner_cron_allow_action" question_ref="file_groupowner_cron_allow_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_owner_cron_allow_action" question_ref="file_owner_cron_allow_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_dhcp_removed_action" question_ref="package_dhcp_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_bind_removed_action" question_ref="package_bind_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_vsftpd_removed_action" question_ref="package_vsftpd_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_krb5-server_removed_action" question_ref="package_krb5-server_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="kerberos_disable_no_keytab_action" question_ref="kerberos_disable_no_keytab_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_openldap-clients_removed_action" question_ref="package_openldap-clients_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_sendmail_removed_action" question_ref="package_sendmail_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_postfix_enabled_action" question_ref="service_postfix_enabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="postfix_client_configure_mail_alias_action" question_ref="postfix_client_configure_mail_alias_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="postfix_client_configure_relayhost_action" question_ref="postfix_client_configure_relayhost_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="postfix_network_listening_disabled_action" question_ref="postfix_network_listening_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="postfix_prevent_unrestricted_relay_action" question_ref="postfix_prevent_unrestricted_relay_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_nfs-utils_removed_action" question_ref="package_nfs-utils_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_krb_sec_remote_filesystems_action" question_ref="mount_option_krb_sec_remote_filesystems_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_noexec_remote_filesystems_action" question_ref="mount_option_noexec_remote_filesystems_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="mount_option_nosuid_remote_filesystems_action" question_ref="mount_option_nosuid_remote_filesystems_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="no_all_squash_exports_action" question_ref="no_all_squash_exports_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="use_kerberos_security_all_exports_action" question_ref="use_kerberos_security_all_exports_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_chrony_installed_action" question_ref="package_chrony_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_chronyd_enabled_action" question_ref="service_chronyd_enabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_chronyd_or_ntpd_enabled_action" question_ref="service_chronyd_or_ntpd_enabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_ntp_enabled_action" question_ref="service_ntp_enabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_ntpd_enabled_action" question_ref="service_ntpd_enabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="chronyd_or_ntpd_set_maxpoll_action" question_ref="chronyd_or_ntpd_set_maxpoll_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="chronyd_or_ntpd_specify_remote_server_action" question_ref="chronyd_or_ntpd_specify_remote_server_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="chronyd_specify_remote_server_action" question_ref="chronyd_specify_remote_server_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="ntpd_specify_remote_server_action" question_ref="ntpd_specify_remote_server_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_rsyncd_disabled_action" question_ref="service_rsyncd_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_xinetd_removed_action" question_ref="package_xinetd_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_xinetd_disabled_action" question_ref="service_xinetd_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="configure_etc_hosts_deny_action" question_ref="configure_etc_hosts_deny_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_groupowner_etc_hosts_allow_action" question_ref="file_groupowner_etc_hosts_allow_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_groupowner_etc_hosts_deny_action" question_ref="file_groupowner_etc_hosts_deny_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_owner_etc_hosts_allow_action" question_ref="file_owner_etc_hosts_allow_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_owner_etc_hosts_deny_action" question_ref="file_owner_etc_hosts_deny_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_permissions_etc_hosts_allow_action" question_ref="file_permissions_etc_hosts_allow_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_permissions_etc_hosts_deny_action" question_ref="file_permissions_etc_hosts_deny_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_ypbind_removed_action" question_ref="package_ypbind_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_ypserv_removed_action" question_ref="package_ypserv_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_ypbind_disabled_action" question_ref="service_ypbind_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_rsh-server_removed_action" question_ref="package_rsh-server_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_rsh_removed_action" question_ref="package_rsh_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_rexec_disabled_action" question_ref="service_rexec_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_rlogin_disabled_action" question_ref="service_rlogin_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_rsh_disabled_action" question_ref="service_rsh_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="no_host_based_files_action" question_ref="no_host_based_files_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="no_rsh_trust_files_action" question_ref="no_rsh_trust_files_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="no_user_host_based_files_action" question_ref="no_user_host_based_files_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_talk-server_removed_action" question_ref="package_talk-server_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_talk_removed_action" question_ref="package_talk_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_telnet-server_removed_action" question_ref="package_telnet-server_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_telnet_removed_action" question_ref="package_telnet_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_telnet_disabled_action" question_ref="service_telnet_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_tftp-server_removed_action" question_ref="package_tftp-server_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="tftpd_uses_secure_mode_action" question_ref="tftpd_uses_secure_mode_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_squid_removed_action" question_ref="package_squid_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_squid_disabled_action" question_ref="service_squid_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_freeradius_removed_action" question_ref="package_freeradius_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_quagga_removed_action" question_ref="package_quagga_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_zebra_disabled_action" question_ref="service_zebra_disabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_net-snmp_removed_action" question_ref="package_net-snmp_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="snmpd_not_default_password_action" question_ref="snmpd_not_default_password_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_openssh-server_installed_action" question_ref="package_openssh-server_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_openssh-server_removed_action" question_ref="package_openssh-server_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_sshd_enabled_action" question_ref="service_sshd_enabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_permissions_sshd_private_key_action" question_ref="file_permissions_sshd_private_key_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="file_permissions_sshd_pub_key_action" question_ref="file_permissions_sshd_pub_key_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="disable_host_auth_action" question_ref="disable_host_auth_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="firewalld_sshd_port_enabled_action" question_ref="firewalld_sshd_port_enabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_allow_only_protocol2_action" question_ref="sshd_allow_only_protocol2_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_disable_compression_action" question_ref="sshd_disable_compression_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_disable_empty_passwords_action" question_ref="sshd_disable_empty_passwords_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_disable_gssapi_auth_action" question_ref="sshd_disable_gssapi_auth_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_disable_kerb_auth_action" question_ref="sshd_disable_kerb_auth_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_disable_pubkey_auth_action" question_ref="sshd_disable_pubkey_auth_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_disable_rhosts_action" question_ref="sshd_disable_rhosts_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_disable_rhosts_rsa_action" question_ref="sshd_disable_rhosts_rsa_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_disable_root_login_action" question_ref="sshd_disable_root_login_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_disable_root_password_login_action" question_ref="sshd_disable_root_password_login_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_disable_tcp_forwarding_action" question_ref="sshd_disable_tcp_forwarding_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_disable_user_known_hosts_action" question_ref="sshd_disable_user_known_hosts_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_disable_x11_forwarding_action" question_ref="sshd_disable_x11_forwarding_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_do_not_permit_user_env_action" question_ref="sshd_do_not_permit_user_env_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_enable_gssapi_auth_action" question_ref="sshd_enable_gssapi_auth_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_enable_strictmodes_action" question_ref="sshd_enable_strictmodes_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_enable_warning_banner_action" question_ref="sshd_enable_warning_banner_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_enable_x11_forwarding_action" question_ref="sshd_enable_x11_forwarding_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_limit_user_access_action" question_ref="sshd_limit_user_access_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_print_last_log_action" question_ref="sshd_print_last_log_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_rekey_limit_action" question_ref="sshd_rekey_limit_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_set_idle_timeout_action" question_ref="sshd_set_idle_timeout_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_set_keepalive_action" question_ref="sshd_set_keepalive_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_set_keepalive_0_action" question_ref="sshd_set_keepalive_0_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_set_loglevel_info_action" question_ref="sshd_set_loglevel_info_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_set_loglevel_verbose_action" question_ref="sshd_set_loglevel_verbose_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_set_max_auth_tries_action" question_ref="sshd_set_max_auth_tries_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_set_max_sessions_action" question_ref="sshd_set_max_sessions_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_set_maxstartups_action" question_ref="sshd_set_maxstartups_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_use_approved_ciphers_action" question_ref="sshd_use_approved_ciphers_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_use_approved_ciphers_ordered_stig_action" question_ref="sshd_use_approved_ciphers_ordered_stig_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_use_approved_macs_action" question_ref="sshd_use_approved_macs_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_use_approved_macs_ordered_stig_action" question_ref="sshd_use_approved_macs_ordered_stig_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_use_priv_separation_action" question_ref="sshd_use_priv_separation_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_use_strong_ciphers_action" question_ref="sshd_use_strong_ciphers_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_use_strong_macs_action" question_ref="sshd_use_strong_macs_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sshd_x11_use_localhost_action" question_ref="sshd_x11_use_localhost_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_sssd-ipa_installed_action" question_ref="package_sssd-ipa_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_sssd_installed_action" question_ref="package_sssd_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="service_sssd_enabled_action" question_ref="service_sssd_enabled_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sssd_enable_pam_services_action" question_ref="sssd_enable_pam_services_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sssd_enable_smartcards_action" question_ref="sssd_enable_smartcards_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sssd_memcache_timeout_action" question_ref="sssd_memcache_timeout_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sssd_offline_cred_expiration_action" question_ref="sssd_offline_cred_expiration_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sssd_ldap_configure_tls_ca_action" question_ref="sssd_ldap_configure_tls_ca_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sssd_ldap_configure_tls_ca_dir_action" question_ref="sssd_ldap_configure_tls_ca_dir_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sssd_ldap_configure_tls_reqcert_action" question_ref="sssd_ldap_configure_tls_reqcert_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="sssd_ldap_start_tls_action" question_ref="sssd_ldap_start_tls_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_usbguard_installed_action" question_ref="package_usbguard_installed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="package_xorg-x11-server-common_removed_action" question_ref="package_xorg-x11-server-common_removed_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="xwindows_remove_packages_action" question_ref="xwindows_remove_packages_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
    <boolean_question_test_action id="xwindows_runlevel_target_action" question_ref="xwindows_runlevel_target_question">
      <when_true>
        <result>PASS</result>
      </when_true>
      <when_false>
        <result>FAIL</result>
      </when_false>
    </boolean_question_test_action>
  </test_actions>
  <questions>
    <boolean_question id="prefer_64bit_os_question">
      <question_text>To check if the installed Operating System is 64-bit, run the following command:
$ uname -m
The output should be one of the following: x86_64, aarch64, ppc64le or s390x.
If the output is i686 or i386 the operating system is 32-bit.
Check if the installed CPU supports 64-bit operating systems by running the following command:
$ lscpu | grep "CPU op-mode"
If the output contains 64bit, the CPU supports 64-bit operating systems.
      Is it the case that the installed operating sytem is 32-bit but the CPU supports operation in 64-bit?
      </question_text>
    </boolean_question>
    <boolean_question id="rpm_verify_hashes_question">
      <question_text>The following command will list which files on the system
have file hashes different from what is expected by the RPM database.
$ rpm -Va --noconfig | awk '$1 ~ /..5/ &amp;&amp; $2 != "c"'
      Is it the case that there is output?
      </question_text>
    </boolean_question>
    <boolean_question id="rpm_verify_ownership_question">
      <question_text>The following command will list which files on the system have ownership different from what
is expected by the RPM database:
$ rpm -Va | rpm -Va --nofiledigest | awk '{ if (substr($0,6,1)=="U" || substr($0,7,1)=="G") print $NF }'
      Is it the case that there is output?
      </question_text>
    </boolean_question>
    <boolean_question id="rpm_verify_permissions_question">
      <question_text>The following command will list which files on the system have permissions different from what
is expected by the RPM database:
$ rpm -Va | awk '{ if (substr($0,2,1)=="M") print $NF }'
      Is it the case that there is output?
      </question_text>
    </boolean_question>
    <boolean_question id="package_aide_installed_question">
      <question_text>Run the following command to determine if the aide package is installed: $ rpm -q aide
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="aide_build_database_question">
      <question_text>To find the location of the AIDE databse file, run the following command:
$ sudo ls -l DBDIR/database_file_name
      Is it the case that there is no database file?
      </question_text>
    </boolean_question>
    <boolean_question id="aide_periodic_cron_checking_question">
      <question_text>To determine that periodic AIDE execution has been scheduled, run the following command:
$ grep aide /etc/crontab
The output should return something similar to the following:

05 4 * * * root  --check


NOTE: The usage of special cron times, such as @daily or @weekly, is acceptable.
      Is it the case that there is no output?
      </question_text>
    </boolean_question>
    <boolean_question id="aide_scan_notification_question">
      <question_text>To determine that periodic AIDE execution has been scheduled, run the following command:
$ grep aide /etc/crontab
The output should return something similar to the following:
05 4 * * * root /usr/sbin/aide --check | /bin/mail -s "$(hostname) - AIDE Integrity Check" root@localhost
The email address that the notifications are sent to can be changed by overriding
.
      Is it the case that AIDE has not been configured or has not been configured to notify personnel of scan details?
      </question_text>
    </boolean_question>
    <boolean_question id="aide_use_fips_hashes_question">
      <question_text>To determine that AIDE is configured for FIPS 140-2 file hashing, run the following command:
$ grep sha512 /etc/aide.conf
Verify that the sha512 option is added to the correct ruleset.
      Is it the case that the sha512 option is missing or not added to the correct ruleset?
      </question_text>
    </boolean_question>
    <boolean_question id="aide_verify_acls_question">
      <question_text>To determine that AIDE is verifying ACLs, run the following command:
$ grep acl /etc/aide.conf
Verify that the acl option is added to the correct ruleset.
      Is it the case that the acl option is missing or not added to the correct ruleset?
      </question_text>
    </boolean_question>
    <boolean_question id="aide_verify_ext_attributes_question">
      <question_text>To determine that AIDE is verifying extended file attributes, run the following command:
$ grep xattrs /etc/aide.conf
Verify that the xattrs option is added to the correct ruleset.
      Is it the case that the xattrs option is missing or not added to the correct ruleset?
      </question_text>
    </boolean_question>
    <boolean_question id="package_dracut-fips-aesni_installed_question">
      <question_text>Run the following command to determine if the dracut-fips-aesni package is installed: $ rpm -q dracut-fips-aesni
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_dracut-fips_installed_question">
      <question_text>Run the following command to determine if the dracut-fips package is installed: $ rpm -q dracut-fips
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="etc_system_fips_exists_question">
      <question_text>To verify /etc/system-fips exists, run the following command:
ls -l /etc/system-fips
The output should be similar to the the following:
-rw-r--r--. 1 root root 36 Nov 26 11:31 /etc/system-fips
      Is it the case that /etc/system-fips does not exist?
      </question_text>
    </boolean_question>
    <boolean_question id="grub2_enable_fips_mode_question">
      <question_text>To verify that FIPS is enabled properly in grub, run the following command:
$ grep fips /etc/default/grub
The output should contain fips=1
      Is it the case that FIPS is not configured or enabled in grub?
      </question_text>
    </boolean_question>
    <boolean_question id="harden_ssh_client_crypto_policy_question">
      <question_text>To verify if the OpenSSH Client uses defined Crypto Policy, run:
$ cat /etc/ssh/ssh_config.d/02-ospp.conf
and verify that the line matches
Match final all
RekeyLimit 512M 1h
GSSAPIAuthentication no
Ciphers aes256-ctr,aes256-cbc,aes128-ctr,aes128-cbc
PubkeyAcceptedKeyTypes ssh-rsa,ecdsa-sha2-nistp384,ecdsa-sha2-nistp256
MACs hmac-sha2-512,hmac-sha2-256
KexAlgorithms ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group14-sha1
      Is it the case that Crypto Policy for OpenSSH Client is not configured according to CC requirements?
      </question_text>
    </boolean_question>
    <boolean_question id="harden_sshd_crypto_policy_question">
      <question_text>To verify if the OpenSSH server uses defined Crypto Policy, run:
$ grep 'CRYPTO_POLICY' /etc/crypto-policies/back-ends/opensshserver.config | tail -n 1
and verify that the line matches
CRYPTO_POLICY='-oCiphers=aes256-ctr,aes128-ctr,aes256-cbc,aes128-cbc -oMACs=hmac-sha2-512,hmac-sha2-256 -oGSSAPIKeyExchange=no -oKexAlgorithms=ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group14-sha1 -oHostKeyAlgorithms=ssh-rsa,ecdsa-sha2-nistp384,ecdsa-sha2-nistp256 -oPubkeyAcceptedKeyTypes=rsa-sha2-512,rsa-sha2-256,ssh-rsa,ecdsa-sha2-nistp384,ecdsa-sha2-nistp256'
      Is it the case that Crypto Policy for OpenSSH Server is not configured according to CC requirements?
      </question_text>
    </boolean_question>
    <boolean_question id="installed_OS_is_FIPS_certified_question">
      <question_text>To verify that the installed operating system is supported or certified, run
the following command:

$ grep -i "oracle" /etc/oracle-release

The output should contain something similar to:
Oracle Linux 7
      Is it the case that the installed operating system is not FIPS 140-2 certified?
      </question_text>
    </boolean_question>
    <boolean_question id="installed_OS_is_vendor_supported_question">
      <question_text>To verify that the installed operating system is supported, run
the following command:

$ grep -i "oracle" /etc/oracle-release

The output should contain something similar to:
Oracle Linux 7
      Is it the case that the installed operating system is not supported?
      </question_text>
    </boolean_question>
    <boolean_question id="configure_user_data_backups_question">
      <question_text>Verify that the system backups user data.
      Is it the case that it is not?
      </question_text>
    </boolean_question>
    <boolean_question id="install_antivirus_question">
      <question_text>Verify an anti-virus solution is installed on the system. The anti-virus solution may be
bundled with an approved host-based security solution.
      Is it the case that there is no anti-virus solution installed on the system?
      </question_text>
    </boolean_question>
    <boolean_question id="install_hids_question">
      <question_text>Inspect the system to determine if intrusion detection software has been installed.
Verify this intrusion detection software is active.
      Is it the case that no host-based intrusion detection tools are installed?
      </question_text>
    </boolean_question>
    <boolean_question id="install_mcafee_antivirus_question">
      <question_text>To verify that McAfee VirusScan Enterprise for Linux is installed
and running, run the following command(s):
$ sudo systemctl status nails
$ rpm -q McAfeeVSEForLinux
      Is it the case that virus scanning software is not installed or running?
      </question_text>
    </boolean_question>
    <boolean_question id="install_mcafee_cma_rt_question">
      <question_text>To verify that McAfee Runtime Libraries (MFErt) and Linux Agent (MFEcma)
are installed, run the following command(s):
$ rpm -q MFEcma
$ rpm -q MFErt
      Is it the case that the HBSS HIPS module is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_mcafeetp_installed_question">
      <question_text>Run the following command to determine if the mcafeetp package is installed: $ rpm -q mcafeetp
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="agent_mfetpd_running_question">
      <question_text>To verify that McAfee Endpoint Security for Linux is
running, run the following command:
$ sudo ps -ef | grep -i mfetpd
      Is it the case that virus scanning software is not running?
      </question_text>
    </boolean_question>
    <boolean_question id="package_MFEhiplsm_installed_question">
      <question_text>To verify that McAfee HIPS is installed, run the following command(s):
$ rpm -q MFEhiplsm
      Is it the case that the HBSS HIPS module is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="install_mcafee_hbss_accm_question">
      <question_text>To verify that HBSS ACCM is installed, run the following command(s):
$ sudo ls /opt/McAfee/accm/bin/accm
      Is it the case that the HBSS ACCM module is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="install_mcafee_hbss_pa_question">
      <question_text>To verify that HBSS PA is installed, run the following command(s):
$ sudo ls /opt/McAfee/auditengine/bin/auditmanager
      Is it the case that the HBSS PA module is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="encrypt_partitions_question">
      <question_text>Check the system partitions to determine if they are encrypted with the following command:
blkid

Output will be similar to:
/dev/sda1: UUID=" ab12c3de-4f56-789a-8f33-3850cc8ce3a2
" TYPE="crypto_LUKS"
/dev/sda2: UUID=" bc98d7ef-6g54-321h-1d24-9870de2ge1a2
" TYPE="crypto_LUKS"

Pseudo-file systems, such as /proc, /sys, and tmpfs, are not required to use disk encryption and are not a finding.
      Is it the case that partitions do not have a type of crypto_LUKS?
      </question_text>
    </boolean_question>
    <boolean_question id="partition_for_boot_question">
      <question_text>Run the following command to determine if /boot
is on its own partition or logical volume:
$ mount | grep "on /boot"
If /boot has its own partition or volume group, a line will be returned.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="partition_for_home_question">
      <question_text>Run the following command to determine if /home
is on its own partition or logical volume:
$ mount | grep "on /home"
If /home has its own partition or volume group, a line will be returned.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="partition_for_opt_question">
      <question_text>Run the following command to determine if /opt
is on its own partition or logical volume:
$ mount | grep "on /opt"
If /opt has its own partition or volume group, a line will be returned.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="partition_for_srv_question">
      <question_text>Run the following command to determine if /srv
is on its own partition or logical volume:
$ mount | grep "on /srv"
If /srv has its own partition or volume group, a line will be returned.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="partition_for_tmp_question">
      <question_text>Run the following command to determine if /tmp
is on its own partition or logical volume:
$ mount | grep "on /tmp"
If /tmp has its own partition or volume group, a line will be returned.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="partition_for_usr_question">
      <question_text>Run the following command to determine if /usr
is on its own partition or logical volume:
$ mount | grep "on /usr"
If /usr has its own partition or volume group, a line will be returned.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="partition_for_var_question">
      <question_text>Run the following command to determine if /var
is on its own partition or logical volume:
$ mount | grep "on /var"
If /var has its own partition or volume group, a line will be returned.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="partition_for_var_log_question">
      <question_text>Run the following command to determine if /var/log
is on its own partition or logical volume:
$ mount | grep "on /var/log"
If /var/log has its own partition or volume group, a line will be returned.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="partition_for_var_log_audit_question">
      <question_text>Run the following command to determine if /var/log/audit
is on its own partition or logical volume:
$ mount | grep "on /var/log/audit"
If /var/log/audit has its own partition or volume group, a line will be returned.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="partition_for_var_tmp_question">
      <question_text>Run the following command to determine if /var/tmp
is on its own partition or logical volume:
$ mount | grep "on /var/tmp"
If /var/tmp has its own partition or volume group, a line will be returned.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="dconf_db_up_to_date_question">
      <question_text>In order to be sure that the databases are up-to-date, run the
dconf update
command as the administrator.
      Is it the case that The system-wide dconf databases are up-to-date with regards to respective keyfiles?
      </question_text>
    </boolean_question>
    <boolean_question id="enable_dconf_user_profile_question">
      <question_text>To verify that the DConf User profile is configured correctly, run the following
command:

$ cat /etc/dconf/profile/user
The output should show the following:
user-db:user
system-db:local
system-db:site
system-db:distro
      Is it the case that DConf User profile does not exist or is not configured correctly?
      </question_text>
    </boolean_question>
    <boolean_question id="dconf_gnome_disable_restart_shutdown_question">
      <question_text>To ensure disable and restart on the login screen are disabled, run the following command:
$ grep disable-restart-buttons /etc/dconf/db/gdm.d/*
The output should be true.
To ensure that users cannot enable disable and restart on the login screen, run the following:
$ grep disable-restart-buttons /etc/dconf/db/gdm.d/locks/*
If properly configured, the output should be /org/gnome/login-screen/disable-restart-buttons
      Is it the case that disable-restart-buttons has not been configured or is not disabled?
      </question_text>
    </boolean_question>
    <boolean_question id="dconf_gnome_disable_user_list_question">
      <question_text>To ensure the user list is disabled, run the following command:
$ grep disable-user-list /etc/dconf/db/gdm.d/*
The output should be true.
To ensure that users cannot enable displaying the user list, run the following:
$ grep disable-user-list /etc/dconf/db/gdm.d/locks/*
If properly configured, the output should be /org/gnome/login-screen/disable-user-list
      Is it the case that disable-user-list has not been configured or is not disabled?
      </question_text>
    </boolean_question>
    <boolean_question id="dconf_gnome_enable_smartcard_auth_question">
      <question_text>To ensure smart card authentication on the login screen is enabled, run the following command:
$ grep enable-smartcard-authentication /etc/dconf/db/gdm.d/*
The output should be true.
To ensure that users cannot disable smart card authentication on the login screen, run the following:
$ grep enable-smartcard-authentication /etc/dconf/db/gdm.d/locks/*
If properly configured, the output should be /org/gnome/login-screen/enable-smartcard-authentication
      Is it the case that enable-smartcard-authentication has not been configured or is disabled?
      </question_text>
    </boolean_question>
    <boolean_question id="dconf_gnome_login_retries_question">
      <question_text>To ensure the login screen resets after a specified number of failures,
run the following command:
$ grep allowed-failures /etc/dconf/db/gdm.d/*
The output should be 3 or less.
To ensure that users cannot change or configure the resets after a specified
number of failures on the login screen, run the following:
$ grep allowed-failures /etc/dconf/db/gdm.d/locks/*
If properly configured, the output should be /org/gnome/login-screen/allowed-failures
      Is it the case that allowed-failures is not equal to or less than the expected value?
      </question_text>
    </boolean_question>
    <boolean_question id="gnome_gdm_disable_automatic_login_question">
      <question_text>To verify that automatic logins are disabled, run the following command:
$ grep -Pzoi "^\[daemon]\\nautomaticlogin.*" /etc/gdm/custom.conf
The output should show the following:
[daemon]
AutomaticLoginEnable=false
      Is it the case that GDM allows users to automatically login?
      </question_text>
    </boolean_question>
    <boolean_question id="gnome_gdm_disable_guest_login_question">
      <question_text>To verify that timed logins are disabled, run the following command:
$ grep -Pzoi "^\[daemon]\\ntimedlogin.*" /etc/gdm/custom.conf
The output should show the following:
[daemon]
TimedLoginEnable=false
      Is it the case that GDM allows a guest to login without credentials?
      </question_text>
    </boolean_question>
    <boolean_question id="gnome_gdm_disable_xdmcp_question">
      <question_text>To ensure that XDMCP is disabled in /etc/gdm/custom.conf, run the following command:
grep -Pzo "\[xdmcp\]\nEnable=false" /etc/gdm/custom.conf
The output should return the following:

[xdmcp]
Enable=false

      Is it the case that the Enable is not set to false or is missing in the xdmcp section of the /etc/gdm/custom.conf gdm configuration file?
      </question_text>
    </boolean_question>
    <boolean_question id="dconf_gnome_disable_automount_question">
      <question_text>These settings can be verified by running the following:
$ gsettings get org.gnome.desktop.media-handling automount
If properly configured, the output for automount should be false.
To ensure that users cannot enable automount in GNOME3, run the following:
$ grep 'automount' /etc/dconf/db/local.d/locks/*
If properly configured, the output for automount should be /org/gnome/desktop/media-handling/automount
      Is it the case that GNOME automounting is not disabled?
      </question_text>
    </boolean_question>
    <boolean_question id="dconf_gnome_disable_automount_open_question">
      <question_text>These settings can be verified by running the following:
$ gsettings get org.gnome.desktop.media-handling automount-open
If properly configured, the output for automount-openshould be false.
To ensure that users cannot enable automount opening in GNOME3, run the following:
$ grep 'automount-open' /etc/dconf/db/local.d/locks/*
If properly configured, the output for automount-open should be /org/gnome/desktop/media-handling/automount-open
      Is it the case that GNOME automounting is not disabled?
      </question_text>
    </boolean_question>
    <boolean_question id="dconf_gnome_disable_autorun_question">
      <question_text>These settings can be verified by running the following:
$ gsettings get org.gnome.desktop.media-handling autorun-never
If properly configured, the output for autorun-nevershould be true.
To ensure that users cannot enable autorun in GNOME3, run the following:
$ grep 'autorun-never' /etc/dconf/db/local.d/locks/*
If properly configured, the output for autorun-never should be /org/gnome/desktop/media-handling/autorun-never
      Is it the case that GNOME autorun is not disabled?
      </question_text>
    </boolean_question>
    <boolean_question id="dconf_gnome_remote_access_credential_prompt_question">
      <question_text>To ensure that remote access requires credentials, run the following command:
$ gsettings get org.gnome.Vino authentication-methods
If properly configured, the output should be false.
To ensure that users cannot disable credentials for remote access, run the following:
$ grep authentication-methods /etc/dconf/db/local.d/locks/*
If properly configured, the output should be
/org/gnome/Vino/authentication-methods
      Is it the case that wireless network notification is enabled and not disabled?
      </question_text>
    </boolean_question>
    <boolean_question id="dconf_gnome_remote_access_encryption_question">
      <question_text>To ensure that remote access connections are encrypted, run the following command:
$ gsettings get org.gnome.Vino require-encrpytion
If properly configured, the output should be true.
To ensure that users cannot disable encrypted remote connections, run the following:
$ grep require-encryption /etc/dconf/db/local.d/locks/*
If properly configured, the output should be
/org/gnome/Vino/require-encryption
      Is it the case that remote access connections are not encrypted?
      </question_text>
    </boolean_question>
    <boolean_question id="dconf_gnome_screensaver_idle_activation_enabled_question">
      <question_text>To check the screensaver mandatory use status, run the following command:
$ gsettings get org.gnome.desktop.screensaver idle-activation-enabled
If properly configured, the output should be true.
To ensure that users cannot disable the screensaver idle inactivity setting, run the following:
$ grep idle-activation-enabled /etc/dconf/db/local.d/locks/*
If properly configured, the output should be /org/gnome/desktop/screensaver/idle-activation-enabled
      Is it the case that idle-activation-enabled is not enabled or configured?
      </question_text>
    </boolean_question>
    <boolean_question id="dconf_gnome_screensaver_idle_activation_locked_question">
      <question_text>To ensure that users cannot disable the screensaver idle inactivity setting, run the following:
$ grep idle-activation-enabled /etc/dconf/db/local.d/locks/*
If properly configured, the output should be /org/gnome/desktop/screensaver/idle-activation-enabled
      Is it the case that idle-activation-enabled is not locked?
      </question_text>
    </boolean_question>
    <boolean_question id="dconf_gnome_screensaver_idle_delay_question">
      <question_text>To check the current idle time-out value, run the following command:
$ gsettings get org.gnome.desktop.session idle-delay
If properly configured, the output should be 'uint32 '.
To ensure that users cannot change the screensaver inactivity timeout setting, run the following:
$ grep idle-delay /etc/dconf/db/local.d/locks/*
If properly configured, the output should be /org/gnome/desktop/session/idle-delay
      Is it the case that idle-delay is not equal to or less than the expected value?
      </question_text>
    </boolean_question>
    <boolean_question id="dconf_gnome_screensaver_lock_delay_question">
      <question_text>To check that the screen locks immediately when activated, run the following command:
$ gsettings get org.gnome.desktop.screensaver lock-delay
If properly configured, the output should be 'uint32 '.

To ensure that users cannot change how long until the the screensaver locks, run the following:
$ grep lock-delay /etc/dconf/db/local.d/locks/*
If properly configured, the output for lock-delay should be /org/gnome/desktop/screensaver/lock-delay
      Is it the case that the screensaver lock delay is missing, or is set to a value greater than 5?
      </question_text>
    </boolean_question>
    <boolean_question id="dconf_gnome_screensaver_lock_enabled_question">
      <question_text>To check the status of the idle screen lock activation, run the following command:

$ gsettings get org.gnome.desktop.screensaver lock-enabled
If properly configured, the output should be true.
To ensure that users cannot change how long until the the screensaver locks, run the following:
$ grep lock-enabled /etc/dconf/db/local.d/locks/*
If properly configured, the output for lock-enabled should be /org/gnome/desktop/screensaver/lock-enabled
      Is it the case that screensaver locking is not enabled and/or has not been set or configured correctly?
      </question_text>
    </boolean_question>
    <boolean_question id="dconf_gnome_screensaver_lock_locked_question">
      <question_text>To ensure that users cannot change how long until the the screensaver locks, run the following:
$ grep lock-enabled /etc/dconf/db/local.d/locks/*
If properly configured, the output for lock-enabled should be /org/gnome/desktop/screensaver/lock-enabled
      Is it the case that screensaver locking is not locked?
      </question_text>
    </boolean_question>
    <boolean_question id="dconf_gnome_screensaver_mode_blank_question">
      <question_text>To ensure the screensaver is configured to be blank, run the following command:
$ gsettings get org.gnome.desktop.screensaver picture-uri
If properly configured, the output should be ''.

To ensure that users cannot set the screensaver background, run the following:
$ grep picture-uri /etc/dconf/db/local.d/locks/*
If properly configured, the output should be /org/gnome/desktop/screensaver/picture-uri
      Is it the case that it is not set or configured properly?
      </question_text>
    </boolean_question>
    <boolean_question id="dconf_gnome_screensaver_user_info_question">
      <question_text>To ensure the splash screen is configured not to show user name, run the following command:
$ gsettings get org.gnome.desktop.screensaver show-full-name-in-top-bar
If properly configured, the output should be false.
To ensure that users cannot enable user name on the lock screen, run the following:
$ grep show-full-name-in-top-bar /etc/dconf/db/local.d/locks/*
If properly configured, the output should be /org/gnome/desktop/screensaver/show-full-name-in-top-bar
      Is it the case that it is not set or configured properly?
      </question_text>
    </boolean_question>
    <boolean_question id="dconf_gnome_screensaver_user_locks_question">
      <question_text>To ensure that users cannot change session idle and lock settings, run the following:
$ grep 'lock-delay' /etc/dconf/db/local.d/locks/*
If properly configured, the output should return:
/org/gnome/desktop/screensaver/lock-delay
      Is it the case that GNOME3 session settings are not locked or configured properly?
      </question_text>
    </boolean_question>
    <boolean_question id="dconf_gnome_session_idle_user_locks_question">
      <question_text>To ensure that users cannot change session idle and lock settings, run the following:
$ grep 'idle-delay' /etc/dconf/db/local.d/locks/*
If properly configured, the output should return:
/org/gnome/desktop/session/idle-delay
      Is it the case that GNOME3 session settings are not locked or configured properly?
      </question_text>
    </boolean_question>
    <boolean_question id="dconf_gnome_disable_ctrlaltdel_reboot_question">
      <question_text>To ensure the system is configured to ignore the Ctrl-Alt-Del sequence,
run the following command:
$ gsettings get org.gnome.settings-daemon.plugins.media-keys logout
If properly configured, the output should be ''.
To ensure that users cannot enable the Ctrl-Alt-Del sequence, run the following:
$ grep logout /etc/dconf/db/local.d/locks/*
If properly configured, the output should be
/org/gnome/settings-daemon/plugins/media-keys/logout
      Is it the case that GNOME3 is configured to reboot when Ctrl-Alt-Del is pressed?
      </question_text>
    </boolean_question>
    <boolean_question id="dconf_gnome_disable_user_admin_question">
      <question_text>To ensure the GUI does not allow user administratrion capabilities to all users,
run the following command:
$ gsettings get org.gnome.desktop.lockdown user-administration-disabled
If properly configured, the output should be true.
To ensure that users cannot enable user administration, run the following:
$ grep user-administration /etc/dconf/db/local.d/locks/*
If properly configured, the output should be
/org/gnome/desktop/lockdown/user-administration-disabled
      Is it the case that user administration is not configured or disabled?
      </question_text>
    </boolean_question>
    <boolean_question id="package_glibc_installed_question">
      <question_text>Run the following command to determine if the glibc package is installed: $ rpm -q glibc
      Is it the case that the minimum required &lt;tt&gt;glibc&lt;/tt&gt; version is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_uuidd_installed_question">
      <question_text>Run the following command to determine if the uuidd package is installed: $ rpm -q uuidd
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_authorized_local_users_sidadm_orasid_question">
      <question_text>To verify that there are no unauthorized local user accounts, run the following command:
$ less /etc/passwd 
Inspect the results, and if unauthorized local user accounts exist, remove them by
running the following command:
$ sudo userdel unauthorized_user
      Is it the case that there are unauthorized local user accounts on the system?
      </question_text>
    </boolean_question>
    <boolean_question id="package_sudo_installed_question">
      <question_text>Run the following command to determine if the sudo package is installed: $ rpm -q sudo
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="sudo_add_env_reset_question">
      <question_text>To determine if env_reset has been configured for sudo, run the following command:
$ sudo grep -ri "^[\s]*Defaults.*\benv_reset\b.*" /etc/sudoers /etc/sudoers.d/
The command should return a matching output.
      Is it the case that env_reset is not enabled in sudo?
      </question_text>
    </boolean_question>
    <boolean_question id="sudo_add_ignore_dot_question">
      <question_text>To determine if ignore_dot has been configured for sudo, run the following command:
$ sudo grep -ri "^[\s]*Defaults.*\bignore_dot\b.*" /etc/sudoers /etc/sudoers.d/
The command should return a matching output.
      Is it the case that ignore_dot is not enabled in sudo?
      </question_text>
    </boolean_question>
    <boolean_question id="sudo_add_noexec_question">
      <question_text>To determine if NOEXEC has been configured for sudo, run the following command:
$ sudo grep -ri "^[\s]*Defaults.*\bnoexec\b.*" /etc/sudoers /etc/sudoers.d/
The command should return a matching output.
      Is it the case that noexec is not enabled in sudo?
      </question_text>
    </boolean_question>
    <boolean_question id="sudo_add_passwd_timeout_question">
      <question_text>To determine if passwd_timeout has been configured for sudo, run the following command:
$ sudo grep -ri '^Defaults.*passwd_timeout=sub_var_value("var_sudo_passwd_timeout")' /etc/sudoers /etc/sudoers.d/
The command should return a matching output.
      Is it the case that passwd_timeout is not set with the appropriate value for sudo?
      </question_text>
    </boolean_question>
    <boolean_question id="sudo_add_requiretty_question">
      <question_text>To determine if requiretty has been configured for sudo, run the following command:
$ sudo grep -ri "^[\s]*Defaults.*\brequiretty\b.*" /etc/sudoers /etc/sudoers.d/
The command should return a matching output.
      Is it the case that requiretty is not enabled in sudo?
      </question_text>
    </boolean_question>
    <boolean_question id="sudo_add_umask_question">
      <question_text>To determine if umask has been configured for sudo with the appropriate value,
run the following command:
$ sudo grep -ri '^Defaults.*umask=sub_var_value("var_sudo_umask")' /etc/sudoers /etc/sudoers.d/
The command should return a matching output.
      Is it the case that umask is not set with the appropriate value for sudo?
      </question_text>
    </boolean_question>
    <boolean_question id="sudo_add_use_pty_question">
      <question_text>To determine if use_pty has been configured for sudo, run the following command:
$ sudo grep -ri "^[\s]*Defaults.*\buse_pty\b.*" /etc/sudoers /etc/sudoers.d/
The command should return a matching output.
      Is it the case that use_pty is not enabled in sudo?
      </question_text>
    </boolean_question>
    <boolean_question id="sudo_custom_logfile_question">
      <question_text>To determine if logfile has been configured for sudo, run the following command:
$ sudo grep -ri "^[\s]*Defaults.*\blogfile\b.*" /etc/sudoers /etc/sudoers.d/
The command should return a matching output.
      Is it the case that logfile is not enabled in sudo?
      </question_text>
    </boolean_question>
    <boolean_question id="sudo_dedicated_group_question">
      <question_text>To check the group ownership of /usr/bin/sudo,
run the command:
$ ls -lL /usr/bin/sudo
If properly configured, the output should indicate the following group-owner:

      Is it the case that /usr/bin/sudo has group owner &lt;sub idref="var_sudo_dedicated_group" /&gt;?
      </question_text>
    </boolean_question>
    <boolean_question id="sudo_remove_no_authenticate_question">
      <question_text>To determine if !authenticate has not been configured for sudo, run the following command:
$ sudo grep -r \!authenticate /etc/sudoers /etc/sudoers.d/
The command should return no output.
      Is it the case that !authenticate is enabled in sudo?
      </question_text>
    </boolean_question>
    <boolean_question id="sudo_remove_nopasswd_question">
      <question_text>To determine if NOPASSWD has been configured for sudo, run the following command:
$ sudo grep -ri nopasswd /etc/sudoers /etc/sudoers.d/
The command should return no output.
      Is it the case that nopasswd is enabled in sudo?
      </question_text>
    </boolean_question>
    <boolean_question id="sudo_require_authentication_question">
      <question_text>To determine if NOPASSWD or !authenticate have been configured for
sudo, run the following command:
$ sudo grep -ri "nopasswd\|\!authenticate" /etc/sudoers /etc/sudoers.d/
The command should return no output.
      Is it the case that nopasswd and/or !authenticate is enabled in sudo?
      </question_text>
    </boolean_question>
    <boolean_question id="sudo_require_reauthentication_question">
      <question_text>Verify the operating system requires re-authentication 
when using the "sudo" command to elevate privileges, run the following command:
sudo grep -ri '^Defaults.*timestamp_timeout' /etc/sudoers /etc/sudoers.d
The output should be:
/etc/sudoers:Defaults timestamp_timeout=0 or "timestamp_timeout" is set to a positive number.
      Is it the case that timestamp_timeout is not set with the appropriate value for sudo?
      </question_text>
    </boolean_question>
    <boolean_question id="sudo_restrict_privilege_elevation_to_authorized_question">
      <question_text>To determine if "sudoers" file, restricts sudo access, run the following commands:
$ sudo grep -PR '^\s*ALL\s+ALL\=\(ALL\)\s+ALL\s*$' /etc/sudoers /etc/sudoers.d/*
$ sudo grep -PR '^\s*ALL\s+ALL\=\(ALL\:ALL\)\s+ALL\s*$' /etc/sudoers /etc/sudoers.d/*
Both commands should return no output.
      Is it the case that /etc/sudoers file does not restrict sudo access to authorized personnel?
      </question_text>
    </boolean_question>
    <boolean_question id="sudo_vdsm_nopasswd_question">
      <question_text>To determine if NOPASSWD has been configured for the vdsm user for sudo,
run the following command:
$ sudo grep -ri nopasswd /etc/sudoers.d/
The command should return output only for the vdsm user.
      Is it the case that nopasswd is set for any users beyond vdsm?
      </question_text>
    </boolean_question>
    <boolean_question id="sudoers_explicit_command_args_question">
      <question_text>To determine if arguments that commands can be executed with are restricted, run the following command:
$ sudo grep -PR '^(?:\s*[^#=]+)=(?:\s*(?:\([^\)]+\))?\s*(?!\s*\()[^,\s]+(?:[ \t]+[^,\s]+)+[ \t]*,)*(\s*(?:\([^\)]+\))?\s*(?!\s*\()[^,\s]+[ \t]*(?:,|$))' /etc/sudoers /etc/sudoers.d/
The command should return no output.
      Is it the case that /etc/sudoers file contains user specifications that allow execution of commands with any arguments?
      </question_text>
    </boolean_question>
    <boolean_question id="sudoers_no_command_negation_question">
      <question_text>To determine if negation is used to define commands users are allowed to execute using sudo, run the following command:
$ sudo grep -PR '^(?:\s*[^#=]+)=(?:\s*(?:\([^\)]+\))?\s*(?!\s*\()[^,!\n][^,\n]+,)*\s*(?:\([^\)]+\))?\s*(?!\s*\()(!\S+).*' /etc/sudoers /etc/sudoers.d/
The command should return no output.
      Is it the case that /etc/sudoers file contains rules that define the set of allowed commands using negation?
      </question_text>
    </boolean_question>
    <boolean_question id="sudoers_no_root_target_question">
      <question_text>To determine if the users are allowed to run commands as root, run the following commands:
$ sudo grep -PR '^\s*((?!root\b)[\w]+)\s*(\w+)\s*=\s*(.*,)?\s*[^\(\s]' /etc/sudoers /etc/sudoers.d/
and
$ sudo grep -PR '^\s*((?!root\b)[\w]+)\s*(\w+)\s*=\s*(.*,)?\s*\([\w\s]*\b(root|ALL)\b[\w\s]*\)' /etc/sudoers /etc/sudoers.d/
Both commands should return no output.
      Is it the case that /etc/sudoers file contains rules that allow non-root users to run commands as root?
      </question_text>
    </boolean_question>
    <boolean_question id="sudoers_validate_passwd_question">
      <question_text>Run the following command to Verify that the sudoers security policy is configured to use the invoking user's password for privilege escalation:
 sudo egrep -i '(!rootpw|!targetpw|!runaspw)' /etc/sudoers /etc/sudoers.d/* | grep -v '#'
If no results are returned, this is a finding
If "Defaults !targetpw" is not defined, this is a finding.
If "Defaults !rootpw" is not defined, this is a finding.
If "Defaults !runaspw" is not defined, this is a finding.
      Is it the case that invoke user passwd when using sudo?
      </question_text>
    </boolean_question>
    <boolean_question id="package_binutils_installed_question">
      <question_text>Run the following command to determine if the binutils package is installed: $ rpm -q binutils
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_cryptsetup-luks_installed_question">
      <question_text>Run the following command to determine if the cryptsetup-luks package is installed: $ rpm -q cryptsetup-luks
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_gnutls-utils_installed_question">
      <question_text>Run the following command to determine if the gnutls-utils package is installed: $ rpm -q gnutls-utils
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_libcap-ng-utils_installed_question">
      <question_text>Run the following command to determine if the libcap-ng-utils package is installed: $ rpm -q libcap-ng-utils
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_nss-tools_installed_question">
      <question_text>Run the following command to determine if the nss-tools package is installed: $ rpm -q nss-tools
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_openscap-scanner_installed_question">
      <question_text>Run the following command to determine if the openscap-scanner package is installed: $ rpm -q openscap-scanner
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_rear_installed_question">
      <question_text>Run the following command to determine if the rear package is installed: $ rpm -q rear
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_rng-tools_installed_question">
      <question_text>Run the following command to determine if the rng-tools package is installed: $ rpm -q rng-tools
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_scap-security-guide_installed_question">
      <question_text>Run the following command to determine if the scap-security-guide package is installed: $ rpm -q scap-security-guide
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_tar_installed_question">
      <question_text>Run the following command to determine if the tar package is installed: $ rpm -q tar
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_vim_installed_question">
      <question_text>Run the following command to determine if the vim-enhanced package is installed: $ rpm -q vim-enhanced
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_abrt-addon-ccpp_removed_question">
      <question_text>Run the following command to determine if the abrt-addon-ccpp package is installed:
$ rpm -q abrt-addon-ccpp
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_abrt-addon-kerneloops_removed_question">
      <question_text>Run the following command to determine if the abrt-addon-kerneloops package is installed:
$ rpm -q abrt-addon-kerneloops
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_abrt-addon-python_removed_question">
      <question_text>Run the following command to determine if the abrt-addon-python package is installed:
$ rpm -q abrt-addon-python
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_abrt-cli_removed_question">
      <question_text>Run the following command to determine if the abrt-cli package is installed:
$ rpm -q abrt-cli
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_abrt-plugin-logger_removed_question">
      <question_text>Run the following command to determine if the abrt-plugin-logger package is installed:
$ rpm -q abrt-plugin-logger
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_abrt-plugin-rhtsupport_removed_question">
      <question_text>Run the following command to determine if the abrt-plugin-rhtsupport package is installed:
$ rpm -q abrt-plugin-rhtsupport
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_abrt-plugin-sosreport_removed_question">
      <question_text>Run the following command to determine if the abrt-plugin-sosreport package is installed:
$ rpm -q abrt-plugin-sosreport
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_geolite2-city_removed_question">
      <question_text>Run the following command to determine if the geolite2-city package is installed:
$ rpm -q geolite2-city
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_geolite2-country_removed_question">
      <question_text>Run the following command to determine if the geolite2-country package is installed:
$ rpm -q geolite2-country
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_gssproxy_removed_question">
      <question_text>Run the following command to determine if the gssproxy package is installed:
$ rpm -q gssproxy
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_iprutils_removed_question">
      <question_text>Run the following command to determine if the iprutils package is installed:
$ rpm -q iprutils
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_krb5-workstation_removed_question">
      <question_text>Run the following command to determine if the krb5-workstation package is installed:
$ rpm -q krb5-workstation
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_tuned_removed_question">
      <question_text>Run the following command to determine if the tuned package is installed:
$ rpm -q tuned
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="clean_components_post_updating_question">
      <question_text>
To verify that clean_requirements_on_remove is configured properly, run the
following command:
$ grep clean_requirements_on_remove /etc/yum.conf
The output should return something similar to:
clean_requirements_on_remove=1
      Is it the case that 
'clean_requirements_on_remove is not enabled or configured correctly'?
      </question_text>
    </boolean_question>
    <boolean_question id="ensure_gpgcheck_globally_activated_question">
      <question_text>To determine whether yum is configured to use gpgcheck,
inspect /etc/yum.conf and ensure the following appears in the
[main] section:
gpgcheck=1
A value of 1 indicates that gpgcheck is enabled. Absence of a
gpgcheck line or a setting of 0 indicates that it is
disabled.
      Is it the case that GPG checking is not enabled?
      </question_text>
    </boolean_question>
    <boolean_question id="ensure_gpgcheck_local_packages_question">
      <question_text>To verify that localpkg_gpgcheck is configured properly, run the following
command:
$ grep localpkg_gpgcheck /etc/yum.conf
The output should return something similar to:
localpkg_gpgcheck=1
      Is it the case that gpgcheck is not enabled or configured correctly to verify local packages?
      </question_text>
    </boolean_question>
    <boolean_question id="ensure_gpgcheck_never_disabled_question">
      <question_text>To determine whether yum has been configured to disable
gpgcheck for any repos,  inspect all files in
/etc/yum.repos.d and ensure the following does not appear in any
sections:
gpgcheck=0
A value of 0 indicates that gpgcheck has been disabled for that repo.
      Is it the case that GPG checking is disabled?
      </question_text>
    </boolean_question>
    <boolean_question id="ensure_gpgcheck_repo_metadata_question">
      <question_text>To verify that repo_gpgcheck is configured properly, run the following
command:
$ grep repo_gpgcheck /etc/yum.conf
The output should return something similar to:
repo_gpgcheck=1
      Is it the case that gpgcheck is not enabled or configured correctly to verify repository metadata?
      </question_text>
    </boolean_question>
    <boolean_question id="ensure_oracle_gpgkey_installed_question">
      <question_text>To ensure that the GPG key is installed, run:
$ rpm -q --queryformat "%{SUMMARY}\n" gpg-pubkey
The command should return the string below:
gpg(Oracle OSS group (Open Source Software group) &lt;build@oss.oracle.com&gt;
      Is it the case that the Oracle GPG Key is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="banner_etc_issue_question">
      <question_text>To check if the system login banner is compliant,
run the following command:
$ cat /etc/issue
      Is it the case that it does not display the required banner?
      </question_text>
    </boolean_question>
    <boolean_question id="banner_etc_motd_question">
      <question_text>To check if the system login banner is compliant,
run the following command:
$ cat /etc/motd
      Is it the case that it does not display the required banner?
      </question_text>
    </boolean_question>
    <boolean_question id="file_groupowner_etc_issue_question">
      <question_text>To check the group ownership of /etc/issue,
run the command:
$ ls -lL /etc/issue
If properly configured, the output should indicate the following group-owner:
root
      Is it the case that /etc/issue has group owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_groupowner_etc_motd_question">
      <question_text>To check the group ownership of /etc/motd,
run the command:
$ ls -lL /etc/motd
If properly configured, the output should indicate the following group-owner:
root
      Is it the case that /etc/motd has group owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_owner_etc_issue_question">
      <question_text>To check the ownership of /etc/issue,
run the command:
$ ls -lL /etc/issue
If properly configured, the output should indicate the following owner:
root
      Is it the case that /etc/issue has owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_owner_etc_motd_question">
      <question_text>To check the ownership of /etc/motd,
run the command:
$ ls -lL /etc/motd
If properly configured, the output should indicate the following owner:
root
      Is it the case that /etc/motd has owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_permissions_etc_issue_question">
      <question_text>To check the permissions of /etc/issue,
run the command:
$ ls -l /etc/issue
If properly configured, the output should indicate the following permissions:
-rw-r--r--
      Is it the case that /etc/issue has unix mode -rw-r--r--?
      </question_text>
    </boolean_question>
    <boolean_question id="file_permissions_etc_motd_question">
      <question_text>To check the permissions of /etc/motd,
run the command:
$ ls -l /etc/motd
If properly configured, the output should indicate the following permissions:
-rw-r--r--
      Is it the case that /etc/motd has unix mode -rw-r--r--?
      </question_text>
    </boolean_question>
    <boolean_question id="dconf_gnome_banner_enabled_question">
      <question_text>To ensure a login warning banner is enabled, run the following:
$ grep banner-message-enable /etc/dconf/db/gdm.d/*
If properly configured, the output should be true.
To ensure a login warning banner is locked and cannot be changed by a user, run the following:
$ grep banner-message-enable /etc/dconf/db/gdm.d/locks/*
If properly configured, the output should be /org/gnome/login-screen/banner-message-enable.
      Is it the case that it is not?
      </question_text>
    </boolean_question>
    <boolean_question id="dconf_gnome_login_banner_text_question">
      <question_text>To ensure the login warning banner text is properly set, run the following:
$ grep banner-message-text /etc/dconf/db/gdm.d/*
If properly configured, the proper banner text will appear.
To ensure the login warning banner text is locked and cannot be changed by a user, run the following:
$ grep banner-message-text /etc/dconf/db/gdm.d/locks/*
If properly configured, the output should be /org/gnome/login-screen/banner-message-text.
      Is it the case that it does not?
      </question_text>
    </boolean_question>
    <boolean_question id="display_login_attempts_question">
      <question_text>To ensure that last logon/access notification is configured correctly, run
the following command:
$ grep pam_lastlog.so /etc/pam.d/postlogin
The output should show output showfailed and must not contain
silent.
      Is it the case that that is not the case?
      </question_text>
    </boolean_question>
    <boolean_question id="enable_pam_namespace_question">
      <question_text>To check if pam_namespace.so is required for user login, run the following command:
$ grep pam_namespace.so /etc/pam.d/login
The output should return the following uncommented:
session    required     pam_namespace.so
      Is it the case that pam_namespace.so is not required or is commented out?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_password_pam_pwhistory_remember_password_auth_question">
      <question_text>Check that the operating system prohibits the reuse of a password for
a minimum of  generations with the following command:
# grep pam_pwhistory.so /etc/pam.d/password-auth
password  pam_pwhistory.so remember= use_authtok
If the command does not return a result, or the returned line is commented
out, has a second column value different from , does not contain
"remember" value, or the value is less than
, this is a finding.
      Is it the case that the value of remember is not set equal to or greater than &lt;sub idref="var_password_pam_remember" /&gt;?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_password_pam_pwhistory_remember_system_auth_question">
      <question_text>Check that the operating system prohibits the reuse of a password for
a minimum of  generations with the following command:
# grep pam_pwhistory.so /etc/pam.d/system-auth
password  pam_pwhistory.so remember= use_authtok
If the command does not return a result, or the returned line is commented
out, has a second column value different from , does not contain
"remember" value, or the value is less than
, this is a finding.
      Is it the case that the value of remember is not set equal to or greater than &lt;sub idref="var_password_pam_remember" /&gt;?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_password_pam_unix_remember_question">
      <question_text>To verify the password reuse setting is compliant, run the following command:
$ grep remember /etc/pam.d/system-auth
The output should show the following at the end of the line:
remember=
      Is it the case that the value of remember is not set equal to or greater than the expected setting?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_passwords_pam_faillock_deny_question">
      <question_text>To ensure the failed password attempt policy is configured correctly, run the following command:
$ grep pam_faillock /etc/pam.d/system-auth
The output should show deny=.
      Is it the case that that is not the case?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_passwords_pam_faillock_deny_root_question">
      <question_text>To ensure that even the root account is locked after a defined number of failed password
attempts, run the following command:
$ grep even_deny_root /etc/pam.d/system-auth
The output should show even_deny_root.
      Is it the case that that is not the case?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_passwords_pam_faillock_interval_question">
      <question_text>To ensure the failed password attempt policy is configured correctly,
run the following command:
$ grep pam_faillock /etc/pam.d/system-auth /etc/pam.d/password-auth
For each file, the output should show fail_interval=&lt;interval-in-seconds&gt; where interval-in-seconds is  or greater.
If the fail_interval parameter is not set, the default setting
of 900 seconds is acceptable.
      Is it the case that fail_interval is less than the required value?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_passwords_pam_faillock_unlock_time_question">
      <question_text>To ensure the failed password attempt policy is configured correctly, run the following command:
$ grep pam_faillock /etc/pam.d/system-auth
The output should show unlock_time=&lt;some-large-number&gt; or 0 for never.
      Is it the case that unlock_time is less than the expected value?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_password_pam_dcredit_question">
      <question_text>To check how many digits are required in a password, run the following command:
$ grep dcredit /etc/security/pwquality.conf
The dcredit parameter (as a negative number) will indicate how many digits are required.
The DoD requires at least one digit in a password. This would appear as dcredit = -1.
      Is it the case that dcredit is not found or not equal to or less than the required value?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_password_pam_difok_question">
      <question_text>To check how many characters must differ during a password change, run the following command:
$ grep difok /etc/security/pwquality.conf
The difok parameter will indicate how many characters must differ.
      Is it the case that difok is not found or not equal to or greater than the required value?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_password_pam_lcredit_question">
      <question_text>To check how many lowercase characters are required in a password, run the following command:
$ grep lcredit /etc/security/pwquality.conf
The lcredit parameter (as a negative number) will indicate how many special characters are required.
The DoD and FISMA require at least one lowercase character in a password. This would appear as lcredit = -1.
      Is it the case that lcredit is not found or not less than or equal to the required value?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_password_pam_maxclassrepeat_question">
      <question_text>To check the value for maximum consecutive repeating characters, run the following command:
$ grep maxclassrepeat /etc/security/pwquality.conf
For DoD systems, the output should show maxclassrepeat=4.
      Is it the case that that is not the case?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_password_pam_maxrepeat_question">
      <question_text>To check the maximum value for consecutive repeating characters, run the following command:
$ grep maxrepeat /etc/security/pwquality.conf
Look for the value of the maxrepeat parameter. The DoD requirement is 3, which would appear as
maxrepeat=3.
      Is it the case that maxrepeat is not found or not greater than or equal to the required value?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_password_pam_minclass_question">
      <question_text>To check how many categories of characters must be used in password during a password change,
run the following command:
$ grep minclass /etc/security/pwquality.conf
The minclass parameter will indicate how many character classes must be used. If
the requirement was for the password to contain characters from three different categories,
then this would appear as minclass = 3.
      Is it the case that minclass is not found or not set equal to or greater than the required value?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_password_pam_minlen_question">
      <question_text>To check how many characters are required in a password, run the following command:
$ grep minlen /etc/security/pwquality.conf
Your output should contain minlen = 
      Is it the case that minlen is not found, or not equal to or greater than the required value?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_password_pam_ocredit_question">
      <question_text>To check how many special characters are required in a password, run the following command:
$ grep ocredit /etc/security/pwquality.conf
The ocredit parameter (as a negative number) will indicate how many special characters are required.
The DoD and FISMA require at least one special character in a password.
This would appear as ocredit = -1.
      Is it the case that ocredit is not found or not equal to or less than the required value?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_password_pam_retry_question">
      <question_text>To check how many retry attempts are permitted on a per-session basis, run the following command:

$ grep pam_pwquality /etc/pam.d/system-auth 

The retry parameter will indicate how many attempts are permitted.
The DoD required value is less than or equal to 3.
This would appear as retry=3, or a lower value.
      Is it the case that it is not the required value?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_password_pam_ucredit_question">
      <question_text>To check how many uppercase characters are required in a password, run the following command:
$ grep ucredit /etc/security/pwquality.conf
The ucredit parameter (as a negative number) will indicate how many uppercase characters are required.
The DoD and FISMA require at least one uppercase character in a password.
This would appear as ucredit = -1.
      Is it the case that ucredit is not found or not set less than or equal to the required value?
      </question_text>
    </boolean_question>
    <boolean_question id="set_password_hashing_algorithm_libuserconf_question">
      <question_text>Inspect /etc/libuser.conf and ensure the following line appears
in the [default] section:
crypt_style = sha512
      Is it the case that it does not?
      </question_text>
    </boolean_question>
    <boolean_question id="set_password_hashing_algorithm_logindefs_question">
      <question_text>Inspect /etc/login.defs and ensure the following line appears:
ENCRYPT_METHOD SHA512
      Is it the case that it does not?
      </question_text>
    </boolean_question>
    <boolean_question id="set_password_hashing_algorithm_systemauth_question">
      <question_text>
Inspect the password section of /etc/pam.d/system-auth

and ensure that the pam_unix.so module includes the argument
sha512:

$ grep sha512 /etc/pam.d/system-auth
      Is it the case that it does not?
      </question_text>
    </boolean_question>
    <boolean_question id="service_debug-shell_disabled_question">
      <question_text>
To check that the debug-shell service is disabled in system boot configuration,
run the following command:
$ systemctl is-enabled debug-shell
Output should indicate the debug-shell service has either not been installed,
or has been disabled at all runlevels, as shown in the example below:
$ systemctl is-enabled debug-shell disabled

Run the following command to verify debug-shell is not active (i.e. not running) through current runtime configuration:
$ systemctl is-active debug-shell

If the service is not running the command will return the following output:
inactive

The service will also be masked, to check that the debug-shell is masked, run the following command:
$ systemctl show debug-shell | grep "LoadState\|UnitFileState"

If the service is masked the command will return the following outputs:

LoadState=masked

UnitFileState=masked
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="disable_ctrlaltdel_burstaction_question">
      <question_text>To ensure the system is configured to ignore the Ctrl-Alt-Del setting,
enter the following command:
$ sudo grep -i ctrlaltdelburstaction /etc/systemd/system.conf
The output should return:
CtrlAltDelBurstAction=none
      Is it the case that the system is configured to reboot when Ctrl-Alt-Del is pressed more than 7 times in 2 seconds.?
      </question_text>
    </boolean_question>
    <boolean_question id="disable_ctrlaltdel_reboot_question">
      <question_text>To ensure the system is configured to mask the Ctrl-Alt-Del sequence, Check
that the ctrl-alt-del.target is masked and not active with the following
command:
sudo systemctl status ctrl-alt-del.target
The output should indicate that the target is masked and not active. It
might resemble following output:
ctrl-alt-del.target
Loaded: masked (/dev/null; bad)
Active: inactive (dead)
      Is it the case that the system is configured to reboot when Ctrl-Alt-Del is pressed?
      </question_text>
    </boolean_question>
    <boolean_question id="grub2_disable_interactive_boot_question">
      <question_text>Inspect /etc/default/grub for any instances of
systemd.confirm_spawn=(1|yes|true|on) in the kernel boot arguments.
Presence of a systemd.confirm_spawn=(1|yes|true|on) indicates
that interactive boot is enabled at boot time.
      Is it the case that Interactive boot is enabled at boot time?
      </question_text>
    </boolean_question>
    <boolean_question id="require_emergency_target_auth_question">
      <question_text>To check if authentication is required for emergency mode, run the following command:
$ grep sulogin /usr/lib/systemd/system/emergency.service
The output should be similar to the following, and the line must begin with
ExecStart and /sbin/sulogin.
    ExecStart=-/bin/sh -c "/sbin/sulogin; /usr/bin/systemctl --fail --no-block default"
      Is it the case that the output is different?
      </question_text>
    </boolean_question>
    <boolean_question id="require_singleuser_auth_question">
      <question_text>To check if authentication is required for single-user mode, run the following command:
$ grep sulogin /usr/lib/systemd/system/rescue.service
The output should be similar to the following, and the line must begin with
ExecStart and /sbin/sulogin.
    ExecStart=-/bin/sh -c "/sbin/sulogin; /usr/bin/systemctl --fail --no-block default"
      Is it the case that the output is different?
      </question_text>
    </boolean_question>
    <boolean_question id="package_screen_installed_question">
      <question_text>Run the following command to determine if the screen package is installed: $ rpm -q screen
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_opensc_installed_question">
      <question_text>Run the following command to determine if the opensc package is installed: $ rpm -q opensc
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_pcsc-lite_installed_question">
      <question_text>Run the following command to determine if the pcsc-lite package is installed: $ rpm -q pcsc-lite
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="install_smartcard_packages_question">
      <question_text>
'Run the following command to determine if the pam_pkcs11 package is installed:
$ rpm -q pam_pkcs11'
      Is it the case that smartcard software is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="service_pcscd_enabled_question">
      <question_text>

Run the following command to determine the current status of the
pcscd service:
$ systemctl is-active pcscd
If the service is running, it should return the following: active
      Is it the case that the pcscd service is not enabled?
      </question_text>
    </boolean_question>
    <boolean_question id="configure_opensc_card_drivers_question">
      <question_text>To verify that  is configured
as the smart card driver, run the following command:
$ grep card_drivers /etc/opensc.conf
The output should return something similar to:
card_drivers = ;
      Is it the case that the smart card driver is not configured correctly?
      </question_text>
    </boolean_question>
    <boolean_question id="configure_opensc_nss_db_question">
      <question_text>To verify that opensc is configured in the NSS database,
run the following command:
$ pkcs11-switch
The output should return opensc
      Is it the case that opensc is not in use by the nss database?
      </question_text>
    </boolean_question>
    <boolean_question id="force_opensc_card_drivers_question">
      <question_text>To verify that  is configured
as the smart card driver, run the following command:
$ grep force_card_driver /etc/opensc.conf
The output should return something similar to:
force_card_drivers = ;
      Is it the case that the smart card driver is not configured correctly?
      </question_text>
    </boolean_question>
    <boolean_question id="smartcard_auth_question">
      <question_text>Interview the SA to determine if all accounts not exempted by policy are
using CAC authentication. For DoD systems, the following systems and
accounts are exempt from using smart card (CAC) authentication:
SIPRNET systemsStandalone systemsApplication accountsTemporary employee accounts, such as students or interns, who cannot
easily receive a CAC or PIVOperational tactical locations that are not collocated with RAPIDS
workstations to issue CAC or ALTTest systems, such as those with an Interim Approval to Test (IATT) and
use a separate VPN, firewall, or security measure preventing access to
network and system components from outside the protection boundary
documented in the IATT.
      Is it the case that non-exempt accounts are not using CAC authentication?
      </question_text>
    </boolean_question>
    <boolean_question id="smartcard_configure_cert_checking_question">
      <question_text>To verify the operating system implements certificate status checking for PKI
authentication, run the following command:
$ sudo grep -i cert_policy /etc/pam_pkcs11/pam_pkcs11.conf
The output should return multiple lines similiar to the following:
cert_policy = ca, ocsp_on, signature;
cert_policy = ca, ocsp_on, signature;
cert_policy = ca, ocsp_on, signature;
      Is it the case that ocsp_on is not configured?
      </question_text>
    </boolean_question>
    <boolean_question id="account_unique_id_question">
      <question_text>Run the following command to check for duplicate account names:
Check that the operating system contains no duplicate UIDs for interactive users by running the following command:
# awk -F ":" 'list[$3]++{print $1, $3}' /etc/passwd
If output is produced, this is a finding.
Configure the operating system to contain no duplicate UIDs for interactive users.
Edit the file "/etc/passwd" and provide each interactive user account that has a duplicate UID with a unique UID.
      Is it the case that a line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_authorized_local_users_question">
      <question_text>To verify that there are no unauthorized local user accounts, run the following command:
$ less /etc/passwd 
Inspect the results, and if unauthorized local user accounts exist, remove them by running
the following command:
$ sudo userdel unauthorized_user
      Is it the case that there are unauthorized local user accounts on the system?
      </question_text>
    </boolean_question>
    <boolean_question id="account_disable_post_pw_expiration_question">
      <question_text>To verify the INACTIVE setting, run the following command:
$ grep "INACTIVE" /etc/default/useradd
The output should indicate the INACTIVE configuration option is set
to an appropriate integer as shown in the example below:
$ grep "INACTIVE" /etc/default/useradd
INACTIVE=
      Is it the case that the value of INACTIVE is greater than the expected value?
      </question_text>
    </boolean_question>
    <boolean_question id="account_unique_name_question">
      <question_text>To verify all accounts have unique names, run the following command:
$ sudo getent passwd | awk -F: '{ print $1}' | uniq -d
No output should be returned.
      Is it the case that a line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="account_use_centralized_automated_auth_question">
      <question_text>Verify that the system is integrated with a centralized authentication mechanism
such as as Active Directory, Kerberos, Directory Server, etc. that has
automated account mechanisms in place.
      Is it the case that the system is not using a centralized authentication mechanism, or it is not automated?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_maximum_age_login_defs_question">
      <question_text>To check the maximum password age, run the command:
$ grep PASS_MAX_DAYS /etc/login.defs
The DoD and FISMA requirement is 60.
A value of 180 days is sufficient for many environments.
      Is it the case that PASS_MAX_DAYS is not set equal to or greater than the required value?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_minimum_age_login_defs_question">
      <question_text>To check the minimum password age, run the command:
$ grep PASS_MIN_DAYS /etc/login.defs
      Is it the case that it is not equal to or greater than the required value?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_password_minlen_login_defs_question">
      <question_text>To check the minimum password length, run the command:
$ grep PASS_MIN_LEN /etc/login.defs
The DoD requirement is 15.
      Is it the case that it is not set to the required value?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_password_set_max_life_existing_question">
      <question_text>Check whether the maximum time period for existing passwords is restricted
to 60 days by running the following command for each user:
$ sudo chage -l USER | grep Maximum
The output for each user should return something similary to the following:
Maximum number of days between password change\t\t: 60
      Is it the case that existing passwords are not configured correctly?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_password_set_min_life_existing_question">
      <question_text>Check whether the minimum time period between password changes for each
user account is one day or greater by running the following command for
each user:
$ sudo chage -l USER | grep Minimum
The output for each user should return something similary to the following:
Minimum number of days between password change\t\t: 1
      Is it the case that existing passwords are not configured correctly?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_password_warn_age_login_defs_question">
      <question_text>To check the password warning age, run the command:
$ grep PASS_WARN_AGE /etc/login.defs
The DoD requirement is 7.
      Is it the case that it is not set to the required value?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_password_all_shadowed_question">
      <question_text>To check that no password hashes are stored in
/etc/passwd, run the following command:
awk '!/\S:x|\*/ {print}' /etc/passwd
If it produces any output, then a password hash is
stored in /etc/passwd.
      Is it the case that any stored hashes are found in /etc/passwd?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_password_pam_unix_rounds_password_auth_question">
      <question_text>To verify the number of rounds for the password hashing algorithm is compliant, run the following command:
$ grep rounds /etc/pam.d/password-auth
The output should show the following match:
rounds=
      Is it the case that it does not set the appropriate number of hashing rounds?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_password_pam_unix_rounds_system_auth_question">
      <question_text>To verify the number of rounds for the password hashing algorithm is compliant, run the following command:
$ grep rounds /etc/pam.d/system-auth
The output should show the following match:
rounds=
      Is it the case that it does not set the appropriate number of hashing rounds?
      </question_text>
    </boolean_question>
    <boolean_question id="gid_passwd_group_same_question">
      <question_text>To ensure all GIDs referenced in /etc/passwd are defined in /etc/group,
run the following command:
$ sudo pwck -qr
There should be no output.
      Is it the case that GIFs referenced in /etc/passwd are returned as not defined in /etc/group?
      </question_text>
    </boolean_question>
    <boolean_question id="no_empty_passwords_question">
      <question_text>To verify that null passwords cannot be used, run the following command:

$ grep nullok /etc/pam.d/system-auth

If this produces any output, it may be possible to log into accounts
with empty passwords. Remove any instances of the nullok option to
prevent logins with empty passwords.
      Is it the case that NULL passwords can be used?
      </question_text>
    </boolean_question>
    <boolean_question id="no_legacy_plus_entries_etc_group_question">
      <question_text>To check for legacy lines in /etc/group, run the following command:
 grep '^\+' /etc/group
The command should not return any output.
      Is it the case that the file contains legacy lines?
      </question_text>
    </boolean_question>
    <boolean_question id="no_legacy_plus_entries_etc_passwd_question">
      <question_text>To check for legacy lines in /etc/passwd, run the following command:
 grep '^\+' /etc/passwd
The command should not return any output.
      Is it the case that the file contains legacy lines?
      </question_text>
    </boolean_question>
    <boolean_question id="no_legacy_plus_entries_etc_shadow_question">
      <question_text>To check for legacy lines in /etc/shadow, run the following command:
 grep '^\+' /etc/shadow
The command should not return any output.
      Is it the case that the file contains legacy lines?
      </question_text>
    </boolean_question>
    <boolean_question id="no_netrc_files_question">
      <question_text>To check the system for the existence of any .netrc files,
run the following command:
$ sudo find /home -xdev -name .netrc
      Is it the case that any .netrc files exist?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_no_uid_except_zero_question">
      <question_text>To list all password file entries for accounts with UID 0, run the
following command:
$ awk -F: '($3 == \"0\") {print}' /etc/passwd
This should print only one line, for the user root.

If there is a finding, change the UID of the failing (non-root) user. If
the account is associated with the system commands or applications the UID
should be changed to one greater than 0 but less than
1000. Otherwise assign a UID of greater than 1000 that
has not already been assigned.
      Is it the case that any account other than root has a UID of 0?
      </question_text>
    </boolean_question>
    <boolean_question id="no_direct_root_logins_question">
      <question_text>To ensure root may not directly login to the system over physical consoles,
run the following command:
cat /etc/securetty
If any output is returned, this is a finding.
      Is it the case that the /etc/securetty file is not empty?
      </question_text>
    </boolean_question>
    <boolean_question id="no_password_auth_for_systemaccounts_question">
      <question_text>To obtain a listing of all users and the contents of their shadow password
field, run the command:
$ sudo awk -F: '$1 !~ /^root$/ &amp;&amp; $2 !~ /^[!*]/ {print $1 ":" $2}' /etc/shadow
Identify the system accounts from this listing. These will primarily be the accounts
with UID numbers less than UID_MIN, other than root. Value of the UID_MIN
directive is set in /etc/login.defs configuration file. In the default
configuration, UID_MIN is set to 500.
      Is it the case that it is not?
      </question_text>
    </boolean_question>
    <boolean_question id="no_root_webbrowsing_question">
      <question_text>Check the root home directory for a .mozilla directory. If
one exists, ensure browsing is limited to local service administration.
      Is it the case that this is not the case?
      </question_text>
    </boolean_question>
    <boolean_question id="no_shelllogin_for_systemaccounts_question">
      <question_text>To obtain a listing of all users, their UIDs, and their shells, run the
command: $ awk -F: '{print $1 ":" $3 ":" $7}' /etc/passwd Identify
the system accounts from this listing. These will primarily be the accounts
with UID numbers less than UID_MIN, other than root. Value of the UID_MIN
directive is set in /etc/login.defs configuration file. In the default
configuration UID_MIN is set to 1000.
      Is it the case that any system account (other than root) has a login shell?
      </question_text>
    </boolean_question>
    <boolean_question id="restrict_serial_port_logins_question">
      <question_text>To check for serial port entries which permit root login,
run the following command:
$ sudo grep ^ttyS/[0-9] /etc/securetty
If any output is returned, then root login over serial ports is permitted.
      Is it the case that root login over serial ports is permitted?
      </question_text>
    </boolean_question>
    <boolean_question id="root_path_default_question">
      <question_text>To view the root user's PATH, run the following command:
$ sudo env | grep PATH
If correctly configured, the PATH must: use vendor default settings,
have no empty entries, and have no entries beginning with a character
other than a slash (/).
      Is it the case that any of these conditions are not met?
      </question_text>
    </boolean_question>
    <boolean_question id="securetty_root_login_console_only_question">
      <question_text>To check for virtual console entries which permit root login, run the
following command:
$ sudo grep ^vc/[0-9] /etc/securetty
If any output is returned, then root logins over virtual console devices is permitted.
      Is it the case that root login over virtual console devices is permitted?
      </question_text>
    </boolean_question>
    <boolean_question id="use_pam_wheel_for_su_question">
      <question_text>Run the following command to check if the line is present:
grep pam_wheel /etc/pam.d/su
The output should contain the following line:
auth             required        pam_wheel.so use_uid
      Is it the case that the line is not in the file or it is commented?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_have_homedir_login_defs_question">
      <question_text>Check if the system is configured to create home directories for local interactive users with the following command:

$ sudo grep create_home /etc/login.defs

      Is it the case that the value of CREATE_HOME is not set to yes, is missing, or the line is commented out?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_logon_fail_delay_question">
      <question_text>Verify the FAIL_DELAY setting is configured correctly in the /etc/login.defs file by
running the following command:
$ sudo grep -i "FAIL_DELAY" /etc/login.defs
All output must show the value of FAIL_DELAY set as shown in the below:
$ sudo grep -i "FAIL_DELAY" /etc/login.defs
FAIL_DELAY 
      Is it the case that the above command returns no output, or FAIL_DELAY is configured less than the expected value?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_max_concurrent_login_sessions_question">
      <question_text>Run the following command to ensure the maxlogins value is
configured for all users on the system:
# grep "maxlogins" /etc/security/limits.conf
You should receive output similar to the following:
*\t\thard\tmaxlogins\t
      Is it the case that maxlogins is not equal to or less than the expected value?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_polyinstantiated_tmp_question">
      <question_text>Run the following command to ensure that /tmp is configured as a
polyinstantiated directory:
$ sudo grep /tmp /etc/security/namespace.conf
The output should return the following:
/tmp     /tmp/tmp-inst/            level      root,adm
      Is it the case that is not configured?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_polyinstantiated_var_tmp_question">
      <question_text>Run the following command to ensure that /var/tmp is configured as a
polyinstantiated directory:
$ sudo grep /var/tmp /etc/security/namespace.conf
The output should return the following:
/var/tmp /var/tmp/tmp-inst/    level      root,adm
      Is it the case that is not configured?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_tmout_question">
      <question_text>Run the following command to ensure the TMOUT value is configured for all users
on the system:

$ sudo grep TMOUT /etc/profile /etc/profile.d/*.sh

The output should return the following:
TMOUT=
      Is it the case that value of TMOUT is not less than or equal to expected setting?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_user_dot_group_ownership_question">
      <question_text>To verify the local initialization files of all local interactive users are group-
owned by the appropriate user, inspect the primary group of the respective
users in /etc/passwd and verify all initialization files under the
respective users home directory. Check the group owner of all local interactive users
initialization files.
      Is it the case that they are not?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_user_dot_no_world_writable_programs_question">
      <question_text>To verify that local initialization files do not execute world-writable programs,
execute the following command:
$ sudo find /home -perm -002 -type f -name ".[^.]*" -exec ls -ld {} \;
There should be no output.
      Is it the case that files are executing world-writable programs?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_user_dot_user_ownership_question">
      <question_text>To verify all local initialization files for interactive users are owned by the
primary user, run the following command:
$ sudo ls -al /home/USER/.*
The user initialization files should be owned by USER.
      Is it the case that they are not?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_user_home_paths_only_question">
      <question_text>To verify that all interactive user initialization files executable search
path statements do not contain statements that will reference a working
directory other than the users home directory, run the following command:
$ sudo grep -r PATH /home/
Inspect the output for any PATH is references directories outside the home directory.
      Is it the case that paths contain more than local home directories?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_user_interactive_home_directory_defined_question">
      <question_text>To verify interactive users on the system have a home directory assigned,
run the following command:
$ sudo awk -F":" '{print $1 ":" $6}' /etc/passwd
Inspect the output and verify that all interactive users have a home directory
defined.
      Is it the case that users home directory is not defined?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_user_interactive_home_directory_exists_question">
      <question_text>To verify the assigned home directory of all interactive users on the system
exist, run the following command:
$ sudo pwck -r
The output should not return any interactive users.
      Is it the case that users home directory does not exist?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_users_home_files_groupownership_question">
      <question_text>To verify all files and directories in interactive user home directory are
group-owned by a group the user is a member of, run the
following command:
$ sudo ls -lLR /home/USER
      Is it the case that the group ownership is incorrect?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_users_home_files_ownership_question">
      <question_text>To verify all files and directories in a local interactive user's
home directory have a valid owner, run the following command:
$ sudo ls -lLR /home/USER
      Is it the case that the user ownership is incorrect?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_users_home_files_permissions_question">
      <question_text>To verify all files and directories contained in interactive user home
directory, excluding local initialization files, have a mode of 0750,
run the following command:
$ sudo ls -lLR /home/USER
      Is it the case that home directory files or folders have incorrect permissions?
      </question_text>
    </boolean_question>
    <boolean_question id="file_groupownership_home_directories_question">
      <question_text>To verify the assigned home directory of all interactive users is group-
owned by that users primary GID, run the following command:
# ls -ld $(awk -F: '($3&gt;=1000)&amp;&amp;($7 !~ /nologin/){print $6}' /etc/passwd)
      Is it the case that the group ownership is incorrect?
      </question_text>
    </boolean_question>
    <boolean_question id="file_ownership_home_directories_question">
      <question_text>To verify the home directory ownership, run the following command:
# ls -ld $(awk -F: '($3&gt;=1000)&amp;&amp;($7 !~ /nologin/){print $6}' /etc/passwd)
      Is it the case that the user ownership is incorrect?
      </question_text>
    </boolean_question>
    <boolean_question id="file_permission_user_init_files_question">
      <question_text>To verify that all user initialization files have a mode of 0740 or
less permissive, run the following command:
$ sudo find /home -type f -name '\.*' \( -perm -0002 -o -perm -0020 \)
There should be no output.
      Is it the case that they are not 0740 or more permissive?
      </question_text>
    </boolean_question>
    <boolean_question id="file_permissions_home_directories_question">
      <question_text>To verify the assigned home directory of all interactive user home directories
have a mode of 0750 or less permissive, run the following command:
$ sudo ls -l /home
Inspect the output for any directories with incorrect permissions.
      Is it the case that they are more permissive?
      </question_text>
    </boolean_question>
    <boolean_question id="file_permissions_home_dirs_question">
      <question_text>To ensure the user home directory is not group-writable or world-readable, run the following:
# ls -ld /home/USER
      Is it the case that the user home directory is group-writable or world-readable?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_root_path_dirs_no_write_question">
      <question_text>To ensure write permissions are disabled for group and other
 for each element in root's path, run the following command:
# ls -ld DIR
      Is it the case that group or other write permissions exist?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_umask_etc_bashrc_question">
      <question_text>Verify the umask setting is configured correctly in the /etc/bashrc file by
running the following command:
# grep "umask" /etc/bashrc
All output must show the value of umask set as shown below:
# grep "umask" /etc/bashrc
umask 
umask 
      Is it the case that the above command returns no output, or if the umask is configured incorrectly?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_umask_etc_csh_cshrc_question">
      <question_text>Verify the umask setting is configured correctly in the /etc/csh.cshrc file by
running the following command:
# grep "umask" /etc/csh.cshrc
All output must show the value of umask set as shown in the below:
# grep "umask" /etc/csh.cshrc
umask 
      Is it the case that the above command returns no output, or if the umask is configured incorrectly?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_umask_etc_login_defs_question">
      <question_text>Verify the UMASK setting is configured correctly in the /etc/login.defs file by
running the following command:
# grep -i "UMASK" /etc/login.defs
All output must show the value of umask set as shown in the below:
# grep -i "UMASK" /etc/login.defs
umask 
      Is it the case that the above command returns no output, or if the umask is configured incorrectly?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_umask_etc_profile_question">
      <question_text>Verify the umask setting is configured correctly in the /etc/profile file by
running the following command:
# grep "umask" /etc/profile
All output must show the value of umask set as shown in the below:
# grep "umask" /etc/profile
umask 
      Is it the case that the above command returns no output, or if the umask is configured incorrectly?
      </question_text>
    </boolean_question>
    <boolean_question id="accounts_umask_interactive_users_question">
      <question_text>Verify the UMASK setting is not configured for interactive users,
run the following command:
$ sudo grep -ri "UMASK" /home
There should be no output.
      Is it the case that the above command returns no output, or if the umask is configured incorrectly?
      </question_text>
    </boolean_question>
    <boolean_question id="package_audispd-plugins_installed_question">
      <question_text>Run the following command to determine if the audispd-plugins package is installed: $ rpm -q audispd-plugins
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_audit-audispd-plugins_installed_question">
      <question_text>
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_audit_installed_question">
      <question_text>Run the following command to determine if the audit package is installed: $ rpm -q audit
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="service_auditd_enabled_question">
      <question_text>

Run the following command to determine the current status of the
auditd service:
$ systemctl is-active auditd
If the service is running, it should return the following: active
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="grub2_audit_argument_question">
      <question_text>
Inspect the form of default GRUB 2 command line for the Linux operating system
in /etc/default/grub. If it includes audit=1, then auditing
is enabled at boot time.
First check if the GRUB recovery is enabled:
$ grep 'GRUB_DISABLE_RECOVERY' /etc/default/grub
If this option is set to true, then check that a line is output by the following command:
$ grep 'GRUB_CMDLINE_LINUX_DEFAULT.*audit=1.*' /etc/default/grub
If the recovery is disabled, check the line with
$ grep 'GRUB_CMDLINE_LINUX.*audit=1.*' /etc/default/grub.
Moreover, current Grub2 config file in /etc/grub2/grub.cfg must be checked.
# grep vmlinuz /boot/grub2/grub.cfg | grep -v 'audit=1'
This command should not return any output. If it does, update the configuration with
# grub2-mkconfig -o /boot/grub2/grub.cfg

Alternatively, to ensure audit=1 is configured on all installed kernels, the
following command may be used:

$ sudo /sbin/grubby --update-kernel=ALL --args="audit=1"

      Is it the case that auditing is not enabled at boot time?
      </question_text>
    </boolean_question>
    <boolean_question id="grub2_audit_backlog_limit_argument_question">
      <question_text>Inspect the form of default GRUB 2 command line for the Linux operating system
in /etc/default/grub. If they include audit=1, then auditing
is enabled at boot time.

To ensure audit_backlog_limit=8192 is configured on all installed kernels, the
following command may be used:

$ sudo /sbin/grubby --update-kernel=ALL --args="audit_backlog_limit=8192"

      Is it the case that audit backlog limit is not configured?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_etc_group_open_question">
      <question_text>To determine if the system is configured to audit calls to the
open system call, run the following command:
preserve$ sudo grep "open" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_etc_group_open_by_handle_at_question">
      <question_text>To determine if the system is configured to audit calls to the
open_by_handle_at system call, run the following command:
preserve$ sudo grep "open_by_handle_at" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_etc_group_openat_question">
      <question_text>To determine if the system is configured to audit calls to the
openat system call, run the following command:
preserve$ sudo grep "openat" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_etc_gshadow_open_question">
      <question_text>To determine if the system is configured to audit calls to the
open system call, run the following command:
preserve$ sudo grep "open" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_etc_gshadow_open_by_handle_at_question">
      <question_text>To determine if the system is configured to audit calls to the
open_by_handle_at system call, run the following command:
preserve$ sudo grep "open_by_handle_at" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_etc_gshadow_openat_question">
      <question_text>To determine if the system is configured to audit calls to the
openat system call, run the following command:
preserve$ sudo grep "openat" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_etc_passwd_open_question">
      <question_text>To determine if the system is configured to audit calls to the
open system call, run the following command:
preserve$ sudo grep "open" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_etc_passwd_open_by_handle_at_question">
      <question_text>To determine if the system is configured to audit calls to the
open_by_handle_at system call, run the following command:
preserve$ sudo grep "open_by_handle_at" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_etc_passwd_openat_question">
      <question_text>To determine if the system is configured to audit calls to the
openat system call, run the following command:
preserve$ sudo grep "openat" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_etc_shadow_open_question">
      <question_text>To determine if the system is configured to audit calls to the
open system call, run the following command:
preserve$ sudo grep "open" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_etc_shadow_open_by_handle_at_question">
      <question_text>To determine if the system is configured to audit calls to the
open_by_handle_at system call, run the following command:
preserve$ sudo grep "open_by_handle_at" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_etc_shadow_openat_question">
      <question_text>To determine if the system is configured to audit calls to the
openat system call, run the following command:
preserve$ sudo grep "openat" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_mac_modification_question">
      <question_text>To determine if the system is configured to audit changes to its SELinux
configuration files, run the following command:
$ sudo auditctl -l | grep "dir=/etc/selinux"
If the system is configured to watch for changes to its SELinux
configuration, a line should be returned (including
perm=wa indicating permissions that are watched).
      Is it the case that the system is not configured to audit attempts to change the MAC policy?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_media_export_question">
      <question_text>To verify that auditing is configured for all media exportation events, run the following command:
$ sudo auditctl -l | grep syscall | grep mount
      Is it the case that there is no output?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_networkconfig_modification_question">
      <question_text>To determine if the system is configured to audit changes to its network configuration,
run the following command:
auditctl -l | egrep '(/etc/issue|/etc/issue.net|/etc/hosts|/etc/sysconfig/network)'
If the system is configured to watch for network configuration changes, a line should be returned for
each file specified (and perm=wa should be indicated for each).
      Is it the case that the system is not configured to audit changes of the network configuration?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_sysadmin_actions_question">
      <question_text>To verify that auditing is configured for system administrator actions, run the following command:
$ sudo auditctl -l | grep "watch=/etc/sudoers\|watch=/etc/sudoers.d\|-w /etc/sudoers\|-w /etc/sudoers.d"
      Is it the case that there is not output?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_system_shutdown_question">
      <question_text>To verify that the system will shutdown when auditd fails,
run the following command:
$ sudo grep "\-f 2" /etc/audit/audit.rules
The output should contain:
-f 2
      Is it the case that the system is not configured to shutdown on auditd failures?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_usergroup_modification_question">
      <question_text>To determine if the system is configured to audit account changes,
run the following command:
auditctl -l | egrep '(/etc/passwd|/etc/shadow|/etc/group|/etc/gshadow|/etc/security/opasswd)'
If the system is configured to watch for account changes, lines should be returned for
each file specified (and with perm=wa for each).
      Is it the case that the system is not configured to audit account changes?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_usergroup_modification_group_question">
      <question_text>To determine if the system is configured to audit account changes,
run the following command:

auditctl -l | egrep '(/etc/group)'

If the system is configured to watch for account changes, lines should be returned for
each file specified (and with perm=wa for each).
      Is it the case that the system is not configured to audit account changes?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_usergroup_modification_gshadow_question">
      <question_text>To determine if the system is configured to audit account changes,
run the following command:

auditctl -l | egrep '(/etc/gshadow)'

If the system is configured to watch for account changes, lines should be returned for
each file specified (and with perm=wa for each).
      Is it the case that the system is not configured to audit account changes?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_usergroup_modification_opasswd_question">
      <question_text>To determine if the system is configured to audit account changes,
run the following command:

auditctl -l | egrep '(/etc/security/opasswd)'

If the system is configured to watch for account changes, lines should be returned for
each file specified (and with perm=wa for each).
      Is it the case that the system is not configured to audit account changes?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_usergroup_modification_passwd_question">
      <question_text>To determine if the system is configured to audit account changes,
run the following command:

auditctl -l | egrep '(/etc/passwd)'

If the system is configured to watch for account changes, lines should be returned for
each file specified (and with perm=wa for each).
      Is it the case that the system is not configured to audit account changes?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_usergroup_modification_shadow_question">
      <question_text>To determine if the system is configured to audit account changes,
run the following command:

auditctl -l | egrep '(/etc/shadow)'

If the system is configured to watch for account changes, lines should be returned for
each file specified (and with perm=wa for each).
      Is it the case that the system is not configured to audit account changes?
      </question_text>
    </boolean_question>
    <boolean_question id="directory_access_var_log_audit_question">
      <question_text>To determine if the system is configured to audit accesses to
/var/log/audit directory, run the following command:
preserve$ sudo grep "dir=/var/log/audit" /etc/audit/audit.rules
If the system is configured to audit this activity, it will return a line.
      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="directory_permissions_var_log_audit_question">
      <question_text>Run the following command to check the mode of the system audit logs:
$ sudo ls -ld /var/log/audit
Audit log directories must be mode 0700 or less permissive.
      Is it the case that any are more permissive?
      </question_text>
    </boolean_question>
    <boolean_question id="file_ownership_var_log_audit_question">
      <question_text>
To properly set the owner of /var/log/audit, run the command:
$ sudo chown root /var/log/audit 

To properly set the owner of /var/log/audit/*, run the command:
$ sudo chown root /var/log/audit/* 
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="file_permissions_var_log_audit_question">
      <question_text>Run the following command to check the mode of the system audit logs:
$ sudo ls -l /var/log/audit
Audit logs must be mode 0640 or less permissive.
      Is it the case that any are more permissive?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_dac_modification_chmod_question">
      <question_text>To determine if the system is configured to audit calls to the
chmod system call, run the following command:
preserve$ sudo grep "chmod" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_dac_modification_chown_question">
      <question_text>To determine if the system is configured to audit calls to the
chown system call, run the following command:
preserve$ sudo grep "chown" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_dac_modification_fchmod_question">
      <question_text>To determine if the system is configured to audit calls to the
fchmod system call, run the following command:
preserve$ sudo grep "fchmod" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_dac_modification_fchmodat_question">
      <question_text>To determine if the system is configured to audit calls to the
fchmodat system call, run the following command:
preserve$ sudo grep "fchmodat" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_dac_modification_fchown_question">
      <question_text>To determine if the system is configured to audit calls to the
fchown system call, run the following command:
preserve$ sudo grep "fchown" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_dac_modification_fchownat_question">
      <question_text>To determine if the system is configured to audit calls to the
fchownat system call, run the following command:
preserve$ sudo grep "fchownat" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_dac_modification_fremovexattr_question">
      <question_text>To determine if the system is configured to audit calls to the
fremovexattr system call, run the following command:
preserve$ sudo grep "fremovexattr" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_dac_modification_fsetxattr_question">
      <question_text>To determine if the system is configured to audit calls to the
fsetxattr system call, run the following command:
preserve$ sudo grep "fsetxattr" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_dac_modification_lchown_question">
      <question_text>To determine if the system is configured to audit calls to the
lchown system call, run the following command:
preserve$ sudo grep "lchown" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_dac_modification_lremovexattr_question">
      <question_text>To determine if the system is configured to audit calls to the
lremovexattr system call, run the following command:
preserve$ sudo grep "lremovexattr" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_dac_modification_lsetxattr_question">
      <question_text>To determine if the system is configured to audit calls to the
lsetxattr system call, run the following command:
preserve$ sudo grep "lsetxattr" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_dac_modification_removexattr_question">
      <question_text>To determine if the system is configured to audit calls to the
removexattr system call, run the following command:
preserve$ sudo grep "removexattr" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_dac_modification_setxattr_question">
      <question_text>To determine if the system is configured to audit calls to the
setxattr system call, run the following command:
preserve$ sudo grep "setxattr" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_dac_modification_umount_question">
      <question_text>To determine if the system is configured to audit calls to the
umount system call, run the following command:
preserve$ sudo grep "umount" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_dac_modification_umount2_question">
      <question_text>To determine if the system is configured to audit calls to the
umount2 system call, run the following command:
preserve$ sudo grep "umount2" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_execution_chcon_question">
      <question_text>To verify that execution of the command is being audited, run the following command:
$ sudo grep "path=/usr/bin/chcon" /etc/audit/audit.rules /etc/audit/rules.d/*
The output should return something similar to:
-a always,exit -F path=/usr/bin/chcon -F auid&gt;=1000 -F auid!=unset -F key=privileged
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_execution_restorecon_question">
      <question_text>To verify that execution of the command is being audited, run the following command:
$ sudo grep "path=/usr/sbin/restorecon" /etc/audit/audit.rules /etc/audit/rules.d/*
The output should return something similar to:
-a always,exit -F path=/usr/sbin/restorecon -F auid&gt;=1000 -F auid!=unset -F key=privileged
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_execution_semanage_question">
      <question_text>To verify that execution of the command is being audited, run the following command:
$ sudo grep "path=/usr/sbin/semanage" /etc/audit/audit.rules /etc/audit/rules.d/*
The output should return something similar to:
-a always,exit -F path=/usr/sbin/semanage -F auid&gt;=1000 -F auid!=unset -F key=privileged
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_execution_setfiles_question">
      <question_text>To verify that execution of the command is being audited, run the following command:
$ sudo grep "path=/usr/sbin/setfiles" /etc/audit/audit.rules /etc/audit/rules.d/*
The output should return something similar to:
-a always,exit -F path=/usr/sbin/setfiles -F auid&gt;=1000 -F auid!=unset -F key=privileged
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_execution_setsebool_question">
      <question_text>To verify that execution of the command is being audited, run the following command:
$ sudo grep "path=/usr/sbin/setsebool" /etc/audit/audit.rules /etc/audit/rules.d/*
The output should return something similar to:
-a always,exit -F path=/usr/sbin/setsebool -F auid&gt;=1000 -F auid!=unset -F key=privileged
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_execution_seunshare_question">
      <question_text>To verify that execution of the command is being audited, run the following command:
$ sudo grep "path=/usr/sbin/seunshare" /etc/audit/audit.rules /etc/audit/rules.d/*
The output should return something similar to:
-a always,exit -F path=/usr/sbin/seunshare -F auid&gt;=1000 -F auid!=unset -F key=privileged
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_file_deletion_events_question">
      <question_text>To determine if the system is configured to audit calls to the
rmdir system call, run the following command:
preserve$ sudo grep "rmdir" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.
To determine if the system is configured to audit calls to the
unlink system call, run the following command:
preserve$ sudo grep "unlink" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.
To determine if the system is configured to audit calls to the
unlinkat system call, run the following command:
preserve$ sudo grep "unlinkat" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.
To determine if the system is configured to audit calls to the
rename system call, run the following command:
preserve$ sudo grep "rename" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.
To determine if the system is configured to audit calls to the
renameat system call, run the following command:
preserve$ sudo grep "renameat" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.
      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_file_deletion_events_rename_question">
      <question_text>To determine if the system is configured to audit calls to the
rename system call, run the following command:
preserve$ sudo grep "rename" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_file_deletion_events_renameat_question">
      <question_text>To determine if the system is configured to audit calls to the
renameat system call, run the following command:
preserve$ sudo grep "renameat" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_file_deletion_events_rmdir_question">
      <question_text>To determine if the system is configured to audit calls to the
rmdir system call, run the following command:
preserve$ sudo grep "rmdir" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_file_deletion_events_unlink_question">
      <question_text>To determine if the system is configured to audit calls to the
unlink system call, run the following command:
preserve$ sudo grep "unlink" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_file_deletion_events_unlinkat_question">
      <question_text>To determine if the system is configured to audit calls to the
unlinkat system call, run the following command:
preserve$ sudo grep "unlinkat" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_successful_file_modification_chmod_question">
      <question_text>To determine if the system is configured to audit successful calls
to the chmod system call, run the following command:
preserve$ sudo grep "chmod" /etc/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_successful_file_modification_chown_question">
      <question_text>To determine if the system is configured to audit successful calls
to the chown system call, run the following command:
preserve$ sudo grep "chown" /etc/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_successful_file_modification_creat_question">
      <question_text>To determine if the system is configured to audit successful calls
to the creat system call, run the following command:
preserve$ sudo grep "creat" /etc/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_successful_file_modification_fchmod_question">
      <question_text>To determine if the system is configured to audit successful calls
to the fchmod system call, run the following command:
preserve$ sudo grep "fchmod" /etc/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_successful_file_modification_fchmodat_question">
      <question_text>To determine if the system is configured to audit successful calls
to the fchmodat system call, run the following command:
preserve$ sudo grep "fchmodat" /etc/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_successful_file_modification_fchown_question">
      <question_text>To determine if the system is configured to audit successful calls
to the fchown system call, run the following command:
preserve$ sudo grep "fchown" /etc/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_successful_file_modification_fchownat_question">
      <question_text>To determine if the system is configured to audit successful calls
to the fchownat system call, run the following command:
preserve$ sudo grep "fchownat" /etc/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_successful_file_modification_fremovexattr_question">
      <question_text>To determine if the system is configured to audit successful calls
to the fremovexattr system call, run the following command:
preserve$ sudo grep "fremovexattr" /etc/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_successful_file_modification_fsetxattr_question">
      <question_text>To determine if the system is configured to audit successful calls
to the fsetxattr system call, run the following command:
preserve$ sudo grep "fsetxattr" /etc/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_successful_file_modification_ftruncate_question">
      <question_text>To determine if the system is configured to audit successful calls
to the ftruncate system call, run the following command:
preserve$ sudo grep "ftruncate" /etc/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_successful_file_modification_lchown_question">
      <question_text>To determine if the system is configured to audit successful calls
to the lchown system call, run the following command:
preserve$ sudo grep "lchown" /etc/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_successful_file_modification_lremovexattr_question">
      <question_text>To determine if the system is configured to audit successful calls
to the lremovexattr system call, run the following command:
preserve$ sudo grep "lremovexattr" /etc/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_successful_file_modification_lsetxattr_question">
      <question_text>To determine if the system is configured to audit successful calls
to the lsetxattr system call, run the following command:
preserve$ sudo grep "lsetxattr" /etc/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_successful_file_modification_open_question">
      <question_text>To determine if the system is configured to audit successful calls
to the open system call, run the following command:
preserve$ sudo grep "open" /etc/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_successful_file_modification_open_by_handle_at_question">
      <question_text>To determine if the system is configured to audit successful calls
to the open_by_handle_at system call, run the following command:
preserve$ sudo grep "open_by_handle_at" /etc/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_successful_file_modification_open_by_handle_at_o_creat_question">
      <question_text>To determine if the system is configured to audit successful calls
to the open_by_handle_at system call, run the following command:
preserve$ sudo grep "open_by_handle_at" /etc/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_successful_file_modification_open_by_handle_at_o_trunc_write_question">
      <question_text>To determine if the system is configured to audit successful calls
to the open_by_handle_at system call, run the following command:
preserve$ sudo grep "open_by_handle_at" /etc/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_successful_file_modification_open_o_creat_question">
      <question_text>To determine if the system is configured to audit successful calls
to the open system call, run the following command:
preserve$ sudo grep "open" /etc/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_successful_file_modification_open_o_trunc_write_question">
      <question_text>To determine if the system is configured to audit successful calls
to the open system call, run the following command:
preserve$ sudo grep "open" /etc/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_successful_file_modification_openat_question">
      <question_text>To determine if the system is configured to audit successful calls
to the openat system call, run the following command:
preserve$ sudo grep "openat" /etc/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_successful_file_modification_openat_o_creat_question">
      <question_text>To determine if the system is configured to audit successful calls
to the openat system call, run the following command:
preserve$ sudo grep "openat" /etc/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_successful_file_modification_openat_o_trunc_write_question">
      <question_text>To determine if the system is configured to audit successful calls
to the openat system call, run the following command:
preserve$ sudo grep "openat" /etc/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_successful_file_modification_removexattr_question">
      <question_text>To determine if the system is configured to audit successful calls
to the removexattr system call, run the following command:
preserve$ sudo grep "removexattr" /etc/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_successful_file_modification_rename_question">
      <question_text>To determine if the system is configured to audit successful calls
to the rename system call, run the following command:
preserve$ sudo grep "rename" /etc/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_successful_file_modification_renameat_question">
      <question_text>To determine if the system is configured to audit successful calls
to the renameat system call, run the following command:
preserve$ sudo grep "renameat" /etc/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_successful_file_modification_setxattr_question">
      <question_text>To determine if the system is configured to audit successful calls
to the setxattr system call, run the following command:
preserve$ sudo grep "setxattr" /etc/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_successful_file_modification_truncate_question">
      <question_text>To determine if the system is configured to audit successful calls
to the truncate system call, run the following command:
preserve$ sudo grep "truncate" /etc/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_successful_file_modification_unlink_question">
      <question_text>To determine if the system is configured to audit successful calls
to the unlink system call, run the following command:
preserve$ sudo grep "unlink" /etc/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_successful_file_modification_unlinkat_question">
      <question_text>To determine if the system is configured to audit successful calls
to the unlinkat system call, run the following command:
preserve$ sudo grep "unlinkat" /etc/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_question">
      <question_text>To verify that the audit system collects unauthorized file accesses, run the following commands:
$ sudo grep EACCES /etc/audit/audit.rules
$ sudo grep EPERM /etc/audit/audit.rules
      Is it the case that 32-bit and 64-bit system calls to creat, open, openat, open_by_handle_at, truncate, and ftruncate are not audited during EACCES and EPERM?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_chmod_question">
      <question_text>To determine if the system is configured to audit calls to the
chmod system call, run the following command:
preserve$ sudo grep "chmod" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_chown_question">
      <question_text>To determine if the system is configured to audit calls to the
chown system call, run the following command:
preserve$ sudo grep "chown" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_creat_question">
      <question_text>To determine if the system is configured to audit calls to the
creat system call, run the following command:
preserve$ sudo grep "creat" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_fchmod_question">
      <question_text>To determine if the system is configured to audit calls to the
fchmod system call, run the following command:
preserve$ sudo grep "fchmod" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_fchmodat_question">
      <question_text>To determine if the system is configured to audit calls to the
fchmodat system call, run the following command:
preserve$ sudo grep "fchmodat" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_fchown_question">
      <question_text>To determine if the system is configured to audit calls to the
fchown system call, run the following command:
preserve$ sudo grep "fchown" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_fchownat_question">
      <question_text>To determine if the system is configured to audit calls to the
fchownat system call, run the following command:
preserve$ sudo grep "fchownat" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_fremovexattr_question">
      <question_text>To determine if the system is configured to audit calls to the
fremovexattr system call, run the following command:
preserve$ sudo grep "fremovexattr" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_fsetxattr_question">
      <question_text>To determine if the system is configured to audit calls to the
fsetxattr system call, run the following command:
preserve$ sudo grep "fsetxattr" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_ftruncate_question">
      <question_text>To determine if the system is configured to audit calls to the
ftruncate system call, run the following command:
preserve$ sudo grep "ftruncate" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_lchown_question">
      <question_text>To determine if the system is configured to audit calls to the
lchown system call, run the following command:
preserve$ sudo grep "lchown" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_lremovexattr_question">
      <question_text>To determine if the system is configured to audit calls to the
lremovexattr system call, run the following command:
preserve$ sudo grep "lremovexattr" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_lsetxattr_question">
      <question_text>To determine if the system is configured to audit calls to the
lsetxattr system call, run the following command:
preserve$ sudo grep "lsetxattr" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_open_question">
      <question_text>To determine if the system is configured to audit calls to the
open system call, run the following command:
preserve$ sudo grep "open" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_open_by_handle_at_question">
      <question_text>To determine if the system is configured to audit calls to the
open_by_handle_at system call, run the following command:
preserve$ sudo grep "open_by_handle_at" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_open_by_handle_at_o_creat_question">
      <question_text>To determine if the system is configured to audit calls to the
open_by_handle_at system call, run the following command:
preserve$ sudo grep "open_by_handle_at" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_open_by_handle_at_o_trunc_write_question">
      <question_text>To determine if the system is configured to audit calls to the
open_by_handle_at system call, run the following command:
preserve$ sudo grep "open_by_handle_at" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_open_by_handle_at_rule_order_question">
      <question_text>To determine if the system is configured to audit calls to the
open_by_handle_at system call, run the following command:
preserve$ sudo grep "open_by_handle_at" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_open_o_creat_question">
      <question_text>To determine if the system is configured to audit calls to the
open system call, run the following command:
preserve$ sudo grep "open" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_open_o_trunc_write_question">
      <question_text>To determine if the system is configured to audit calls to the
open system call, run the following command:
preserve$ sudo grep "open" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_open_rule_order_question">
      <question_text>To determine if the system is configured to audit calls to the
open system call, run the following command:
preserve$ sudo grep "open" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_openat_question">
      <question_text>To determine if the system is configured to audit calls to the
openat system call, run the following command:
preserve$ sudo grep "openat" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_openat_o_creat_question">
      <question_text>To determine if the system is configured to audit calls to the
openat system call, run the following command:
preserve$ sudo grep "openat" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_openat_o_trunc_write_question">
      <question_text>To determine if the system is configured to audit calls to the
openat system call, run the following command:
preserve$ sudo grep "openat" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_openat_rule_order_question">
      <question_text>To determine if the system is configured to audit calls to the
openat system call, run the following command:
preserve$ sudo grep "openat" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_removexattr_question">
      <question_text>To determine if the system is configured to audit calls to the
removexattr system call, run the following command:
preserve$ sudo grep "removexattr" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_rename_question">
      <question_text>To determine if the system is configured to audit calls to the
rename system call, run the following command:
preserve$ sudo grep "rename" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_renameat_question">
      <question_text>To determine if the system is configured to audit calls to the
renameat system call, run the following command:
preserve$ sudo grep "renameat" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_setxattr_question">
      <question_text>To determine if the system is configured to audit calls to the
setxattr system call, run the following command:
preserve$ sudo grep "setxattr" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_truncate_question">
      <question_text>To determine if the system is configured to audit calls to the
truncate system call, run the following command:
preserve$ sudo grep "truncate" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_unlink_question">
      <question_text>To determine if the system is configured to audit calls to the
unlink system call, run the following command:
preserve$ sudo grep "unlink" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_unsuccessful_file_modification_unlinkat_question">
      <question_text>To determine if the system is configured to audit calls to the
unlinkat system call, run the following command:
preserve$ sudo grep "unlinkat" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_kernel_module_loading_question">
      <question_text>To determine if the system is configured to audit calls to the
init_module system call, run the following command:
preserve$ sudo grep "init_module" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.
To determine if the system is configured to audit calls to the
delete_module system call, run the following command:
preserve$ sudo grep "delete_module" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.
      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_kernel_module_loading_delete_question">
      <question_text>To determine if the system is configured to audit calls to the
delete_module system call, run the following command:
preserve$ sudo grep "delete_module" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_kernel_module_loading_finit_question">
      <question_text>To determine if the system is configured to audit calls to the
finit_module system call, run the following command:
preserve$ sudo grep "finit_module" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_kernel_module_loading_init_question">
      <question_text>To determine if the system is configured to audit calls to the
init_module system call, run the following command:
preserve$ sudo grep "init_module" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_login_events_faillock_question">
      <question_text>To verify that auditing is configured for system administrator actions, run the following command:
$ sudo auditctl -l | grep "watch=/var/run/faillock\|-w /var/run/faillock"
      Is it the case that there is not output?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_login_events_lastlog_question">
      <question_text>To verify that auditing is configured for system administrator actions, run the following command:
$ sudo auditctl -l | grep "watch=/var/log/lastlog\|-w /var/log/lastlog"
      Is it the case that there is not output?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_login_events_tallylog_question">
      <question_text>To verify that auditing is configured for system administrator actions, run the following command:
$ sudo auditctl -l | grep "watch=/var/log/tallylog\|-w /var/log/tallylog"
      Is it the case that there is not output?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_privileged_commands_question">
      <question_text>To verify that auditing of privileged command use is configured, run the
following command for each local partition PART to find relevant
setuid / setgid programs:
$ sudo find PART -xdev -type f -perm -4000 -o -type f -perm -2000 2&gt;/dev/null
Run the following command to verify entries in the audit rules for all programs
found with the previous command:
$ sudo grep path /etc/audit/audit.rules
It should be the case that all relevant setuid / setgid programs have a line
in the audit rules.
      Is it the case that it is not the case?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_privileged_commands_at_question">
      <question_text>To verify that auditing of privileged command use is configured, run the
following command:
$ sudo grep '\bat\b' /etc/audit/audit.rules /etc/audit/rules.d/*
It should return a relevant line in the audit rules.
      Is it the case that it is not the case?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_privileged_commands_chage_question">
      <question_text>To verify that auditing of privileged command use is configured, run the
following command:
$ sudo grep chage /etc/audit/audit.rules /etc/audit/rules.d/*
It should return a relevant line in the audit rules.
      Is it the case that it is not the case?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_privileged_commands_chsh_question">
      <question_text>To verify that auditing of privileged command use is configured, run the
following command:
$ sudo grep chsh /etc/audit/audit.rules /etc/audit/rules.d/*
It should return a relevant line in the audit rules.
      Is it the case that it is not the case?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_privileged_commands_crontab_question">
      <question_text>To verify that auditing of privileged command use is configured, run the
following command:
$ sudo grep crontab /etc/audit/audit.rules /etc/audit/rules.d/*
It should return a relevant line in the audit rules.
      Is it the case that it is not the case?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_privileged_commands_gpasswd_question">
      <question_text>To verify that auditing of privileged command use is configured, run the
following command:
$ sudo grep gpasswd /etc/audit/audit.rules /etc/audit/rules.d/*
It should return a relevant line in the audit rules.
      Is it the case that it is not the case?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_privileged_commands_mount_question">
      <question_text>To verify that auditing of privileged command use is configured, run the
following command:
$ sudo grep mount /etc/audit/audit.rules /etc/audit/rules.d/*
It should return a relevant line in the audit rules.
      Is it the case that it is not the case?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_privileged_commands_newgidmap_question">
      <question_text>To verify that auditing of privileged command use is configured, run the
following command:
$ sudo grep newgidmap /etc/audit/audit.rules /etc/audit/rules.d/*
It should return a relevant line in the audit rules.
      Is it the case that it is not the case?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_privileged_commands_newgrp_question">
      <question_text>To verify that auditing of privileged command use is configured, run the
following command:
$ sudo grep newgrp /etc/audit/audit.rules /etc/audit/rules.d/*
It should return a relevant line in the audit rules.
      Is it the case that it is not the case?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_privileged_commands_newuidmap_question">
      <question_text>To verify that auditing of privileged command use is configured, run the
following command:
$ sudo grep newuidmap /etc/audit/audit.rules /etc/audit/rules.d/*
It should return a relevant line in the audit rules.
      Is it the case that it is not the case?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_privileged_commands_pam_timestamp_check_question">
      <question_text>To verify that auditing of privileged command use is configured, run the
following command:
$ sudo grep pam_timestamp_check /etc/audit/audit.rules /etc/audit/rules.d/*
It should return a relevant line in the audit rules.
      Is it the case that it is not the case?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_privileged_commands_passwd_question">
      <question_text>To verify that auditing of privileged command use is configured, run the
following command:
$ sudo grep passwd /etc/audit/audit.rules /etc/audit/rules.d/*
It should return a relevant line in the audit rules.
      Is it the case that it is not the case?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_privileged_commands_postdrop_question">
      <question_text>To verify that auditing of privileged command use is configured, run the
following command:
$ sudo grep postdrop /etc/audit/audit.rules /etc/audit/rules.d/*
It should return a relevant line in the audit rules.
      Is it the case that it is not the case?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_privileged_commands_postqueue_question">
      <question_text>To verify that auditing of privileged command use is configured, run the
following command:
$ sudo grep postqueue /etc/audit/audit.rules /etc/audit/rules.d/*
It should return a relevant line in the audit rules.
      Is it the case that it is not the case?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_privileged_commands_pt_chown_question">
      <question_text>To verify that auditing of privileged command use is configured, run the
following command:
$ sudo grep pt_chown /etc/audit/audit.rules /etc/audit/rules.d/*
It should return a relevant line in the audit rules.
      Is it the case that it is not the case?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_privileged_commands_ssh_keysign_question">
      <question_text>To verify that auditing of privileged command use is configured, run the
following command:
$ sudo grep ssh-keysign /etc/audit/audit.rules /etc/audit/rules.d/*
It should return a relevant line in the audit rules.
      Is it the case that it is not the case?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_privileged_commands_su_question">
      <question_text>To verify that auditing of privileged command use is configured, run the
following command:
$ sudo grep su /etc/audit/audit.rules /etc/audit/rules.d/*
It should return a relevant line in the audit rules.
      Is it the case that it is not the case?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_privileged_commands_sudo_question">
      <question_text>To verify that auditing of privileged command use is configured, run the
following command:
$ sudo grep sudo /etc/audit/audit.rules /etc/audit/rules.d/*
It should return a relevant line in the audit rules.
      Is it the case that it is not the case?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_privileged_commands_sudoedit_question">
      <question_text>To verify that auditing of privileged command use is configured, run the
following command:
$ sudo grep sudoedit /etc/audit/audit.rules /etc/audit/rules.d/*
It should return a relevant line in the audit rules.
      Is it the case that it is not the case?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_privileged_commands_umount_question">
      <question_text>To verify that auditing of privileged command use is configured, run the
following command:
$ sudo grep umount /etc/audit/audit.rules /etc/audit/rules.d/*
It should return a relevant line in the audit rules.
      Is it the case that it is not the case?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_privileged_commands_unix_chkpwd_question">
      <question_text>To verify that auditing of privileged command use is configured, run the
following command:
$ sudo grep unix_chkpwd /etc/audit/audit.rules /etc/audit/rules.d/*
It should return a relevant line in the audit rules.
      Is it the case that it is not the case?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_privileged_commands_userhelper_question">
      <question_text>To verify that auditing of privileged command use is configured, run the
following command:
$ sudo grep userhelper /etc/audit/audit.rules /etc/audit/rules.d/*
It should return a relevant line in the audit rules.
      Is it the case that it is not the case?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_privileged_commands_usernetctl_question">
      <question_text>To verify that auditing of privileged command use is configured, run the
following command:
$ sudo grep usernetctl /etc/audit/audit.rules /etc/audit/rules.d/*
It should return a relevant line in the audit rules.
      Is it the case that it is not the case?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_time_adjtimex_question">
      <question_text>To determine if the system is configured to audit calls to the
adjtimex system call, run the following command:
preserve$ sudo grep "adjtimex" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_time_clock_settime_question">
      <question_text>To determine if the system is configured to audit calls to the
clock_settime system call, run the following command:
preserve$ sudo grep "clock_settime" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_time_settimeofday_question">
      <question_text>To determine if the system is configured to audit calls to the
settimeofday system call, run the following command:
preserve$ sudo grep "settimeofday" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.

      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_time_stime_question">
      <question_text>If the system is not configured to audit time changes, this is a finding.
If the system is 64-bit only, this is not applicable
ocil: |
To determine if the system is configured to audit calls to the
stime system call, run the following command:
preserve$ sudo grep "stime" /etc/audit/audit.*
If the system is configured to audit this activity, it will return a line.
      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_time_watch_localtime_question">
      <question_text>To determine if the system is configured to audit attempts to
alter time via the /etc/localtime file, run the following
command:
$ sudo auditctl -l | grep "watch=/etc/localtime"
If the system is configured to audit this activity, it will return a line.
      Is it the case that the system is not configured to audit time changes?
      </question_text>
    </boolean_question>
    <boolean_question id="auditd_audispd_configure_remote_server_question">
      <question_text>To verify the audispd plugin off-loads audit records onto a different system or
media from the system being audited, run the following command:

$ sudo grep -i remote_server /etc/audisp/audisp-remote.conf

The output should return something similar to
remote_server = 
      Is it the case that audispd is not sending logs to a remote system?
      </question_text>
    </boolean_question>
    <boolean_question id="auditd_audispd_disk_full_action_question">
      <question_text>Inspect /etc/audisp/audisp-remote.conf and locate the following line to
determine if the system is configured to either send to syslog, switch to single user mode,
or halt when the disk is full:
grep -i disk_full_action /etc/audisp/audisp-remote.conf
The output should return something similar to:
disk_full_action = single
Acceptable values also include syslog and
halt.
      Is it the case that the system is not configured to switch to single user mode for corrective action?
      </question_text>
    </boolean_question>
    <boolean_question id="auditd_audispd_encrypt_sent_records_question">
      <question_text>To verify the audispd plugin encrypts audit records off-loaded onto a different
system or media from the system being audited, run the following command:

$ sudo grep -i enable_krb5 /etc/audisp/audisp-remote.conf
The output should return the following:
enable_krb5 = yes
      Is it the case that audispd is not encrypting audit records when sent over the network?
      </question_text>
    </boolean_question>
    <boolean_question id="auditd_audispd_network_failure_action_question">
      <question_text>Inspect /etc/audisp/audisp-remote.conf and locate the following line to
determine if the system is configured to perform a correct action according to the policy:
grep -i network_failure_action /etc/audisp/audisp-remote.conf
The output should return:
network_failure_action = 
      Is it the case that the system is not configured to switch to single user mode for corrective action?
      </question_text>
    </boolean_question>
    <boolean_question id="auditd_audispd_syslog_plugin_activated_question">
      <question_text>To verify the audispd's syslog plugin is active, run the following command:

$ sudo grep active /etc/audisp/plugins.d/syslog.conf

If the plugin is active, the output will show yes.
      Is it the case that it is not activated?
      </question_text>
    </boolean_question>
    <boolean_question id="auditd_data_disk_error_action_question">
      <question_text>Inspect /etc/audit/auditd.conf and locate the following line to
determine if the system is configured to either log to syslog,
switch to single-user mode, execute a script,
or halt when the disk errors:
disk_error_action single
      Is it the case that the system is not configured to switch to single-user mode for corrective action?
      </question_text>
    </boolean_question>
    <boolean_question id="auditd_data_disk_full_action_question">
      <question_text>Inspect /etc/audit/auditd.conf and locate the following line to
determine if the system is configured to either log to syslog,
switch to single-user mode, execute a script,
or halt when the disk is out of space:
disk_full_action single
      Is it the case that the system is not configured to switch to single-user mode for corrective action?
      </question_text>
    </boolean_question>
    <boolean_question id="auditd_data_retention_action_mail_acct_question">
      <question_text>Inspect /etc/audit/auditd.conf and locate the following line to
determine if the system is configured to send email to an
account when it needs to notify an administrator:
action_mail_acct = 
      Is it the case that auditd is not configured to send emails per identified actions?
      </question_text>
    </boolean_question>
    <boolean_question id="auditd_data_retention_admin_space_left_action_question">
      <question_text>Inspect /etc/audit/auditd.conf and locate the following line to
determine if the system is configured to either suspend, switch to single user mode,
or halt when disk space has run low:
admin_space_left_action single
      Is it the case that the system is not configured to switch to single user mode for corrective action?
      </question_text>
    </boolean_question>
    <boolean_question id="auditd_data_retention_flush_question">
      <question_text>Inspect /etc/audit/auditd.conf and locate the following line to
determine if the system is configured to synchronize audit event data
with the log files on the disk:
$ sudo grep flush /etc/audit/auditd.conf
flush = DATA
Acceptable values are DATA, and SYNC. The setting is
case-insensitive.
      Is it the case that auditd is not configured to synchronously write audit event data to disk?
      </question_text>
    </boolean_question>
    <boolean_question id="auditd_data_retention_max_log_file_question">
      <question_text>Inspect /etc/audit/auditd.conf and locate the following line to
determine how much data the system will retain in each audit log file:
$ sudo grep max_log_file /etc/audit/auditd.conf
max_log_file = 6
      Is it the case that the system audit data threshold has not been properly configured?
      </question_text>
    </boolean_question>
    <boolean_question id="auditd_data_retention_max_log_file_action_question">
      <question_text>Inspect /etc/audit/auditd.conf and locate the following line to
determine if the system is configured to rotate logs when they reach their
maximum size:
$ sudo grep max_log_file_action /etc/audit/auditd.conf
max_log_file_action rotate
      Is it the case that the system has not been properly configured to rotate audit logs?
      </question_text>
    </boolean_question>
    <boolean_question id="auditd_data_retention_num_logs_question">
      <question_text>Inspect /etc/audit/auditd.conf and locate the following line to
determine how many logs the system is configured to retain after rotation:
$ sudo grep num_logs /etc/audit/auditd.conf
num_logs = 5
      Is it the case that the system log file retention has not been properly configured?
      </question_text>
    </boolean_question>
    <boolean_question id="auditd_data_retention_space_left_question">
      <question_text>Inspect /etc/audit/auditd.conf and locate the following line to
determine if the system is configured correctly:
space_left SIZE_in_MB
      Is it the case that the system is not configured a specfic size in MB to notify administrators of an issue?
      </question_text>
    </boolean_question>
    <boolean_question id="auditd_data_retention_space_left_action_question">
      <question_text>Inspect /etc/audit/auditd.conf and locate the following line to
determine if the system is configured to email the administrator when
disk space is starting to run low:
$ sudo grep space_left_action /etc/audit/auditd.conf
space_left_action
Acceptable values are email, suspend, single, and halt.
      Is it the case that the system is not configured to send an email to the system administrator when disk space is starting to run low?
      </question_text>
    </boolean_question>
    <boolean_question id="auditd_freq_question">
      <question_text>To verify that Audit Daemon is configured to flush to disk after
every 50 records, run the following command:
$ sudo grep freq /etc/audit/auditd.conf
The output should return the following:
freq = 50
      Is it the case that freq isn't set to 50?
      </question_text>
    </boolean_question>
    <boolean_question id="auditd_local_events_question">
      <question_text>To verify that Audit Daemon is configured to include local events, run the
following command:
$ sudo grep local_events /etc/audit/auditd.conf
The output should return the following:
local_events = yes
      Is it the case that local_events isn't set to yes?
      </question_text>
    </boolean_question>
    <boolean_question id="auditd_log_format_question">
      <question_text>To verify that Audit Daemon is configured to resolve all uid, gid, syscall,
architecture, and socket address information before writing the event to disk,
run the following command:
$ sudo grep log_format /etc/audit/auditd.conf
The output should return the following:
log_format = ENRICHED
      Is it the case that log_format isn't set to ENRICHED?
      </question_text>
    </boolean_question>
    <boolean_question id="auditd_name_format_question">
      <question_text>To verify that Audit Daemon is configured to record the hostname
in audit events, run the following command:
$ sudo grep name_format /etc/audit/auditd.conf
The output should return the following:
name_format = hostname
      Is it the case that name_format isn't set to hostname?
      </question_text>
    </boolean_question>
    <boolean_question id="auditd_overflow_action_question">
      <question_text>Verify the audit system is configured to take an appropriate action when the internal event queue is full:
$ sudo grep -i overflow_action /etc/audit/auditd.conf

The output should contain be like overflow_action = syslog

If the value of the "overflow_action" option is not set to syslog, 
single, halt or the line is commented out, ask the System Administrator
to indicate how the audit logs are off-loaded to a different system or media. 
      Is it the case that auditd overflow action is not setup correctly?
      </question_text>
    </boolean_question>
    <boolean_question id="auditd_write_logs_question">
      <question_text>To verify that Audit Daemon is configured to write logs to the disk, run the
following command:
$ sudo grep write_logs /etc/audit/auditd.conf
The output should return the following:
write_logs = yes
      Is it the case that write_logs isn't set to yes?
      </question_text>
    </boolean_question>
    <boolean_question id="audit_rules_for_ospp_question">
      <question_text>To verify that audit is configured for OSPP v4.2.1, run the following commands:
for file in "10-base-config" "11-loginuid" "30-ospp-v42" "43-module-load";do diff /etc/audit/rules.d/$file.rules /usr/share/doc/audit*/rules/$file.rules; done

If the system is configured properly, no lines should be returned.
      Is it the case that the files are not there or differ?
      </question_text>
    </boolean_question>
    <boolean_question id="grub2_vsyscall_argument_question">
      <question_text>Inspect the form of default GRUB 2 command line for the Linux operating system
in /etc/default/grub. If they include vsyscall=none,
then virtyal syscalls are not enabled at boot time.

To ensure vsyscall=none is configured on all installed kernels, the
following command may be used:

$ sudo /sbin/grubby --update-kernel=ALL --args="vsyscall=none

      Is it the case that vsyscalls are enabled?
      </question_text>
    </boolean_question>
    <boolean_question id="file_groupowner_grub2_cfg_question">
      <question_text>To check the group ownership of {{{ grub2_boot_path }}}/grub.cfg,
run the command:
$ ls -lL {{{ grub2_boot_path }}}/grub.cfg
If properly configured, the output should indicate the following group-owner:
root
      Is it the case that {{{ grub2_boot_path }}}/grub.cfg has group owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_owner_grub2_cfg_question">
      <question_text>To check the ownership of {{{ grub2_boot_path }}}/grub.cfg,
run the command:
$ ls -lL {{{ grub2_boot_path }}}/grub.cfg
If properly configured, the output should indicate the following owner:
root
      Is it the case that {{{ grub2_boot_path }}}/grub.cfg has owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_permissions_grub2_cfg_question">
      <question_text>To check the permissions of /boot/grub2/grub.cfg, run the command:
$ sudo ls -lL /boot/grub2/grub.cfg
If properly configured, the output should indicate the following
permissions: -rw-------
      Is it the case that it does not?
      </question_text>
    </boolean_question>
    <boolean_question id="grub2_admin_username_question">
      <question_text>To verify the boot loader superuser account has been set, run the following
command:
sudo grep -A1 "superusers" /etc/grub2.cfg
The output should show the following:
set superusers="superusers-account"
export superusers
where superusers-account is the actual account name different from common names like root,
admin, or administrator.
      Is it the case that it does not?
      </question_text>
    </boolean_question>
    <boolean_question id="grub2_no_removeable_media_question">
      <question_text>To verify the system is not configured to use a boot loader on removable media,
run the following command:
$ sudo grep "set root='hd0" /boot/grub2/grub.cfg
The output should return something similar to:
set root='hd0,msdos1'
usb0, cd, fd0, etc. are some examples of removeable
media which should not exist in the line:
set root='hd0,msdos1'
      Is it the case that it is not?
      </question_text>
    </boolean_question>
    <boolean_question id="grub2_password_question">
      <question_text>To verify the boot loader superuser password has been set, run the following
command:

sudo grep "superusers" /etc/grub2.cfg

The output should show the following:
password_pbkdf2 superusers-account ${GRUB2_PASSWORD}
To verify the boot loader superuser account password has been set,
and the password encrypted, run the following command:

sudo cat /boot/grub2/user.cfg
The output should be similar to:
GRUB2_PASSWORD=grub.pbkdf2.sha512.10000.C4E08AC72FBFF7E837FD267BFAD7AEB3D42DDC
2C99F2A94DD5E2E75C2DC331B719FE55D9411745F82D1B6CFD9E927D61925F9BBDD1CFAA0080E0
916F7AB46E0D.1302284FCCC52CD73BA3671C6C12C26FF50BA873293B24EE2A96EE3B57963E6D7
0C83964B473EC8F93B07FE749AA6710269E904A9B08A6BBACB00A2D242AD828
      Is it the case that it does not?
      </question_text>
    </boolean_question>
    <boolean_question id="file_groupowner_efi_grub2_cfg_question">
      <question_text>To check the group ownership of /boot/efi/EFI/redhat/grub.cfg,
run the command:
$ ls -lL /boot/efi/EFI/redhat/grub.cfg
If properly configured, the output should indicate the following group-owner:
root
      Is it the case that /boot/efi/EFI/redhat/grub.cfg has group owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_owner_efi_grub2_cfg_question">
      <question_text>To check the ownership of /boot/efi/EFI/redhat/grub.cfg,
run the command:
$ ls -lL /boot/efi/EFI/redhat/grub.cfg
If properly configured, the output should indicate the following owner:
root
      Is it the case that /boot/efi/EFI/redhat/grub.cfg has owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_permissions_efi_grub2_cfg_question">
      <question_text>To check the permissions of /boot/efi/EFI/redhat/grub.cfg, run the command:
$ sudo ls -lL /boot/efi/EFI/redhat/grub.cfg
If properly configured, the output should indicate the following
permissions: -rwx------
      Is it the case that it does not?
      </question_text>
    </boolean_question>
    <boolean_question id="grub2_uefi_admin_username_question">
      <question_text>To verify the boot loader superuser account has been set, run the following
command:
sudo grep -A1 "superusers" /etc/grub2-efi.cfg
The output should show the following:
set superusers="superusers-account"
export superusers
where superusers-account is the actual account name different from common names like root,
admin, or administrator.
      Is it the case that it does not?
      </question_text>
    </boolean_question>
    <boolean_question id="grub2_uefi_password_question">
      <question_text>To verify the boot loader superuser password has been set, run the following
command:

sudo grep "password" /etc/grub2-efi.cfg

The output should show the following:
password_pbkdf2 superusers-account ${GRUB2_PASSWORD}
To verify the boot loader superuser account password has been set,
and the password encrypted, run the following command:

sudo cat /boot/grub2/user.cfg
The output should be similar to:
GRUB2_PASSWORD=grub.pbkdf2.sha512.10000.C4E08AC72FBFF7E837FD267BFAD7AEB3D42DDC
2C99F2A94DD5E2E75C2DC331B719FE55D9411745F82D1B6CFD9E927D61925F9BBDD1CFAA0080E0
916F7AB46E0D.1302284FCCC52CD73BA3671C6C12C26FF50BA873293B24EE2A96EE3B57963E6D7
0C83964B473EC8F93B07FE749AA6710269E904A9B08A6BBACB00A2D242AD828
      Is it the case that it does not?
      </question_text>
    </boolean_question>
    <boolean_question id="uefi_no_removeable_media_question">
      <question_text>To verify the system is not configured to use a boot loader on removable media,
run the following command:
$ sudo grep "set root='hd0" /boot/efi/EFI/redhat/grub.cfg
The output should return something similar to:
set root='hd0,msdos1'
usb0, cd, fd0, etc. are some examples of removeable
media which should not exist in the line:
set root='hd0,msdos1'
      Is it the case that it is not?
      </question_text>
    </boolean_question>
    <boolean_question id="package_rsyslog_installed_question">
      <question_text>Run the following command to determine if the rsyslog package is installed: $ rpm -q rsyslog
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="service_rsyslog_enabled_question">
      <question_text>

Run the following command to determine the current status of the
rsyslog service:
$ systemctl is-active rsyslog
If the service is running, it should return the following: active
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="rsyslog_cron_logging_question">
      <question_text>To verify that cron is logging to rsyslog,
run the following command:
grep -rni "cron\.\*" /etc/rsyslog.*
The output should return some similar to:
cron.*                                                  /var/log/cron
      Is it the case that cron is not logging to rsyslog?
      </question_text>
    </boolean_question>
    <boolean_question id="rsyslog_encrypt_offload_actionsendstreamdriverauthmode_question">
      <question_text>Verify the operating system authenticates the remote logging server for off-loading audit logs with the following command:

$ sudo grep -i '$ActionSendStreamDriverAuthMode' /etc/rsyslog.conf /etc/rsyslog.d/*.conf
The output should be
$/etc/rsyslog.conf:$ActionSendStreamDriverAuthMode x509/name
      Is it the case that $ActionSendStreamDriverAuthMode in /etc/rsyslog.conf is not set to x509/name?
      </question_text>
    </boolean_question>
    <boolean_question id="rsyslog_encrypt_offload_actionsendstreamdrivermode_question">
      <question_text>Verify the operating system encrypts audit records off-loaded onto a different system
or media from the system being audited with the following commands:

$ sudo grep -i '$ActionSendStreamDriverMode' /etc/rsyslog.conf /etc/rsyslog.d/*.conf
The output should be
/etc/rsyslog.conf:$ActionSendStreamDriverMode 1
      Is it the case that rsyslogd ActionSendStreamDriverMode not set to 1?
      </question_text>
    </boolean_question>
    <boolean_question id="rsyslog_encrypt_offload_defaultnetstreamdriver_question">
      <question_text>Verify the operating system encrypts audit records off-loaded onto a different system
or media from the system being audited with the following commands:

$ sudo grep -i '$DefaultNetstreamDriver' /etc/rsyslog.conf /etc/rsyslog.d/*.conf
The output should be
/etc/rsyslog.conf:$DefaultNetstreamDriver gtls
      Is it the case that rsyslogd DefaultNetstreamDriver not set to gtls?
      </question_text>
    </boolean_question>
    <boolean_question id="rsyslog_files_groupownership_question">
      <question_text>The group-owner of all log files written by rsyslog should be .
These log files are determined by the second part of each Rule line in
/etc/rsyslog.conf and typically all appear in /var/log.
To see the group-owner of a given log file, run the following command:
$ ls -l LOGFILE
      Is it the case that the group-owner is not correct?
      </question_text>
    </boolean_question>
    <boolean_question id="rsyslog_files_ownership_question">
      <question_text>The owner of all log files written by rsyslog should be .
These log files are determined by the second part of each Rule line in
/etc/rsyslog.conf and typically all appear in /var/log.
To see the owner of a given log file, run the following command:
$ ls -l LOGFILE
      Is it the case that the owner is not correct?
      </question_text>
    </boolean_question>
    <boolean_question id="rsyslog_files_permissions_question">
      <question_text>The file permissions for all log files written by rsyslog should
be set to 600, or more restrictive. These log files are determined by the
second part of each Rule line in /etc/rsyslog.conf and typically
all appear in /var/log. To see the permissions of a given log
file, run the following command:
$ ls -l LOGFILE
The permissions should be 600, or more restrictive.
      Is it the case that the permissions are not correct?
      </question_text>
    </boolean_question>
    <boolean_question id="ensure_logrotate_activated_question">
      <question_text>To determine the status and frequency of logrotate, run the following command:
$ sudo grep logrotate /var/log/cron*
If logrotate is configured properly, output should include references to
/etc/cron.daily.
      Is it the case that logrotate is not configured to run daily?
      </question_text>
    </boolean_question>
    <boolean_question id="package_syslogng_installed_question">
      <question_text>Run the following command to determine if the syslog-ng-core package is installed: $ rpm -q syslog-ng-core
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="service_syslogng_enabled_question">
      <question_text>

Run the following command to determine the current status of the
syslog-ng service:
$ systemctl is-active syslog-ng
If the service is running, it should return the following: active
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="rsyslog_nolisten_question">
      <question_text>Display the contents of the configuration file:
cat /etc/rsyslog.conf
Make sure that the following lines are not present in the output:
$ModLoad imtcp
$InputTCPServerRun port
$ModLoad imudp
$UDPServerRun port
$ModLoad imrelp
$InputRELPServerRun port
      Is it the case that rsyslog accepts remote messages?
      </question_text>
    </boolean_question>
    <boolean_question id="rsyslog_remote_loghost_question">
      <question_text>To ensure logs are sent to a remote host, examine the file
/etc/rsyslog.conf.
If using UDP, a line similar to the following should be present:
 *.* @
If using TCP, a line similar to the following should be present:
 *.* @@
If using RELP, a line similar to the following should be present:
 *.* :omrelp:
      Is it the case that none of these are present?
      </question_text>
    </boolean_question>
    <boolean_question id="network_configure_name_resolution_question">
      <question_text>To verify that DNS servers have been configured properly, perform the following:
$ sudo grep nameserver /etc/resolv.conf
The output should return more than one nameserver entry.
      Is it the case that it does not exist or is not properly configured or less than 2 'nameserver' entries exist?
      </question_text>
    </boolean_question>
    <boolean_question id="network_sniffer_disabled_question">
      <question_text>To verify that Promiscuous mode of an interface is disabled, run the following command:
$ ip link | grep PROMISC
The output returned should not return any network device containing PROMISC.
      Is it the case that any network device is in promiscuous mode?
      </question_text>
    </boolean_question>
    <boolean_question id="package_firewalld_installed_question">
      <question_text>Run the following command to determine if the firewalld package is installed: $ rpm -q firewalld
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="service_firewalld_enabled_question">
      <question_text>

Run the following command to determine the current status of the
firewalld service:
$ systemctl is-active firewalld
If the service is running, it should return the following: active
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="configure_firewalld_ports_question">
      <question_text>Inspect the list of enabled firewall ports and verify they are configured
correctly by running the following command:
$ sudo firewall-cmd --list-all
      Is it the case that the default rules are not configured?
      </question_text>
    </boolean_question>
    <boolean_question id="configure_firewalld_rate_limiting_question">
      <question_text>To verify the operating system protects against or limits the effects of DoS
attacks by ensuring the operating system is implementing rate-limiting measures
on impacted network interfaces, run the following command:
$ sudo firewall-cmd --permanent --direct --get-rules ipv4 filter INPUT_direct
The output should return:
0 -p tcp -m limit --limit 25/minute --limit-burst 100 -j INPUT_ZONES
      Is it the case that firewalld is not rate limiting connections?
      </question_text>
    </boolean_question>
    <boolean_question id="set_firewalld_default_zone_question">
      <question_text>Inspect the file /etc/firewalld/firewalld.conf to determine
the default zone for the firewalld. It should be set to DefaultZone=drop:
$ sudo grep DefaultZone /etc/firewalld/firewalld.conf
      Is it the case that the default zone is not set to DROP?
      </question_text>
    </boolean_question>
    <boolean_question id="package_libreswan_installed_question">
      <question_text>Run the following command to determine if the libreswan package is installed: $ rpm -q libreswan
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="libreswan_approved_tunnels_question">
      <question_text>To check for configured IPsec connections (conn), perform the following:
grep -rni conn /etc/ipsec.conf /etc/ipsec.d/
Verify any returned results for organizational approval.
      Is it the case that the IPSec tunnels are not approved?
      </question_text>
    </boolean_question>
    <boolean_question id="package_iptables_installed_question">
      <question_text>Run the following command to determine if the iptables package is installed: $ rpm -q iptables
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="service_ip6tables_enabled_question">
      <question_text>If IPv6 is disabled, this is not applicable.



Run the following command to determine the current status of the
ip6tables service:
$ systemctl is-active ip6tables
If the service is running, it should return the following: active
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="service_iptables_enabled_question">
      <question_text>

Run the following command to determine the current status of the
iptables service:
$ systemctl is-active iptables
If the service is running, it should return the following: active
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="set_ip6tables_default_rule_question">
      <question_text>If IPv6 is disabled, this is not applicable.

Inspect the file /etc/sysconfig/ip6tables to determine
the default policy for the INPUT chain. It should be set to DROP:
$ sudo grep ":INPUT" /etc/sysconfig/ip6tables
      Is it the case that the default policy for the INPUT chain is not set to DROP?
      </question_text>
    </boolean_question>
    <boolean_question id="set_iptables_default_rule_question">
      <question_text>Inspect the file /etc/sysconfig/iptables to determine
the default policy for the INPUT chain. It should be set to DROP:
$ sudo grep ":INPUT" /etc/sysconfig/iptables
      Is it the case that the default policy for the INPUT chain is not set to DROP?
      </question_text>
    </boolean_question>
    <boolean_question id="set_iptables_default_rule_forward_question">
      <question_text>Run the following command to ensure the default FORWARD policy is DROP:
grep ":FORWARD" /etc/sysconfig/iptables
The output should be similar to the following:
$ sudo grep ":FORWARD" /etc/sysconfig/iptables
:FORWARD DROP [0:0
      Is it the case that the default policy for the FORWARD chain is not set to DROP?
      </question_text>
    </boolean_question>
    <boolean_question id="grub2_ipv6_disable_argument_question">
      <question_text>
Inspect the form of default GRUB2 command line for the Linux operating system
in /etc/default/grub. Check if it includes ipv6.disable=1.
First check if the GRUB recovery is enabled:
grep 'GRUB_DISABLE_RECOVERY' /etc/default/grub
If this option is set to true, then check that the following line is output by the following command:
grep 'GRUB_CMDLINE_LINUX_DEFAULT.*ipv6.disable=1.*' /etc/default/grub
If the recovery is disabled, check the line with
grep 'GRUB_CMDLINE_LINUX.*ipv6.disable=1.*' /etc/default/grub.
Moreover, current GRUB2 config file in /etc/grub2/grub.cfg must be checked.
sudo grep vmlinuz /boot/grub2/grub.cfg | grep -v 'ipv6.disable=1'
This command should not return any output. If it does, update the configuration with one of following commands:
sudo grub2-mkconfig -o /boot/grub2/grub.cfg
or
sudo /sbin/grubby --update-kernel=ALL --args="ipv6.disable=1"

      Is it the case that IPv6 is not disabled?
      </question_text>
    </boolean_question>
    <boolean_question id="kernel_module_ipv6_option_disabled_question">
      <question_text>If the system uses IPv6, this is not applicable.

If the system is configured to disable the
ipv6 kernel module, it will contain a line
of the form:
options ipv6 disable=1
Such lines may be inside any file in /etc/modprobe.d or the
deprecated/etc/modprobe.conf.  This permits insertion of the IPv6
kernel module (which other parts of the system expect to be present), but
otherwise keeps it inactive.  Run the following command to search for such
lines in all files in /etc/modprobe.d and the deprecated
/etc/modprobe.conf:
preserve$ grep -r ipv6 /etc/modprobe.conf /etc/modprobe.d
      Is it the case that the ipv6 kernel module is not disabled?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv6_conf_all_disable_ipv6_question">
      <question_text>If the system uses IPv6, this is not applicable.

If the system is configured to prevent the usage of the ipv6 on
network interfaces, it will contain a line of the form:
net.ipv6.conf.all.disable_ipv6 = 1
Such lines may be inside any file in the /etc/sysctl.d directory.
This permits insertion of the IPv6 kernel module (which other parts of the
system expect to be present), but otherwise keeps all network interfaces
from using IPv6. Run the following command to search for such lines in all
files in /etc/sysctl.d:
$ grep -r ipv6 /etc/sysctl.d
      Is it the case that the ipv6 support is disabled on all network interfaces?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv6_conf_default_disable_ipv6_question">
      <question_text>If the system uses IPv6, this is not applicable.

If the system is configured to prevent the usage of the ipv6 on
network interfaces, it will contain a line of the form:
net.ipv6.conf.default.disable_ipv6 = 1
Such lines may be inside any file in the /etc/sysctl.d directory.
This permits insertion of the IPv6 kernel module (which other parts of the
system expect to be present), but otherwise keeps network interfaces
from using IPv6. Run the following command to search for such lines in all
files in /etc/sysctl.d:
$ grep -r ipv6 /etc/sysctl.d
      Is it the case that the ipv6 support is disabled by default on network interfaces?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv6_conf_all_accept_ra_question">
      <question_text>The runtime status of the net.ipv6.conf.all.accept_ra kernel parameter can be queried
by running the following command:
$ sysctl net.ipv6.conf.all.accept_ra
The output of the command should indicate a value of 0.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv6.conf.all.accept_ra\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv6.conf.all.accept_ra = 0
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv6.conf.all.accept_ra = 0, and that one assignment
is returned when 
$ grep -r net.ipv6.conf.all.accept_ra /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv6_conf_all_accept_ra_defrtr_question">
      <question_text>The runtime status of the net.ipv6.conf.all.accept_ra_defrtr kernel parameter can be queried
by running the following command:
$ sysctl net.ipv6.conf.all.accept_ra_defrtr
The output of the command should indicate a value of 0.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv6.conf.all.accept_ra_defrtr\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv6.conf.all.accept_ra_defrtr = 0
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv6.conf.all.accept_ra_defrtr = 0, and that one assignment
is returned when 
$ grep -r net.ipv6.conf.all.accept_ra_defrtr /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv6_conf_all_accept_ra_pinfo_question">
      <question_text>The runtime status of the net.ipv6.conf.all.accept_ra_pinfo kernel parameter can be queried
by running the following command:
$ sysctl net.ipv6.conf.all.accept_ra_pinfo
The output of the command should indicate a value of 0.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv6.conf.all.accept_ra_pinfo\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv6.conf.all.accept_ra_pinfo = 0
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv6.conf.all.accept_ra_pinfo = 0, and that one assignment
is returned when 
$ grep -r net.ipv6.conf.all.accept_ra_pinfo /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv6_conf_all_accept_ra_rtr_pref_question">
      <question_text>The runtime status of the net.ipv6.conf.all.accept_ra_rtr_pref kernel parameter can be queried
by running the following command:
$ sysctl net.ipv6.conf.all.accept_ra_rtr_pref
The output of the command should indicate a value of 0.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv6.conf.all.accept_ra_rtr_pref\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv6.conf.all.accept_ra_rtr_pref = 0
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv6.conf.all.accept_ra_rtr_pref = 0, and that one assignment
is returned when 
$ grep -r net.ipv6.conf.all.accept_ra_rtr_pref /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv6_conf_all_accept_redirects_question">
      <question_text>The runtime status of the net.ipv6.conf.all.accept_redirects kernel parameter can be queried
by running the following command:
$ sysctl net.ipv6.conf.all.accept_redirects
The output of the command should indicate a value of 0.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv6.conf.all.accept_redirects\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv6.conf.all.accept_redirects = 0
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv6.conf.all.accept_redirects = 0, and that one assignment
is returned when 
$ grep -r net.ipv6.conf.all.accept_redirects /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv6_conf_all_accept_source_route_question">
      <question_text>The runtime status of the net.ipv6.conf.all.accept_source_route kernel parameter can be queried
by running the following command:
$ sysctl net.ipv6.conf.all.accept_source_route
The output of the command should indicate a value of 0.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv6.conf.all.accept_source_route\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv6.conf.all.accept_source_route = 0
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv6.conf.all.accept_source_route = 0, and that one assignment
is returned when 
$ grep -r net.ipv6.conf.all.accept_source_route /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv6_conf_all_autoconf_question">
      <question_text>The runtime status of the net.ipv6.conf.all.autoconf kernel parameter can be queried
by running the following command:
$ sysctl net.ipv6.conf.all.autoconf
The output of the command should indicate a value of 0.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv6.conf.all.autoconf\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv6.conf.all.autoconf = 0
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv6.conf.all.autoconf = 0, and that one assignment
is returned when 
$ grep -r net.ipv6.conf.all.autoconf /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv6_conf_all_forwarding_question">
      <question_text>The runtime status of the net.ipv6.conf.all.forwarding kernel parameter can be queried
by running the following command:
$ sysctl net.ipv6.conf.all.forwarding
The output of the command should indicate a value of 0.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv6.conf.all.forwarding\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv6.conf.all.forwarding = 0
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv6.conf.all.forwarding = 0, and that one assignment
is returned when 
$ grep -r net.ipv6.conf.all.forwarding /etc/sysctl.conf /etc/sysctl.d
is executed.
The ability to forward packets is only appropriate for routers.
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv6_conf_all_max_addresses_question">
      <question_text>The runtime status of the net.ipv6.conf.all.max_addresses kernel parameter can be queried
by running the following command:
$ sysctl net.ipv6.conf.all.max_addresses
The output of the command should indicate a value of 1.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv6.conf.all.max_addresses\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv6.conf.all.max_addresses = 1
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv6.conf.all.max_addresses = 1, and that one assignment
is returned when 
$ grep -r net.ipv6.conf.all.max_addresses /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv6_conf_all_router_solicitations_question">
      <question_text>The runtime status of the net.ipv6.conf.all.router_solicitations kernel parameter can be queried
by running the following command:
$ sysctl net.ipv6.conf.all.router_solicitations
The output of the command should indicate a value of 0.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv6.conf.all.router_solicitations\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv6.conf.all.router_solicitations = 0
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv6.conf.all.router_solicitations = 0, and that one assignment
is returned when 
$ grep -r net.ipv6.conf.all.router_solicitations /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv6_conf_default_accept_ra_question">
      <question_text>The runtime status of the net.ipv6.conf.default.accept_ra kernel parameter can be queried
by running the following command:
$ sysctl net.ipv6.conf.default.accept_ra
The output of the command should indicate a value of 0.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv6.conf.default.accept_ra\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv6.conf.default.accept_ra = 0
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv6.conf.default.accept_ra = 0, and that one assignment
is returned when 
$ grep -r net.ipv6.conf.default.accept_ra /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv6_conf_default_accept_ra_defrtr_question">
      <question_text>The runtime status of the net.ipv6.conf.default.accept_ra_defrtr kernel parameter can be queried
by running the following command:
$ sysctl net.ipv6.conf.default.accept_ra_defrtr
The output of the command should indicate a value of 0.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv6.conf.default.accept_ra_defrtr\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv6.conf.default.accept_ra_defrtr = 0
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv6.conf.default.accept_ra_defrtr = 0, and that one assignment
is returned when 
$ grep -r net.ipv6.conf.default.accept_ra_defrtr /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv6_conf_default_accept_ra_pinfo_question">
      <question_text>The runtime status of the net.ipv6.conf.default.accept_ra_pinfo kernel parameter can be queried
by running the following command:
$ sysctl net.ipv6.conf.default.accept_ra_pinfo
The output of the command should indicate a value of 0.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv6.conf.default.accept_ra_pinfo\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv6.conf.default.accept_ra_pinfo = 0
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv6.conf.default.accept_ra_pinfo = 0, and that one assignment
is returned when 
$ grep -r net.ipv6.conf.default.accept_ra_pinfo /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv6_conf_default_accept_ra_rtr_pref_question">
      <question_text>The runtime status of the net.ipv6.conf.default.accept_ra_rtr_pref kernel parameter can be queried
by running the following command:
$ sysctl net.ipv6.conf.default.accept_ra_rtr_pref
The output of the command should indicate a value of 0.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv6.conf.default.accept_ra_rtr_pref\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv6.conf.default.accept_ra_rtr_pref = 0
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv6.conf.default.accept_ra_rtr_pref = 0, and that one assignment
is returned when 
$ grep -r net.ipv6.conf.default.accept_ra_rtr_pref /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv6_conf_default_accept_redirects_question">
      <question_text>The runtime status of the net.ipv6.conf.default.accept_redirects kernel parameter can be queried
by running the following command:
$ sysctl net.ipv6.conf.default.accept_redirects
The output of the command should indicate a value of 0.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv6.conf.default.accept_redirects\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv6.conf.default.accept_redirects = 0
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv6.conf.default.accept_redirects = 0, and that one assignment
is returned when 
$ grep -r net.ipv6.conf.default.accept_redirects /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv6_conf_default_accept_source_route_question">
      <question_text>The runtime status of the net.ipv6.conf.default.accept_source_route kernel parameter can be queried
by running the following command:
$ sysctl net.ipv6.conf.default.accept_source_route
The output of the command should indicate a value of 0.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv6.conf.default.accept_source_route\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv6.conf.default.accept_source_route = 0
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv6.conf.default.accept_source_route = 0, and that one assignment
is returned when 
$ grep -r net.ipv6.conf.default.accept_source_route /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv6_conf_default_autoconf_question">
      <question_text>The runtime status of the net.ipv6.conf.default.autoconf kernel parameter can be queried
by running the following command:
$ sysctl net.ipv6.conf.default.autoconf
The output of the command should indicate a value of 0.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv6.conf.default.autoconf\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv6.conf.default.autoconf = 0
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv6.conf.default.autoconf = 0, and that one assignment
is returned when 
$ grep -r net.ipv6.conf.default.autoconf /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv6_conf_default_max_addresses_question">
      <question_text>The runtime status of the net.ipv6.conf.default.max_addresses kernel parameter can be queried
by running the following command:
$ sysctl net.ipv6.conf.default.max_addresses
The output of the command should indicate a value of 1.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv6.conf.default.max_addresses\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv6.conf.default.max_addresses = 1
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv6.conf.default.max_addresses = 1, and that one assignment
is returned when 
$ grep -r net.ipv6.conf.default.max_addresses /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv6_conf_default_router_solicitations_question">
      <question_text>The runtime status of the net.ipv6.conf.default.router_solicitations kernel parameter can be queried
by running the following command:
$ sysctl net.ipv6.conf.default.router_solicitations
The output of the command should indicate a value of 0.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv6.conf.default.router_solicitations\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv6.conf.default.router_solicitations = 0
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv6.conf.default.router_solicitations = 0, and that one assignment
is returned when 
$ grep -r net.ipv6.conf.default.router_solicitations /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv4_conf_all_accept_redirects_question">
      <question_text>The runtime status of the net.ipv4.conf.all.accept_redirects kernel parameter can be queried
by running the following command:
$ sysctl net.ipv4.conf.all.accept_redirects
The output of the command should indicate a value of 0.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv4.conf.all.accept_redirects\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv4.conf.all.accept_redirects = 0
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv4.conf.all.accept_redirects = 0, and that one assignment
is returned when 
$ grep -r net.ipv4.conf.all.accept_redirects /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv4_conf_all_accept_source_route_question">
      <question_text>The runtime status of the net.ipv4.conf.all.accept_source_route kernel parameter can be queried
by running the following command:
$ sysctl net.ipv4.conf.all.accept_source_route
The output of the command should indicate a value of 0.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv4.conf.all.accept_source_route\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv4.conf.all.accept_source_route = 0
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv4.conf.all.accept_source_route = 0, and that one assignment
is returned when 
$ grep -r net.ipv4.conf.all.accept_source_route /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv4_conf_all_log_martians_question">
      <question_text>The runtime status of the net.ipv4.conf.all.log_martians kernel parameter can be queried
by running the following command:
$ sysctl net.ipv4.conf.all.log_martians
The output of the command should indicate a value of 1.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv4.conf.all.log_martians\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv4.conf.all.log_martians = 1
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv4.conf.all.log_martians = 1, and that one assignment
is returned when 
$ grep -r net.ipv4.conf.all.log_martians /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv4_conf_all_rp_filter_question">
      <question_text>The runtime status of the net.ipv4.conf.all.rp_filter kernel parameter can be queried
by running the following command:
$ sysctl net.ipv4.conf.all.rp_filter
The output of the command should indicate a value of 1.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv4.conf.all.rp_filter\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv4.conf.all.rp_filter = 1
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv4.conf.all.rp_filter = 1, and that one assignment
is returned when 
$ grep -r net.ipv4.conf.all.rp_filter /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv4_conf_all_secure_redirects_question">
      <question_text>The runtime status of the net.ipv4.conf.all.secure_redirects kernel parameter can be queried
by running the following command:
$ sysctl net.ipv4.conf.all.secure_redirects
The output of the command should indicate a value of 0.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv4.conf.all.secure_redirects\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv4.conf.all.secure_redirects = 0
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv4.conf.all.secure_redirects = 0, and that one assignment
is returned when 
$ grep -r net.ipv4.conf.all.secure_redirects /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv4_conf_default_accept_redirects_question">
      <question_text>The runtime status of the net.ipv4.conf.default.accept_redirects kernel parameter can be queried
by running the following command:
$ sysctl net.ipv4.conf.default.accept_redirects
The output of the command should indicate a value of 0.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv4.conf.default.accept_redirects\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv4.conf.default.accept_redirects = 0
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv4.conf.default.accept_redirects = 0, and that one assignment
is returned when 
$ grep -r net.ipv4.conf.default.accept_redirects /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv4_conf_default_accept_source_route_question">
      <question_text>The runtime status of the net.ipv4.conf.default.accept_source_route kernel parameter can be queried
by running the following command:
$ sysctl net.ipv4.conf.default.accept_source_route
The output of the command should indicate a value of 0.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv4.conf.default.accept_source_route\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv4.conf.default.accept_source_route = 0
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv4.conf.default.accept_source_route = 0, and that one assignment
is returned when 
$ grep -r net.ipv4.conf.default.accept_source_route /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv4_conf_default_log_martians_question">
      <question_text>The runtime status of the net.ipv4.conf.default.log_martians kernel parameter can be queried
by running the following command:
$ sysctl net.ipv4.conf.default.log_martians
The output of the command should indicate a value of 1.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv4.conf.default.log_martians\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv4.conf.default.log_martians = 1
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv4.conf.default.log_martians = 1, and that one assignment
is returned when 
$ grep -r net.ipv4.conf.default.log_martians /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv4_conf_default_rp_filter_question">
      <question_text>The runtime status of the net.ipv4.conf.default.rp_filter kernel parameter can be queried
by running the following command:
$ sysctl net.ipv4.conf.default.rp_filter
The output of the command should indicate a value of 1.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv4.conf.default.rp_filter\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv4.conf.default.rp_filter = 1
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv4.conf.default.rp_filter = 1, and that one assignment
is returned when 
$ grep -r net.ipv4.conf.default.rp_filter /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv4_conf_default_secure_redirects_question">
      <question_text>The runtime status of the net.ipv4.conf.default.secure_redirects kernel parameter can be queried
by running the following command:
$ sysctl net.ipv4.conf.default.secure_redirects
The output of the command should indicate a value of 0.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv4.conf.default.secure_redirects\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv4.conf.default.secure_redirects = 0
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv4.conf.default.secure_redirects = 0, and that one assignment
is returned when 
$ grep -r net.ipv4.conf.default.secure_redirects /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv4_icmp_echo_ignore_broadcasts_question">
      <question_text>The runtime status of the net.ipv4.icmp_echo_ignore_broadcasts kernel parameter can be queried
by running the following command:
$ sysctl net.ipv4.icmp_echo_ignore_broadcasts
The output of the command should indicate a value of 1.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv4.icmp_echo_ignore_broadcasts\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv4.icmp_echo_ignore_broadcasts = 1
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv4.icmp_echo_ignore_broadcasts = 1, and that one assignment
is returned when 
$ grep -r net.ipv4.icmp_echo_ignore_broadcasts /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv4_icmp_ignore_bogus_error_responses_question">
      <question_text>The runtime status of the net.ipv4.icmp_ignore_bogus_error_responses kernel parameter can be queried
by running the following command:
$ sysctl net.ipv4.icmp_ignore_bogus_error_responses
The output of the command should indicate a value of 1.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv4.icmp_ignore_bogus_error_responses\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv4.icmp_ignore_bogus_error_responses = 1
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv4.icmp_ignore_bogus_error_responses = 1, and that one assignment
is returned when 
$ grep -r net.ipv4.icmp_ignore_bogus_error_responses /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv4_ip_local_port_range_question">
      <question_text>The runtime status of the net.ipv4.ip_local_port_range kernel parameter can be queried
by running the following command:
$ sysctl net.ipv4.ip_local_port_range
The output of the command should indicate a value of 32768 65535.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv4.ip_local_port_range\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv4.ip_local_port_range = 32768 65535
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv4.ip_local_port_range = 32768 65535, and that one assignment
is returned when 
$ grep -r net.ipv4.ip_local_port_range /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv4_tcp_invalid_ratelimit_question">
      <question_text>To verify that the operating system protects against or limits the effects of DoS
attacks by ensuring implementation of rate-limiting measures
on impacted network interfaces, run the following command:
# grep 'net.ipv4.tcp_invalid_ratelimit' /etc/sysctl.conf /etc/sysctl.d/*
The command should output the following line:
/etc/sysctl.conf:net.ipv4.tcp_invalid_ratelimit = 
The file where the line has been found can differ, but it must be either /etc/sysctl.conf
or a file located under the /etc/sysctl.d/ directory.
      Is it the case that rate limiting of duplicate TCP acknowledgments is not configured?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv4_tcp_rfc1337_question">
      <question_text>The runtime status of the net.ipv4.tcp_rfc1337 kernel parameter can be queried
by running the following command:
$ sysctl net.ipv4.tcp_rfc1337
The output of the command should indicate a value of 1.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv4.tcp_rfc1337\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv4.tcp_rfc1337 = 1
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv4.tcp_rfc1337 = 1, and that one assignment
is returned when 
$ grep -r net.ipv4.tcp_rfc1337 /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv4_tcp_syncookies_question">
      <question_text>The runtime status of the net.ipv4.tcp_syncookies kernel parameter can be queried
by running the following command:
$ sysctl net.ipv4.tcp_syncookies
The output of the command should indicate a value of 1.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv4.tcp_syncookies\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv4.tcp_syncookies = 1
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv4.tcp_syncookies = 1, and that one assignment
is returned when 
$ grep -r net.ipv4.tcp_syncookies /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv4_conf_all_send_redirects_question">
      <question_text>The runtime status of the net.ipv4.conf.all.send_redirects kernel parameter can be queried
by running the following command:
$ sysctl net.ipv4.conf.all.send_redirects
The output of the command should indicate a value of 0.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv4.conf.all.send_redirects\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv4.conf.all.send_redirects = 0
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv4.conf.all.send_redirects = 0, and that one assignment
is returned when 
$ grep -r net.ipv4.conf.all.send_redirects /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv4_conf_default_send_redirects_question">
      <question_text>The runtime status of the net.ipv4.conf.default.send_redirects kernel parameter can be queried
by running the following command:
$ sysctl net.ipv4.conf.default.send_redirects
The output of the command should indicate a value of 0.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv4.conf.default.send_redirects\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv4.conf.default.send_redirects = 0
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv4.conf.default.send_redirects = 0, and that one assignment
is returned when 
$ grep -r net.ipv4.conf.default.send_redirects /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_net_ipv4_ip_forward_question">
      <question_text>The runtime status of the net.ipv4.ip_forward kernel parameter can be queried
by running the following command:
$ sysctl net.ipv4.ip_forward
The output of the command should indicate a value of 0.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*net.ipv4.ip_forward\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
net.ipv4.ip_forward = 0
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains net.ipv4.ip_forward = 0, and that one assignment
is returned when 
$ grep -r net.ipv4.ip_forward /etc/sysctl.conf /etc/sysctl.d
is executed.
The ability to forward packets is only appropriate for routers.
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="kernel_module_dccp_disabled_question">
      <question_text>
If the system is configured to prevent the loading of the dccp kernel module,
it will contain lines inside any file in /etc/modprobe.d or the deprecated/etc/modprobe.conf.
These lines instruct the module loading system to run another program (such as /bin/true) upon a module install event.
Run the following command to search for such lines in all files in /etc/modprobe.d and the deprecated /etc/modprobe.conf:
$ grep -r dccp /etc/modprobe.conf /etc/modprobe.d
      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="kernel_module_rds_disabled_question">
      <question_text>
If the system is configured to prevent the loading of the rds kernel module,
it will contain lines inside any file in /etc/modprobe.d or the deprecated/etc/modprobe.conf.
These lines instruct the module loading system to run another program (such as /bin/true) upon a module install event.
Run the following command to search for such lines in all files in /etc/modprobe.d and the deprecated /etc/modprobe.conf:
$ grep -r rds /etc/modprobe.conf /etc/modprobe.d
      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="kernel_module_sctp_disabled_question">
      <question_text>
If the system is configured to prevent the loading of the sctp kernel module,
it will contain lines inside any file in /etc/modprobe.d or the deprecated/etc/modprobe.conf.
These lines instruct the module loading system to run another program (such as /bin/true) upon a module install event.
Run the following command to search for such lines in all files in /etc/modprobe.d and the deprecated /etc/modprobe.conf:
$ grep -r sctp /etc/modprobe.conf /etc/modprobe.d
      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="kernel_module_tipc_disabled_question">
      <question_text>
If the system is configured to prevent the loading of the tipc kernel module,
it will contain lines inside any file in /etc/modprobe.d or the deprecated/etc/modprobe.conf.
These lines instruct the module loading system to run another program (such as /bin/true) upon a module install event.
Run the following command to search for such lines in all files in /etc/modprobe.d and the deprecated /etc/modprobe.conf:
$ grep -r tipc /etc/modprobe.conf /etc/modprobe.d
      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="kernel_module_bluetooth_disabled_question">
      <question_text>
If the system is configured to prevent the loading of the bluetooth kernel module,
it will contain lines inside any file in /etc/modprobe.d or the deprecated/etc/modprobe.conf.
These lines instruct the module loading system to run another program (such as /bin/true) upon a module install event.
Run the following command to search for such lines in all files in /etc/modprobe.d and the deprecated /etc/modprobe.conf:
$ grep -r bluetooth /etc/modprobe.conf /etc/modprobe.d
      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="wireless_disable_interfaces_question">
      <question_text>Verify that there are no wireless interfaces configured on the system
with the following command:

$ sudo nmcli device
The output should contain the following:
wifi disconnected
      Is it the case that it is not?
      </question_text>
    </boolean_question>
    <boolean_question id="dir_perms_world_writable_root_owned_question">
      <question_text>The following command will discover and print world-writable directories that
are not owned by root.  Run it once for each local partition PART:
$ sudo find PART -xdev -type d -perm -0002 -uid +0 -print
      Is it the case that there is output?
      </question_text>
    </boolean_question>
    <boolean_question id="dir_perms_world_writable_sticky_bits_question">
      <question_text>To find world-writable directories that lack the sticky bit, run the following command:
$ sudo find / -xdev -type d -perm 002 ! -perm 1000
      Is it the case that any world-writable directories are missing the sticky bit?
      </question_text>
    </boolean_question>
    <boolean_question id="dir_perms_world_writable_system_owned_question">
      <question_text>The following command will discover and print world-writable directories that
are not owned by a system account, given the assumption that only system
accounts have a uid lower than 500.  Run it once for each local partition PART:
$ sudo find PART -xdev -type d -perm -0002 -uid +499 -print
      Is it the case that there is output?
      </question_text>
    </boolean_question>
    <boolean_question id="dir_perms_world_writable_system_owned_group_question">
      <question_text>The following command will discover and print world-writable directories that
are not group owned by a system account, given the assumption that only system
accounts have a gid lower than 1000.  Run it once for each local partition PART:
$ sudo find PART -xdev -type d -perm -0002 -gid +999 -print
      Is it the case that there is output?
      </question_text>
    </boolean_question>
    <boolean_question id="file_permissions_systemmap_question">
      <question_text>To check the permissions of /boot/Sysem.map-*,
run the command:
$ ls -l /boot/Sysem.map-*
If properly configured, the output should indicate the following permissions:
-rw-------
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="file_permissions_unauthorized_sgid_question">
      <question_text>To find SGID files, run the following command:
$ sudo find / -xdev -type f -perm -2000
      Is it the case that there is output?
      </question_text>
    </boolean_question>
    <boolean_question id="file_permissions_unauthorized_suid_question">
      <question_text>To find SUID files, run the following command:
$ sudo find / -xdev -type f -perm -4000
      Is it the case that only authorized files appear in the output of the find command?
      </question_text>
    </boolean_question>
    <boolean_question id="file_permissions_unauthorized_world_writable_question">
      <question_text>To find world-writable files, run the following command:
$ sudo find / -xdev -type f -perm -002
      Is it the case that there is output?
      </question_text>
    </boolean_question>
    <boolean_question id="file_permissions_ungroupowned_question">
      <question_text>The following command will discover and print any
files on local partitions which do not belong to a valid group.
$ df --local -P | awk '{if (NR!=1) print $6}' | sudo xargs -I '{}' find '{}' -xdev -nogroup

Either remove all files and directories from the system that do not have a valid group,
or assign a valid group with the chgrp command:
$ sudo chgrp group file
      Is it the case that there is output?
      </question_text>
    </boolean_question>
    <boolean_question id="no_files_unowned_by_user_question">
      <question_text>The following command will discover and print any
files on local partitions which do not belong to a valid user.
$ df --local -P | awk {'if (NR!=1) print $6'} | sudo xargs -I '{}' find '{}' -xdev -nouser

Either remove all files and directories from the system that do not have a
valid user, or assign a valid user to all unowned files and directories on
the system with the chown command:
$ sudo chown user file
      Is it the case that files exist that are not owned by a valid user?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_fs_protected_hardlinks_question">
      <question_text>The runtime status of the fs.protected_hardlinks kernel parameter can be queried
by running the following command:
$ sysctl fs.protected_hardlinks
The output of the command should indicate a value of 1.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*fs.protected_hardlinks\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
fs.protected_hardlinks = 1
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains fs.protected_hardlinks = 1, and that one assignment
is returned when 
$ grep -r fs.protected_hardlinks /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_fs_protected_symlinks_question">
      <question_text>The runtime status of the fs.protected_symlinks kernel parameter can be queried
by running the following command:
$ sysctl fs.protected_symlinks
The output of the command should indicate a value of 1.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*fs.protected_symlinks\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
fs.protected_symlinks = 1
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains fs.protected_symlinks = 1, and that one assignment
is returned when 
$ grep -r fs.protected_symlinks /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="file_groupowner_backup_etc_group_question">
      <question_text>To check the group ownership of /etc/group-,
run the command:
$ ls -lL /etc/group-
If properly configured, the output should indicate the following group-owner:
root
      Is it the case that /etc/group- has group owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_groupowner_backup_etc_gshadow_question">
      <question_text>To check the group ownership of /etc/gshadow-,
run the command:
$ ls -lL /etc/gshadow-
If properly configured, the output should indicate the following group-owner:
root
      Is it the case that /etc/gshadow- has group owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_groupowner_backup_etc_passwd_question">
      <question_text>To check the group ownership of /etc/passwd-,
run the command:
$ ls -lL /etc/passwd-
If properly configured, the output should indicate the following group-owner:
root
      Is it the case that /etc/passwd- has group owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_groupowner_backup_etc_shadow_question">
      <question_text>To check the group ownership of /etc/shadow-,
run the command:
$ ls -lL /etc/shadow-
If properly configured, the output should indicate the following group-owner:
root
      Is it the case that /etc/shadow- has group owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_groupowner_etc_group_question">
      <question_text>To check the group ownership of /etc/group,
run the command:
$ ls -lL /etc/group
If properly configured, the output should indicate the following group-owner:
root
      Is it the case that /etc/group has group owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_groupowner_etc_gshadow_question">
      <question_text>To check the group ownership of /etc/gshadow,
run the command:
$ ls -lL /etc/gshadow
If properly configured, the output should indicate the following group-owner:
root
      Is it the case that /etc/gshadow has group owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_groupowner_etc_passwd_question">
      <question_text>To check the group ownership of /etc/passwd,
run the command:
$ ls -lL /etc/passwd
If properly configured, the output should indicate the following group-owner:
root
      Is it the case that /etc/passwd has group owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_groupowner_etc_shadow_question">
      <question_text>To check the group ownership of /etc/shadow,
run the command:
$ ls -lL /etc/shadow
If properly configured, the output should indicate the following group-owner:
root
      Is it the case that /etc/shadow has group owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_owner_backup_etc_group_question">
      <question_text>To check the ownership of /etc/group-,
run the command:
$ ls -lL /etc/group-
If properly configured, the output should indicate the following owner:
root
      Is it the case that /etc/group- has owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_owner_backup_etc_gshadow_question">
      <question_text>To check the ownership of /etc/gshadow-,
run the command:
$ ls -lL /etc/gshadow-
If properly configured, the output should indicate the following owner:
root
      Is it the case that /etc/gshadow- has owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_owner_backup_etc_passwd_question">
      <question_text>To check the ownership of /etc/passwd-,
run the command:
$ ls -lL /etc/passwd-
If properly configured, the output should indicate the following owner:
root
      Is it the case that /etc/passwd- has owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_owner_backup_etc_shadow_question">
      <question_text>To check the ownership of /etc/shadow-,
run the command:
$ ls -lL /etc/shadow-
If properly configured, the output should indicate the following owner:
root
      Is it the case that /etc/shadow- has owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_owner_etc_group_question">
      <question_text>To check the ownership of /etc/group,
run the command:
$ ls -lL /etc/group
If properly configured, the output should indicate the following owner:
root
      Is it the case that /etc/group has owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_owner_etc_gshadow_question">
      <question_text>To check the ownership of /etc/gshadow,
run the command:
$ ls -lL /etc/gshadow
If properly configured, the output should indicate the following owner:
root
      Is it the case that /etc/gshadow has owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_owner_etc_passwd_question">
      <question_text>To check the ownership of /etc/passwd,
run the command:
$ ls -lL /etc/passwd
If properly configured, the output should indicate the following owner:
root
      Is it the case that /etc/passwd has owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_owner_etc_shadow_question">
      <question_text>To check the ownership of /etc/shadow,
run the command:
$ ls -lL /etc/shadow
If properly configured, the output should indicate the following owner:
root
      Is it the case that /etc/shadow has owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_permissions_backup_etc_group_question">
      <question_text>To check the permissions of /etc/group-,
run the command:
$ ls -l /etc/group-
If properly configured, the output should indicate the following permissions:
-rw-r--r--
      Is it the case that /etc/group- has unix mode -rw-r--r--?
      </question_text>
    </boolean_question>
    <boolean_question id="file_permissions_backup_etc_gshadow_question">
      <question_text>To check the permissions of /etc/gshadow-,
run the command:
$ ls -l /etc/gshadow-
If properly configured, the output should indicate the following permissions:
----------
      Is it the case that /etc/gshadow- has unix mode ----------?
      </question_text>
    </boolean_question>
    <boolean_question id="file_permissions_backup_etc_passwd_question">
      <question_text>To check the permissions of /etc/passwd-,
run the command:
$ ls -l /etc/passwd-
If properly configured, the output should indicate the following permissions:
-rw-r--r--
      Is it the case that /etc/passwd- has unix mode -rw-r--r--?
      </question_text>
    </boolean_question>
    <boolean_question id="file_permissions_backup_etc_shadow_question">
      <question_text>To check the permissions of /etc/shadow-,
run the command:
$ ls -l /etc/shadow-
If properly configured, the output should indicate the following permissions:
----------
      Is it the case that /etc/shadow- has unix mode ----------?
      </question_text>
    </boolean_question>
    <boolean_question id="file_permissions_etc_group_question">
      <question_text>To check the permissions of /etc/passwd,
run the command:
$ ls -l /etc/passwd
If properly configured, the output should indicate the following permissions:
-rw-r--r--
      Is it the case that /etc/group has unix mode -rw-r--r--?
      </question_text>
    </boolean_question>
    <boolean_question id="file_permissions_etc_gshadow_question">
      <question_text>To check the permissions of /etc/gshadow,
run the command:
$ ls -l /etc/gshadow
If properly configured, the output should indicate the following permissions:
----------
      Is it the case that /etc/gshadow has unix mode ----------?
      </question_text>
    </boolean_question>
    <boolean_question id="file_permissions_etc_passwd_question">
      <question_text>To check the permissions of /etc/passwd,
run the command:
$ ls -l /etc/passwd
If properly configured, the output should indicate the following permissions:
-rw-r--r--
      Is it the case that /etc/passwd has unix mode -rw-r--r--?
      </question_text>
    </boolean_question>
    <boolean_question id="file_permissions_etc_shadow_question">
      <question_text>To check the permissions of /etc/shadow,
run the command:
$ ls -l /etc/shadow
If properly configured, the output should indicate the following permissions:
----------
      Is it the case that /etc/shadow has unix mode ----------?
      </question_text>
    </boolean_question>
    <boolean_question id="file_groupowner_var_log_question">
      <question_text>To check the group ownership of /var/log,
run the command:
$ ls -lL /var/log
If properly configured, the output should indicate the following group-owner:
root
      Is it the case that /var/log has group owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_groupowner_var_log_messages_question">
      <question_text>To check the group ownership of /var/log/messages,
run the command:
$ ls -lL /var/log/messages
If properly configured, the output should indicate the following group-owner:
root
      Is it the case that /var/log/messages has group owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_owner_var_log_question">
      <question_text>To check the ownership of /var/log,
run the command:
$ ls -lL /var/log
If properly configured, the output should indicate the following owner:
root
      Is it the case that /var/log has owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_owner_var_log_messages_question">
      <question_text>To check the ownership of /var/log/messages,
run the command:
$ ls -lL /var/log/messages
If properly configured, the output should indicate the following owner:
root
      Is it the case that /var/log/messages has owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_permissions_var_log_question">
      <question_text>To check the permissions of /var/log,
run the command:
$ ls -l /var/log
If properly configured, the output should indicate the following permissions:
drwxr-xr-x
      Is it the case that /var/log has unix mode drwxr-xr-x?
      </question_text>
    </boolean_question>
    <boolean_question id="file_permissions_var_log_messages_question">
      <question_text>To check the permissions of /var/log/messages,
run the command:
$ ls -l /var/log/messages
If properly configured, the output should indicate the following permissions:
-rw-r-----
      Is it the case that /var/log/messages has unix mode -rw-r-----?
      </question_text>
    </boolean_question>
    <boolean_question id="dir_ownership_library_dirs_question">
      <question_text>Shared libraries are stored in the following directories:
/lib
/lib64
/usr/lib
/usr/lib64
For each of these directories, run the following command to find files not
owned by root:
$ sudo find -L $DIR ! -user root -type d -exec chown root {} \;
      Is it the case that any of these directories are not owned by root?
      </question_text>
    </boolean_question>
    <boolean_question id="dir_permissions_library_dirs_question">
      <question_text>Shared libraries are stored in the following directories:
/lib
/lib64
/usr/lib
/usr/lib64

To find shared libraries that are group-writable or world-writable,
run the following command for each directory DIR which contains shared libraries:
$ sudo find -L DIR -perm /022 -type d
      Is it the case that any of these files are group-writable or world-writable?
      </question_text>
    </boolean_question>
    <boolean_question id="file_ownership_binary_dirs_question">
      <question_text>System executables are stored in the following directories by default:
/bin
/sbin
/usr/bin
/usr/libexec
/usr/local/bin
/usr/local/sbin
/usr/sbin
To find system executables that are not owned by root,
run the following command for each directory DIR which contains system executables:
$ sudo find DIR/ \! -user root
      Is it the case that any system executables are found to not be owned by root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_ownership_library_dirs_question">
      <question_text>Shared libraries are stored in the following directories:
/lib
/lib64
/usr/lib
/usr/lib64
For each of these directories, run the following command to find files not
owned by root:
$ sudo find -L $DIR ! -user root -exec chown root {} \;
      Is it the case that any of these files are not owned by root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_permissions_binary_dirs_question">
      <question_text>System executables are stored in the following directories by default:
/bin
/sbin
/usr/bin
/usr/libexec
/usr/local/bin
/usr/local/sbin
/usr/sbin
To find system executables that are group-writable or world-writable,
run the following command for each directory DIR which contains system executables:
$ sudo find -L DIR -perm /022 -type f
      Is it the case that any system executables are found to be group or world writable?
      </question_text>
    </boolean_question>
    <boolean_question id="file_permissions_library_dirs_question">
      <question_text>Shared libraries are stored in the following directories:
/lib
/lib64
/usr/lib
/usr/lib64

To find shared libraries that are group-writable or world-writable,
run the following command for each directory DIR which contains shared libraries:
$ sudo find -L DIR -perm /022 -type f
      Is it the case that any of these files are group-writable or world-writable?
      </question_text>
    </boolean_question>
    <boolean_question id="service_autofs_disabled_question">
      <question_text>
To check that the autofs service is disabled in system boot configuration,
run the following command:
$ systemctl is-enabled autofs
Output should indicate the autofs service has either not been installed,
or has been disabled at all runlevels, as shown in the example below:
$ systemctl is-enabled autofs disabled

Run the following command to verify autofs is not active (i.e. not running) through current runtime configuration:
$ systemctl is-active autofs

If the service is not running the command will return the following output:
inactive

The service will also be masked, to check that the autofs is masked, run the following command:
$ systemctl show autofs | grep "LoadState\|UnitFileState"

If the service is masked the command will return the following outputs:

LoadState=masked

UnitFileState=masked
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="kernel_module_cramfs_disabled_question">
      <question_text>
If the system is configured to prevent the loading of the cramfs kernel module,
it will contain lines inside any file in /etc/modprobe.d or the deprecated/etc/modprobe.conf.
These lines instruct the module loading system to run another program (such as /bin/true) upon a module install event.
Run the following command to search for such lines in all files in /etc/modprobe.d and the deprecated /etc/modprobe.conf:
$ grep -r cramfs /etc/modprobe.conf /etc/modprobe.d
      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="kernel_module_usb-storage_disabled_question">
      <question_text>
If the system is configured to prevent the loading of the usb-storage kernel module,
it will contain lines inside any file in /etc/modprobe.d or the deprecated/etc/modprobe.conf.
These lines instruct the module loading system to run another program (such as /bin/true) upon a module install event.
Run the following command to search for such lines in all files in /etc/modprobe.d and the deprecated /etc/modprobe.conf:
$ grep -r usb-storage /etc/modprobe.conf /etc/modprobe.d
      Is it the case that no line is returned?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_boot_noauto_question">
      <question_text>To verify the noauto option is configured for the /boot mount point,
    run the following command:
    $ mount | grep '\s/boot\s'
    The output should show the corresponding mount point along with the noauto setting in parentheses.

      Is it the case that the  is not present in the output line, or there is no output line at all?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_boot_nodev_question">
      <question_text>To verify the nodev option is configured for the /boot mount point,
    run the following command:
    $ mount | grep '\s/boot\s'
    The output should show the corresponding mount point along with the nodev setting in parentheses.

      Is it the case that the  is not present in the output line, or there is no output line at all?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_boot_noexec_question">
      <question_text>To verify the noexec option is configured for the /boot mount point,
    run the following command:
    $ mount | grep '\s/boot\s'
    The output should show the corresponding mount point along with the noexec setting in parentheses.

      Is it the case that the  is not present in the output line, or there is no output line at all?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_boot_nosuid_question">
      <question_text>To verify the nosuid option is configured for the /boot mount point,
    run the following command:
    $ mount | grep '\s/boot\s'
    The output should show the corresponding mount point along with the nosuid setting in parentheses.

      Is it the case that the  is not present in the output line, or there is no output line at all?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_dev_shm_nodev_question">
      <question_text>To verify the nodev option is configured for the /dev/shm mount point,
    run the following command:
    $ mount | grep '\s/dev/shm\s'
    The output should show the corresponding mount point along with the nodev setting in parentheses.

      Is it the case that the  is not present in the output line, or there is no output line at all?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_dev_shm_noexec_question">
      <question_text>To verify the noexec option is configured for the /dev/shm mount point,
    run the following command:
    $ mount | grep '\s/dev/shm\s'
    The output should show the corresponding mount point along with the noexec setting in parentheses.

      Is it the case that the  is not present in the output line, or there is no output line at all?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_dev_shm_nosuid_question">
      <question_text>To verify the nosuid option is configured for the /dev/shm mount point,
    run the following command:
    $ mount | grep '\s/dev/shm\s'
    The output should show the corresponding mount point along with the nosuid setting in parentheses.

      Is it the case that the  is not present in the output line, or there is no output line at all?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_home_nodev_question">
      <question_text>To verify the nodev option is configured for the /home mount point,
    run the following command:
    $ mount | grep '\s/home\s'
    The output should show the corresponding mount point along with the nodev setting in parentheses.

      Is it the case that the  is not present in the output line, or there is no output line at all?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_home_noexec_question">
      <question_text>To verify the noexec option is configured for the /home mount point,
    run the following command:
    $ mount | grep '\s/home\s'
    The output should show the corresponding mount point along with the noexec setting in parentheses.

      Is it the case that the  is not present in the output line, or there is no output line at all?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_home_nosuid_question">
      <question_text>To verify the nosuid option is configured for the /home mount point,
    run the following command:
    $ mount | grep '\s/home\s'
    The output should show the corresponding mount point along with the nosuid setting in parentheses.

      Is it the case that the  is not present in the output line, or there is no output line at all?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_nodev_nonroot_local_partitions_question">
      <question_text>To verify the nodev option is configured for non-root local partitions, run the following command:
$ mount | grep '^/dev\S* on /\S' | grep --invert-match 'nodev'
The output shows local non-root partitions mounted without the nodev option, and there should be no output at all.

      Is it the case that some mounts appear among output lines?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_noexec_removable_partitions_question">
      <question_text>To verify that binaries cannot be directly executed from removable media, run the following command:
$ grep -v noexec /etc/fstab
The resulting output will show partitions which do not have the noexec flag. Verify all partitions
in the output are not removable media.
      Is it the case that removable media partitions are present?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_opt_nosuid_question">
      <question_text>To verify the nosuid option is configured for the /opt mount point,
    run the following command:
    $ mount | grep '\s/opt\s'
    The output should show the corresponding mount point along with the nosuid setting in parentheses.

      Is it the case that the  is not present in the output line, or there is no output line at all?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_srv_nosuid_question">
      <question_text>To verify the nosuid option is configured for the /srv mount point,
    run the following command:
    $ mount | grep '\s/srv\s'
    The output should show the corresponding mount point along with the nosuid setting in parentheses.

      Is it the case that the  is not present in the output line, or there is no output line at all?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_tmp_nodev_question">
      <question_text>To verify the nodev option is configured for the /tmp mount point,
    run the following command:
    $ mount | grep '\s/tmp\s'
    The output should show the corresponding mount point along with the nodev setting in parentheses.

      Is it the case that the  is not present in the output line, or there is no output line at all?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_tmp_noexec_question">
      <question_text>To verify the noexec option is configured for the /tmp mount point,
    run the following command:
    $ mount | grep '\s/tmp\s'
    The output should show the corresponding mount point along with the noexec setting in parentheses.

      Is it the case that the  is not present in the output line, or there is no output line at all?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_tmp_nosuid_question">
      <question_text>To verify the nosuid option is configured for the /tmp mount point,
    run the following command:
    $ mount | grep '\s/tmp\s'
    The output should show the corresponding mount point along with the nosuid setting in parentheses.

      Is it the case that the  is not present in the output line, or there is no output line at all?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_var_log_audit_nodev_question">
      <question_text>To verify the nodev option is configured for the /var/log/audit mount point,
    run the following command:
    $ mount | grep '\s/var/log/audit\s'
    The output should show the corresponding mount point along with the nodev setting in parentheses.

      Is it the case that the  is not present in the output line, or there is no output line at all?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_var_log_audit_noexec_question">
      <question_text>To verify the noexec option is configured for the /var/log/audit mount point,
    run the following command:
    $ mount | grep '\s/var/log/audit\s'
    The output should show the corresponding mount point along with the noexec setting in parentheses.

      Is it the case that the  is not present in the output line, or there is no output line at all?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_var_log_audit_nosuid_question">
      <question_text>To verify the nosuid option is configured for the /var/log/audit mount point,
    run the following command:
    $ mount | grep '\s/var/log/audit\s'
    The output should show the corresponding mount point along with the nosuid setting in parentheses.

      Is it the case that the  is not present in the output line, or there is no output line at all?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_var_log_nodev_question">
      <question_text>To verify the nodev option is configured for the /var/log mount point,
    run the following command:
    $ mount | grep '\s/var/log\s'
    The output should show the corresponding mount point along with the nodev setting in parentheses.

      Is it the case that the  is not present in the output line, or there is no output line at all?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_var_log_noexec_question">
      <question_text>To verify the noexec option is configured for the /var/log mount point,
    run the following command:
    $ mount | grep '\s/var/log\s'
    The output should show the corresponding mount point along with the noexec setting in parentheses.

      Is it the case that the  is not present in the output line, or there is no output line at all?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_var_log_nosuid_question">
      <question_text>To verify the nosuid option is configured for the /var/log mount point,
    run the following command:
    $ mount | grep '\s/var/log\s'
    The output should show the corresponding mount point along with the nosuid setting in parentheses.

      Is it the case that the  is not present in the output line, or there is no output line at all?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_var_nodev_question">
      <question_text>To verify the nodev option is configured for the /var mount point,
    run the following command:
    $ mount | grep '\s/var\s'
    The output should show the corresponding mount point along with the nodev setting in parentheses.

      Is it the case that the  is not present in the output line, or there is no output line at all?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_var_noexec_question">
      <question_text>To verify the noexec option is configured for the /var mount point,
    run the following command:
    $ mount | grep '\s/var\s'
    The output should show the corresponding mount point along with the noexec setting in parentheses.

      Is it the case that the  is not present in the output line, or there is no output line at all?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_var_nosuid_question">
      <question_text>To verify the nosuid option is configured for the /var mount point,
    run the following command:
    $ mount | grep '\s/var\s'
    The output should show the corresponding mount point along with the nosuid setting in parentheses.

      Is it the case that the  is not present in the output line, or there is no output line at all?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_var_tmp_nodev_question">
      <question_text>To verify the nodev option is configured for the /var/tmp mount point,
    run the following command:
    $ mount | grep '\s/var/tmp\s'
    The output should show the corresponding mount point along with the nodev setting in parentheses.

      Is it the case that the  is not present in the output line, or there is no output line at all?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_var_tmp_noexec_question">
      <question_text>To verify the noexec option is configured for the /var/tmp mount point,
    run the following command:
    $ mount | grep '\s/var/tmp\s'
    The output should show the corresponding mount point along with the noexec setting in parentheses.

      Is it the case that the  is not present in the output line, or there is no output line at all?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_var_tmp_nosuid_question">
      <question_text>To verify the nosuid option is configured for the /var/tmp mount point,
    run the following command:
    $ mount | grep '\s/var/tmp\s'
    The output should show the corresponding mount point along with the nosuid setting in parentheses.

      Is it the case that the  is not present in the output line, or there is no output line at all?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_kernel_dmesg_restrict_question">
      <question_text>The runtime status of the kernel.dmesg_restrict kernel parameter can be queried
by running the following command:
$ sysctl kernel.dmesg_restrict
The output of the command should indicate a value of 1.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*kernel.dmesg_restrict\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
kernel.dmesg_restrict = 1
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains kernel.dmesg_restrict = 1, and that one assignment
is returned when 
$ grep -r kernel.dmesg_restrict /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_kernel_kexec_load_disabled_question">
      <question_text>The runtime status of the kernel.kexec_load_disabled kernel parameter can be queried
by running the following command:
$ sysctl kernel.kexec_load_disabled
The output of the command should indicate a value of 1.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*kernel.kexec_load_disabled\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
kernel.kexec_load_disabled = 1
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains kernel.kexec_load_disabled = 1, and that one assignment
is returned when 
$ grep -r kernel.kexec_load_disabled /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_kernel_modules_disabled_question">
      <question_text>The runtime status of the kernel.modules_disabled kernel parameter can be queried
by running the following command:
$ sysctl kernel.modules_disabled
The output of the command should indicate a value of 1.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*kernel.modules_disabled\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
kernel.modules_disabled = 1
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains kernel.modules_disabled = 1, and that one assignment
is returned when 
$ grep -r kernel.modules_disabled /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_kernel_perf_cpu_time_max_percent_question">
      <question_text>The runtime status of the kernel.perf_cpu_time_max_percent kernel parameter can be queried
by running the following command:
$ sysctl kernel.perf_cpu_time_max_percent
The output of the command should indicate a value of 1.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*kernel.perf_cpu_time_max_percent\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
kernel.perf_cpu_time_max_percent = 1
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains kernel.perf_cpu_time_max_percent = 1, and that one assignment
is returned when 
$ grep -r kernel.perf_cpu_time_max_percent /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_kernel_perf_event_max_sample_rate_question">
      <question_text>The runtime status of the kernel.perf_event_max_sample_rate kernel parameter can be queried
by running the following command:
$ sysctl kernel.perf_event_max_sample_rate
The output of the command should indicate a value of 1.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*kernel.perf_event_max_sample_rate\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
kernel.perf_event_max_sample_rate = 1
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains kernel.perf_event_max_sample_rate = 1, and that one assignment
is returned when 
$ grep -r kernel.perf_event_max_sample_rate /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_kernel_perf_event_paranoid_question">
      <question_text>The runtime status of the kernel.perf_event_paranoid kernel parameter can be queried
by running the following command:
$ sysctl kernel.perf_event_paranoid
The output of the command should indicate a value of 2.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*kernel.perf_event_paranoid\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
kernel.perf_event_paranoid = 2
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains kernel.perf_event_paranoid = 2, and that one assignment
is returned when 
$ grep -r kernel.perf_event_paranoid /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_kernel_pid_max_question">
      <question_text>The runtime status of the kernel.pid_max kernel parameter can be queried
by running the following command:
$ sysctl kernel.pid_max
The output of the command should indicate a value of 65536.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*kernel.pid_max\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
kernel.pid_max = 65536
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains kernel.pid_max = 65536, and that one assignment
is returned when 
$ grep -r kernel.pid_max /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_kernel_sysrq_question">
      <question_text>The runtime status of the kernel.sysrq kernel parameter can be queried
by running the following command:
$ sysctl kernel.sysrq
The output of the command should indicate a value of 0.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*kernel.sysrq\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
kernel.sysrq = 0
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains kernel.sysrq = 0, and that one assignment
is returned when 
$ grep -r kernel.sysrq /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_kernel_yama_ptrace_scope_question">
      <question_text>The runtime status of the kernel.yama.ptrace_scope kernel parameter can be queried
by running the following command:
$ sysctl kernel.yama.ptrace_scope
The output of the command should indicate a value of 1.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*kernel.yama.ptrace_scope\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
kernel.yama.ptrace_scope = 1
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains kernel.yama.ptrace_scope = 1, and that one assignment
is returned when 
$ grep -r kernel.yama.ptrace_scope /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_vm_mmap_min_addr_question">
      <question_text>The runtime status of the vm.mmap_min_addr kernel parameter can be queried
by running the following command:
$ sysctl vm.mmap_min_addr
The output of the command should indicate a value of 65536.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*vm.mmap_min_addr\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
vm.mmap_min_addr = 65536
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains vm.mmap_min_addr = 65536, and that one assignment
is returned when 
$ grep -r vm.mmap_min_addr /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="coredump_disable_backtraces_question">
      <question_text>To verify that logging core dump backtraces is disabled, run the
following command:
$ grep ProcessSizeMax /etc/systemd/coredump.conf
The output should be:
ProcessSizeMax=0
      Is it the case that ProcessSizeMax is not set to zero?
      </question_text>
    </boolean_question>
    <boolean_question id="coredump_disable_storage_question">
      <question_text>To verify that storing core dumps are disabled, run the following command:
$ grep Storage /etc/systemd/coredump.conf
The output should be:
Storage=none
      Is it the case that Storage is not set to none?
      </question_text>
    </boolean_question>
    <boolean_question id="disable_users_coredumps_question">
      <question_text>To verify that core dumps are disabled for all users, run the following command:
$ grep core /etc/security/limits.conf
The output should be:
*     hard   core    0
      Is it the case that it is not?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_fs_suid_dumpable_question">
      <question_text>The runtime status of the fs.suid_dumpable kernel parameter can be queried
by running the following command:
$ sysctl fs.suid_dumpable
The output of the command should indicate a value of 0.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*fs.suid_dumpable\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
fs.suid_dumpable = 0
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains fs.suid_dumpable = 0, and that one assignment
is returned when 
$ grep -r fs.suid_dumpable /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_kernel_kptr_restrict_question">
      <question_text>The runtime status of the kernel.kptr_restrict kernel parameter can be queried
by running the following command:
$ sysctl kernel.kptr_restrict
The output of the command should indicate a value of 1.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*kernel.kptr_restrict\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
kernel.kptr_restrict = 1
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains kernel.kptr_restrict = 1, and that one assignment
is returned when 
$ grep -r kernel.kptr_restrict /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="sysctl_kernel_randomize_va_space_question">
      <question_text>The runtime status of the kernel.randomize_va_space kernel parameter can be queried
by running the following command:
$ sysctl kernel.randomize_va_space
The output of the command should indicate a value of 2.
The preferable way how to assure the runtime compliance is to have
correct persistent configuration, and rebooting the system.

The persistent kernel parameter configuration is performed by specifying the appropriate
assignment in any file located in the /etc/sysctl.d directory.
Verify that there is not any existing incorrect configuration by executing the following command:
$ grep -r '^\s*kernel.randomize_va_space\s*=' /etc/sysctl.conf /etc/sysctl.d
If any assignments other than
kernel.randomize_va_space = 2
are found, or the correct assignment is duplicated, remove those offending lines from respective files,
and make sure that exactly one file in 
/etc/sysctl.d contains kernel.randomize_va_space = 2, and that one assignment
is returned when 
$ grep -r kernel.randomize_va_space /etc/sysctl.conf /etc/sysctl.d
is executed.

      Is it the case that the correct value is not returned?
      </question_text>
    </boolean_question>
    <boolean_question id="grub2_page_poison_argument_question">
      <question_text>Inspect the form of default GRUB 2 command line for the Linux operating system
in /etc/default/grub. If they include page_poison=1,
then page poisoning is enabled at boot time.

To ensure page_poison=1 is configured on all installed kernels, the
following command may be used:

$ sudo /sbin/grubby --update-kernel=ALL --args="page_poison=1

      Is it the case that page allocator poisoning is not enabled?
      </question_text>
    </boolean_question>
    <boolean_question id="grub2_slub_debug_argument_question">
      <question_text>Inspect the form of default GRUB 2 command line for the Linux operating system
in /etc/default/grub. If they include slub_debug=P,
then SLUB/SLAB poisoning is enabled at boot time.

To ensure slub_debug=P is configured on all installed kernels, the
following command may be used:

$ sudo /sbin/grubby --update-kernel=ALL --args="slub_debug=P

      Is it the case that SLUB/SLAB poisoning is not enabled?
      </question_text>
    </boolean_question>
    <boolean_question id="package_libselinux_installed_question">
      <question_text>Run the following command to determine if the libselinux package is installed: $ rpm -q libselinux
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_policycoreutils_installed_question">
      <question_text>Run the following command to determine if the policycoreutils package is installed: $ rpm -q policycoreutils
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_setroubleshoot-plugins_removed_question">
      <question_text>Run the following command to determine if the setroubleshoot-plugins package is installed:
$ rpm -q setroubleshoot-plugins
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_setroubleshoot-server_removed_question">
      <question_text>Run the following command to determine if the setroubleshoot-server package is installed:
$ rpm -q setroubleshoot-server
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="coreos_enable_selinux_kernel_argument_question">
      <question_text>Inspect /proc/cmdline for any instances of selinux=0
in the kernel boot arguments.  Presence of selinux=0 indicates
that SELinux is disabled at boot time.

If it would be disabled anywhere, make sure to enable it via a
MachineConfig object.
      Is it the case that SELinux is disabled at boot time?
      </question_text>
    </boolean_question>
    <boolean_question id="grub2_enable_selinux_question">
      <question_text>Inspect /etc/default/grub for any instances of selinux=0
in the kernel boot arguments.  Presence of selinux=0 indicates
that SELinux is disabled at boot time.
      Is it the case that SELinux is disabled at boot time?
      </question_text>
    </boolean_question>
    <boolean_question id="selinux_all_devicefiles_labeled_question">
      <question_text>To check for incorrectly labeled device files, run following commands:
$ sudo find /dev -context *:device_t:* \( -type c -o -type b \) -printf "%p %Z\n"
$ sudo find /dev -context *:unlabeled_t:* \( -type c -o -type b \) -printf "%p %Z\n"
It should produce no output in a well-configured system.
      Is it the case that there is output?
      </question_text>
    </boolean_question>
    <boolean_question id="selinux_confinement_of_daemons_question">
      <question_text>Ensure there are no unconfined daemons running on the system,
the following command should produce no output:
$ sudo ps -eZ | grep "unconfined_service_t"
      Is it the case that There are unconfined daemons running on the system?
      </question_text>
    </boolean_question>
    <boolean_question id="selinux_policytype_question">
      <question_text>Check the file /etc/selinux/config and ensure the following line appears:
SELINUXTYPE=
      Is it the case that it does not?
      </question_text>
    </boolean_question>
    <boolean_question id="selinux_state_question">
      <question_text>Check the file /etc/selinux/config and ensure the following line appears:
SELINUX=
      Is it the case that SELINUX is not set to enforcing?
      </question_text>
    </boolean_question>
    <boolean_question id="selinux_user_login_roles_question">
      <question_text>To verify the operating system prevents non-privileged users from executing
privileged functions to include disabling, circumventing, or altering
implemented security safeguards/countermeasures, run the following
command:
$ sudo semanage login -l
All administrators must be mapped to the sysadm_u or staff_u
users with the appropriate domains (sysadm_t and staff_t).

All authorized non-administrative
users must be mapped to the user_u role or the appropriate domain
(user_t).
      Is it the case that non-admin users are not confined correctly?
      </question_text>
    </boolean_question>
    <boolean_question id="sebool_polyinstantiation_enabled_question">
      <question_text>
Run the following command to determine if the polyinstantiation_enabled SELinux boolean is disabled:
$ getsebool polyinstantiation_enabled
If properly configured, the output should show the following:
polyinstantiation_enabled --&gt; off
      Is it the case that polyinstantiation_enabled is not disabled?
      </question_text>
    </boolean_question>
    <boolean_question id="sebool_secure_mode_insmod_question">
      <question_text>
Run the following command to determine if the secure_mode_insmod SELinux boolean is disabled:
$ getsebool secure_mode_insmod
If properly configured, the output should show the following:
secure_mode_insmod --&gt; off
      Is it the case that secure_mode_insmod is not disabled?
      </question_text>
    </boolean_question>
    <boolean_question id="sebool_selinuxuser_execheap_question">
      <question_text>
Run the following command to determine if the selinuxuser_execheap SELinux boolean is disabled:
$ getsebool selinuxuser_execheap
If properly configured, the output should show the following:
selinuxuser_execheap --&gt; off
      Is it the case that selinuxuser_execheap is not disabled?
      </question_text>
    </boolean_question>
    <boolean_question id="sebool_selinuxuser_execmod_question">
      <question_text>
Run the following command to determine if the selinuxuser_execmod SELinux boolean is enabled:
$ getsebool selinuxuser_execmod
If properly configured, the output should show the following:
selinuxuser_execmod --&gt; on
      Is it the case that selinuxuser_execmod is not enabled?
      </question_text>
    </boolean_question>
    <boolean_question id="sebool_selinuxuser_execstack_question">
      <question_text>
Run the following command to determine if the selinuxuser_execstack SELinux boolean is disabled:
$ getsebool selinuxuser_execstack
If properly configured, the output should show the following:
selinuxuser_execstack --&gt; off
      Is it the case that selinuxuser_execstack is not disabled?
      </question_text>
    </boolean_question>
    <boolean_question id="sebool_ssh_sysadm_login_question">
      <question_text>
Run the following command to determine if the ssh_sysadm_login SELinux boolean is disabled:
$ getsebool ssh_sysadm_login
If properly configured, the output should show the following:
ssh_sysadm_login --&gt; off
      Is it the case that ssh_sysadm_login is not disabled?
      </question_text>
    </boolean_question>
    <boolean_question id="service_avahi-daemon_disabled_question">
      <question_text>
To check that the avahi-daemon service is disabled in system boot configuration,
run the following command:
$ systemctl is-enabled avahi-daemon
Output should indicate the avahi-daemon service has either not been installed,
or has been disabled at all runlevels, as shown in the example below:
$ systemctl is-enabled avahi-daemon disabled

Run the following command to verify avahi-daemon is not active (i.e. not running) through current runtime configuration:
$ systemctl is-active avahi-daemon

If the service is not running the command will return the following output:
inactive

The service will also be masked, to check that the avahi-daemon is masked, run the following command:
$ systemctl show avahi-daemon | grep "LoadState\|UnitFileState"

If the service is masked the command will return the following outputs:

LoadState=masked

UnitFileState=masked
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="package_abrt_removed_question">
      <question_text>Run the following command to determine if the abrt package is installed:
$ rpm -q abrt
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="service_abrtd_disabled_question">
      <question_text>
To check that the abrtd service is disabled in system boot configuration,
run the following command:
$ systemctl is-enabled abrtd
Output should indicate the abrtd service has either not been installed,
or has been disabled at all runlevels, as shown in the example below:
$ systemctl is-enabled abrtd disabled

Run the following command to verify abrtd is not active (i.e. not running) through current runtime configuration:
$ systemctl is-active abrtd

If the service is not running the command will return the following output:
inactive

The service will also be masked, to check that the abrtd is masked, run the following command:
$ systemctl show abrtd | grep "LoadState\|UnitFileState"

If the service is masked the command will return the following outputs:

LoadState=masked

UnitFileState=masked
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="service_cockpit_disabled_question">
      <question_text>
To check that the cockpit service is disabled in system boot configuration,
run the following command:
$ systemctl is-enabled cockpit
Output should indicate the cockpit service has either not been installed,
or has been disabled at all runlevels, as shown in the example below:
$ systemctl is-enabled cockpit disabled

Run the following command to verify cockpit is not active (i.e. not running) through current runtime configuration:
$ systemctl is-active cockpit

If the service is not running the command will return the following output:
inactive

The service will also be masked, to check that the cockpit is masked, run the following command:
$ systemctl show cockpit | grep "LoadState\|UnitFileState"

If the service is masked the command will return the following outputs:

LoadState=masked

UnitFileState=masked
      Is it the case that it is not disabled?
      </question_text>
    </boolean_question>
    <boolean_question id="service_kdump_disabled_question">
      <question_text>
To check that the kdump service is disabled in system boot configuration,
run the following command:
$ systemctl is-enabled kdump
Output should indicate the kdump service has either not been installed,
or has been disabled at all runlevels, as shown in the example below:
$ systemctl is-enabled kdump disabled

Run the following command to verify kdump is not active (i.e. not running) through current runtime configuration:
$ systemctl is-active kdump

If the service is not running the command will return the following output:
inactive

The service will also be masked, to check that the kdump is masked, run the following command:
$ systemctl show kdump | grep "LoadState\|UnitFileState"

If the service is masked the command will return the following outputs:

LoadState=masked

UnitFileState=masked
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="service_ntpdate_disabled_question">
      <question_text>
To check that the ntpdate service is disabled in system boot configuration,
run the following command:
$ systemctl is-enabled ntpdate
Output should indicate the ntpdate service has either not been installed,
or has been disabled at all runlevels, as shown in the example below:
$ systemctl is-enabled ntpdate disabled

Run the following command to verify ntpdate is not active (i.e. not running) through current runtime configuration:
$ systemctl is-active ntpdate

If the service is not running the command will return the following output:
inactive

The service will also be masked, to check that the ntpdate is masked, run the following command:
$ systemctl show ntpdate | grep "LoadState\|UnitFileState"

If the service is masked the command will return the following outputs:

LoadState=masked

UnitFileState=masked
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="service_oddjobd_disabled_question">
      <question_text>
To check that the oddjobd service is disabled in system boot configuration,
run the following command:
$ systemctl is-enabled oddjobd
Output should indicate the oddjobd service has either not been installed,
or has been disabled at all runlevels, as shown in the example below:
$ systemctl is-enabled oddjobd disabled

Run the following command to verify oddjobd is not active (i.e. not running) through current runtime configuration:
$ systemctl is-active oddjobd

If the service is not running the command will return the following output:
inactive

The service will also be masked, to check that the oddjobd is masked, run the following command:
$ systemctl show oddjobd | grep "LoadState\|UnitFileState"

If the service is masked the command will return the following outputs:

LoadState=masked

UnitFileState=masked
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="service_qpidd_disabled_question">
      <question_text>
To check that the qpidd service is disabled in system boot configuration,
run the following command:
$ systemctl is-enabled qpidd
Output should indicate the qpidd service has either not been installed,
or has been disabled at all runlevels, as shown in the example below:
$ systemctl is-enabled qpidd disabled

Run the following command to verify qpidd is not active (i.e. not running) through current runtime configuration:
$ systemctl is-active qpidd

If the service is not running the command will return the following output:
inactive

The service will also be masked, to check that the qpidd is masked, run the following command:
$ systemctl show qpidd | grep "LoadState\|UnitFileState"

If the service is masked the command will return the following outputs:

LoadState=masked

UnitFileState=masked
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="service_rdisc_disabled_question">
      <question_text>
To check that the rdisc service is disabled in system boot configuration,
run the following command:
$ systemctl is-enabled rdisc
Output should indicate the rdisc service has either not been installed,
or has been disabled at all runlevels, as shown in the example below:
$ systemctl is-enabled rdisc disabled

Run the following command to verify rdisc is not active (i.e. not running) through current runtime configuration:
$ systemctl is-active rdisc

If the service is not running the command will return the following output:
inactive

The service will also be masked, to check that the rdisc is masked, run the following command:
$ systemctl show rdisc | grep "LoadState\|UnitFileState"

If the service is masked the command will return the following outputs:

LoadState=masked

UnitFileState=masked
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="service_cron_enabled_question">
      <question_text>

Run the following command to determine the current status of the
cron service:
$ systemctl is-active cron
If the service is running, it should return the following: active
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="service_crond_enabled_question">
      <question_text>

Run the following command to determine the current status of the
crond service:
$ systemctl is-active crond
If the service is running, it should return the following: active
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="service_atd_disabled_question">
      <question_text>
To check that the atd service is disabled in system boot configuration,
run the following command:
$ systemctl is-enabled atd
Output should indicate the atd service has either not been installed,
or has been disabled at all runlevels, as shown in the example below:
$ systemctl is-enabled atd disabled

Run the following command to verify atd is not active (i.e. not running) through current runtime configuration:
$ systemctl is-active atd

If the service is not running the command will return the following output:
inactive

The service will also be masked, to check that the atd is masked, run the following command:
$ systemctl show atd | grep "LoadState\|UnitFileState"

If the service is masked the command will return the following outputs:

LoadState=masked

UnitFileState=masked
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="file_groupowner_cron_allow_question">
      <question_text>To check the group ownership of /etc/cron.allow,
run the command:
$ ls -lL /etc/cron.allow
If properly configured, the output should indicate the following group-owner:
root
      Is it the case that /etc/cron.allow has group owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_owner_cron_allow_question">
      <question_text>To check the ownership of /etc/cron.allow,
run the command:
$ ls -lL /etc/cron.allow
If properly configured, the output should indicate the following owner:
root
      Is it the case that /etc/cron.allow has owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="package_dhcp_removed_question">
      <question_text>Run the following command to determine if the dhcp package is installed:
$ rpm -q dhcp
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_bind_removed_question">
      <question_text>Run the following command to determine if the bind package is installed:
$ rpm -q bind
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_vsftpd_removed_question">
      <question_text>Run the following command to determine if the vsftpd package is installed:
$ rpm -q vsftpd
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_krb5-server_removed_question">
      <question_text>Run the following command to determine if the krb5-server package is installed: $ rpm -q krb5-server
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="kerberos_disable_no_keytab_question">
      <question_text>Run the following command to see if there are some keytabs
that would potentially allow the use of Kerberos by system daemons.
$ ls -la /etc/*.keytab
The expected result is
ls: cannot access '/etc/*.keytab': No such file or directory
      Is it the case that it is present on the system?
      </question_text>
    </boolean_question>
    <boolean_question id="package_openldap-clients_removed_question">
      <question_text>Run the following command to determine if the openldap-clients package is installed:
$ rpm -q openldap-clients
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_sendmail_removed_question">
      <question_text>Run the following command to determine if the sendmail package is installed:
$ rpm -q sendmail
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="service_postfix_enabled_question">
      <question_text>

Run the following command to determine the current status of the
postfix service:
$ systemctl is-active postfix
If the service is running, it should return the following: active
      Is it the case that the system is not a cross domain solution and the service is not enabled?
      </question_text>
    </boolean_question>
    <boolean_question id="postfix_client_configure_mail_alias_question">
      <question_text>Find the list of alias maps used by the Postfix mail server:
$ sudo postconf alias_maps
Query the Postfix alias maps for an alias for the root user:
$ sudo postmap -q root hash:/etc/aliases
The output should return an alias.
      Is it the case that it is not?
      </question_text>
    </boolean_question>
    <boolean_question id="postfix_client_configure_relayhost_question">
      <question_text>Run the following command to ensure postfix routes mail to this system:
$ grep relayhost /etc/postfix/main.cf
If properly configured, the output should show only .
      Is it the case that it is not?
      </question_text>
    </boolean_question>
    <boolean_question id="postfix_network_listening_disabled_question">
      <question_text>Run the following command to ensure postfix accepts mail messages from only the local system:
$ grep inet_interfaces /etc/postfix/main.cf
If properly configured, the output should show only .
      Is it the case that it does not?
      </question_text>
    </boolean_question>
    <boolean_question id="postfix_prevent_unrestricted_relay_question">
      <question_text>To verify the system is configured to prevent unrestricted mail relaying,
run the following command:
$ sudo postconf -n smtpd_client_restrictions
The output should return:
smtpd_client_restrictions = permit_mynetworks,reject
      Is it the case that it is not?
      </question_text>
    </boolean_question>
    <boolean_question id="package_nfs-utils_removed_question">
      <question_text>Run the following command to determine if the nfs-utils package is installed:
$ rpm -q nfs-utils
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_krb_sec_remote_filesystems_question">
      <question_text>To verify the sec option is configured for all NFS mounts, run the following command:
$ mount | grep "sec="
All NFS mounts should show the sec=krb5:krb5i:krb5p setting in parentheses.
This is not applicable if NFS is not implemented.
      Is it the case that the setting is not configured, has the 'sys' option added, or does not have all Kerberos options added?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_noexec_remote_filesystems_question">
      <question_text>To verify the noexec option is configured for all NFS mounts, run the following command:
$ mount | grep nfs
All NFS mounts should show the noexec setting in parentheses.  This is not applicable if NFS is
not implemented.
      Is it the case that the setting does not show?
      </question_text>
    </boolean_question>
    <boolean_question id="mount_option_nosuid_remote_filesystems_question">
      <question_text>To verify the nosuid option is configured for all NFS mounts, run
the following command:
$ mount | grep nfs
All NFS mounts should show the nosuid setting in parentheses. This
is not applicable if NFS is not implemented.
      Is it the case that the setting does not show?
      </question_text>
    </boolean_question>
    <boolean_question id="no_all_squash_exports_question">
      <question_text>To verify all squashing has been disabled, run the following command:
$ grep all_squash /etc/exports
      Is it the case that there is output?
      </question_text>
    </boolean_question>
    <boolean_question id="use_kerberos_security_all_exports_question">
      <question_text>To verify the sec option is configured for all NFS mounts, run the following command:
$ grep "sec=" /etc/exports
All configured NFS exports should show the sec=krb5:krb5i:krb5p setting in parentheses.
This is not applicable if NFS is not implemented.
      Is it the case that the setting is not configured, has the 'sys' option added, or does not have all Kerberos options added?
      </question_text>
    </boolean_question>
    <boolean_question id="package_chrony_installed_question">
      <question_text>Run the following command to determine if the chrony package is installed:
$ rpm -q chrony
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="service_chronyd_enabled_question">
      <question_text>

Run the following command to determine the current status of the
chronyd service:
$ systemctl is-active chronyd
If the service is running, it should return the following: active
      Is it the case that the chronyd process is not running?
      </question_text>
    </boolean_question>
    <boolean_question id="service_chronyd_or_ntpd_enabled_question">
      <question_text>

Run the following command to determine the current status of the
chronyd service:
$ systemctl is-active chronyd
If the service is running, it should return the following: active


Run the following command to determine the current status of the
ntpd service:
$ systemctl is-active ntpd
If the service is running, it should return the following: active
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="service_ntp_enabled_question">
      <question_text>

Run the following command to determine the current status of the
ntp service:
$ systemctl is-active ntp
If the service is running, it should return the following: active
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="service_ntpd_enabled_question">
      <question_text>

Run the following command to determine the current status of the
ntpd service:
$ systemctl is-active ntpd
If the service is running, it should return the following: active
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="chronyd_or_ntpd_set_maxpoll_question">
      <question_text>To verify that maxpoll has been set properly, perform the following:
$ sudo grep maxpoll /etc/ntp.conf /etc/chrony.conf
The output should return
maxpoll .
      Is it the case that it does not exist or maxpoll has not been set to the expected value?
      </question_text>
    </boolean_question>
    <boolean_question id="chronyd_or_ntpd_specify_remote_server_question">
      <question_text>To verify that a remote NTP service is configured for time synchronization,
open the following file:
/etc/chrony.conf in the case the system in question is
configured to use the chronyd as the NTP daemon (default setting)/etc/ntp.conf in the case the system in question is configured
to use the ntpd as the NTP daemon
In the file, there should be a section similar to the following:
server ntpserver
      Is it the case that this is not the case?
      </question_text>
    </boolean_question>
    <boolean_question id="chronyd_specify_remote_server_question">
      <question_text>Run the following command and verify remote server is configured properly:
# grep -E "^(server|pool)" /etc/chrony.conf
      Is it the case that a remote time server is not configured?
      </question_text>
    </boolean_question>
    <boolean_question id="ntpd_specify_remote_server_question">
      <question_text>To verify that a remote NTP service is configured for time synchronization,
open the following file:
/etc/ntp.conf
In the file, there should be a section similar to the following:
server ntpserver
      Is it the case that this is not the case?
      </question_text>
    </boolean_question>
    <boolean_question id="service_rsyncd_disabled_question">
      <question_text>
To check that the rsyncd service is disabled in system boot configuration,
run the following command:
$ systemctl is-enabled rsyncd
Output should indicate the rsyncd service has either not been installed,
or has been disabled at all runlevels, as shown in the example below:
$ systemctl is-enabled rsyncd disabled

Run the following command to verify rsyncd is not active (i.e. not running) through current runtime configuration:
$ systemctl is-active rsyncd

If the service is not running the command will return the following output:
inactive

The service will also be masked, to check that the rsyncd is masked, run the following command:
$ systemctl show rsyncd | grep "LoadState\|UnitFileState"

If the service is masked the command will return the following outputs:

LoadState=masked

UnitFileState=masked
      Is it the case that the service is not disabled?
      </question_text>
    </boolean_question>
    <boolean_question id="package_xinetd_removed_question">
      <question_text>Run the following command to determine if the xinetd package is installed:
$ rpm -q xinetd
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="service_xinetd_disabled_question">
      <question_text>If network services are using the xinetd service, this is not applicable.


To check that the xinetd service is disabled in system boot configuration,
run the following command:
$ systemctl is-enabled xinetd
Output should indicate the xinetd service has either not been installed,
or has been disabled at all runlevels, as shown in the example below:
$ systemctl is-enabled xinetd disabled

Run the following command to verify xinetd is not active (i.e. not running) through current runtime configuration:
$ systemctl is-active xinetd

If the service is not running the command will return the following output:
inactive

The service will also be masked, to check that the xinetd is masked, run the following command:
$ systemctl show xinetd | grep "LoadState\|UnitFileState"

If the service is masked the command will return the following outputs:

LoadState=masked

UnitFileState=masked
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="configure_etc_hosts_deny_question">
      <question_text>Display contents of the file:
cat /etc/hosts.deny
Verify that the output contains the following line:
ALL: ALL
      Is it the case that access to services supporting TCP wrappers is not properly configured?
      </question_text>
    </boolean_question>
    <boolean_question id="file_groupowner_etc_hosts_allow_question">
      <question_text>To check the group ownership of /etc/hosts.allow,
run the command:
$ ls -lL /etc/hosts.allow
If properly configured, the output should indicate the following group-owner:
root
      Is it the case that /etc/hosts.allow has group owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_groupowner_etc_hosts_deny_question">
      <question_text>To check the group ownership of /etc/hosts.deny,
run the command:
$ ls -lL /etc/hosts.deny
If properly configured, the output should indicate the following group-owner:
root
      Is it the case that /etc/hosts.deny has group owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_owner_etc_hosts_allow_question">
      <question_text>To check the ownership of /etc/hosts.allow,
run the command:
$ ls -lL /etc/hosts.allow
If properly configured, the output should indicate the following owner:
root
      Is it the case that /etc/hosts.allow has owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_owner_etc_hosts_deny_question">
      <question_text>To check the ownership of /etc/hosts.deny,
run the command:
$ ls -lL /etc/hosts.deny
If properly configured, the output should indicate the following owner:
root
      Is it the case that /etc/hosts.deny has owner root?
      </question_text>
    </boolean_question>
    <boolean_question id="file_permissions_etc_hosts_allow_question">
      <question_text>To check the permissions of /etc/hosts.allow,
run the command:
$ ls -l /etc/hosts.allow
If properly configured, the output should indicate the following permissions:
-rw-r--r--
      Is it the case that /etc/hosts.allow has unix mode -rw-r--r--?
      </question_text>
    </boolean_question>
    <boolean_question id="file_permissions_etc_hosts_deny_question">
      <question_text>To check the permissions of /etc/hosts.deny,
run the command:
$ ls -l /etc/hosts.deny
If properly configured, the output should indicate the following permissions:
-rw-r--r--
      Is it the case that /etc/hosts.deny has unix mode -rw-r--r--?
      </question_text>
    </boolean_question>
    <boolean_question id="package_ypbind_removed_question">
      <question_text>The ypbind package can be removed with the following command:  $ sudo yum erase ypbind
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="package_ypserv_removed_question">
      <question_text>Run the following command to determine if the ypserv package is installed:
$ rpm -q ypserv
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="service_ypbind_disabled_question">
      <question_text>
To check that the ypbind service is disabled in system boot configuration,
run the following command:
$ systemctl is-enabled ypbind
Output should indicate the ypbind service has either not been installed,
or has been disabled at all runlevels, as shown in the example below:
$ systemctl is-enabled ypbind disabled

Run the following command to verify ypbind is not active (i.e. not running) through current runtime configuration:
$ systemctl is-active ypbind

If the service is not running the command will return the following output:
inactive

The service will also be masked, to check that the ypbind is masked, run the following command:
$ systemctl show ypbind | grep "LoadState\|UnitFileState"

If the service is masked the command will return the following outputs:

LoadState=masked

UnitFileState=masked
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="package_rsh-server_removed_question">
      <question_text>Run the following command to determine if the rsh-server package is installed:
$ rpm -q rsh-server
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_rsh_removed_question">
      <question_text>The rsh package can be removed with the following command:  $ sudo yum erase rsh
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="service_rexec_disabled_question">
      <question_text>
To check that the rexec service is disabled in system boot configuration with xinetd, run the following command:
$ chkconfig rexec --list
Output should indicate the rexec service has either not been installed, or has been disabled, as shown in the example below:
$ chkconfig rexec --list

Note: This output shows SysV services only and does not include native
systemd services. SysV configuration data might be overridden by native
systemd configuration.

If you want to list systemd services use 'systemctl list-unit-files'.
To see services enabled on particular target use
'systemctl list-dependencies [target]'.

rexec       off

To check that the rexec socket is disabled in system boot configuration with systemd, run the following command:
$ systemctl is-enabled rexec
Output should indicate the rexec socket has either not been installed,
or has been disabled at all runlevels, as shown in the example below:
$ systemctl is-enabled rexecdisabled

Run the following command to verify rexec is not active (i.e. not running) through current runtime configuration:
systemctl is-active rexec

If the socket is not running the command will return the following output:
inactive

The socket will also be masked, to check that the rexec is masked, run the following command:
$ systemctl show rexec | grep "LoadState\|UnitFileState"

If the socket is masked the command will return the following outputs:

LoadState=masked

UnitFileState=masked
      Is it the case that service and/or socket are running?
      </question_text>
    </boolean_question>
    <boolean_question id="service_rlogin_disabled_question">
      <question_text>
To check that the rlogin service is disabled in system boot configuration with xinetd, run the following command:
$ chkconfig rlogin --list
Output should indicate the rlogin service has either not been installed, or has been disabled, as shown in the example below:
$ chkconfig rlogin --list

Note: This output shows SysV services only and does not include native
systemd services. SysV configuration data might be overridden by native
systemd configuration.

If you want to list systemd services use 'systemctl list-unit-files'.
To see services enabled on particular target use
'systemctl list-dependencies [target]'.

rlogin       off

To check that the rlogin socket is disabled in system boot configuration with systemd, run the following command:
$ systemctl is-enabled rlogin
Output should indicate the rlogin socket has either not been installed,
or has been disabled at all runlevels, as shown in the example below:
$ systemctl is-enabled rlogindisabled

Run the following command to verify rlogin is not active (i.e. not running) through current runtime configuration:
systemctl is-active rlogin

If the socket is not running the command will return the following output:
inactive

The socket will also be masked, to check that the rlogin is masked, run the following command:
$ systemctl show rlogin | grep "LoadState\|UnitFileState"

If the socket is masked the command will return the following outputs:

LoadState=masked

UnitFileState=masked
      Is it the case that service and/or socket are running?
      </question_text>
    </boolean_question>
    <boolean_question id="service_rsh_disabled_question">
      <question_text>
To check that the rsh service is disabled in system boot configuration with xinetd, run the following command:
$ chkconfig rsh --list
Output should indicate the rsh service has either not been installed, or has been disabled, as shown in the example below:
$ chkconfig rsh --list

Note: This output shows SysV services only and does not include native
systemd services. SysV configuration data might be overridden by native
systemd configuration.

If you want to list systemd services use 'systemctl list-unit-files'.
To see services enabled on particular target use
'systemctl list-dependencies [target]'.

rsh       off

To check that the rsh socket is disabled in system boot configuration with systemd, run the following command:
$ systemctl is-enabled rsh
Output should indicate the rsh socket has either not been installed,
or has been disabled at all runlevels, as shown in the example below:
$ systemctl is-enabled rshdisabled

Run the following command to verify rsh is not active (i.e. not running) through current runtime configuration:
systemctl is-active rsh

If the socket is not running the command will return the following output:
inactive

The socket will also be masked, to check that the rsh is masked, run the following command:
$ systemctl show rsh | grep "LoadState\|UnitFileState"

If the socket is masked the command will return the following outputs:

LoadState=masked

UnitFileState=masked
      Is it the case that service and/or socket are running?
      </question_text>
    </boolean_question>
    <boolean_question id="no_host_based_files_question">
      <question_text>To verify that there are no shosts.equiv files
on the system, run the following command:
$ find / -name shosts.equiv
No output should be returned.
      Is it the case that these files exist?
      </question_text>
    </boolean_question>
    <boolean_question id="no_rsh_trust_files_question">
      <question_text>The existence of the file /etc/hosts.equiv or a file named
.rhosts inside a user home directory indicates the presence
of an Rsh trust relationship.
      Is it the case that these files exist?
      </question_text>
    </boolean_question>
    <boolean_question id="no_user_host_based_files_question">
      <question_text>To verify that there are no .shosts files
on the system, run the following command:
$ sudo find / -name '.shosts'
No output should be returned.
      Is it the case that these files exist?
      </question_text>
    </boolean_question>
    <boolean_question id="package_talk-server_removed_question">
      <question_text>Run the following command to determine if the talk-server package is installed:
$ rpm -q talk-server
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_talk_removed_question">
      <question_text>Run the following command to determine if the talk package is installed:
$ rpm -q talk
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_telnet-server_removed_question">
      <question_text>Run the following command to determine if the telnet-server package is installed:
$ rpm -q telnet-server
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_telnet_removed_question">
      <question_text>The telnet package can be removed with the following command:  $ sudo yum erase telnet
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="service_telnet_disabled_question">
      <question_text>
To check that the telnet service is disabled in system boot configuration with xinetd, run the following command:
$ chkconfig telnet --list
Output should indicate the telnet service has either not been installed, or has been disabled, as shown in the example below:
$ chkconfig telnet --list

Note: This output shows SysV services only and does not include native
systemd services. SysV configuration data might be overridden by native
systemd configuration.

If you want to list systemd services use 'systemctl list-unit-files'.
To see services enabled on particular target use
'systemctl list-dependencies [target]'.

telnet       off

To check that the telnet socket is disabled in system boot configuration with systemd, run the following command:
$ systemctl is-enabled telnet
Output should indicate the telnet socket has either not been installed,
or has been disabled at all runlevels, as shown in the example below:
$ systemctl is-enabled telnetdisabled

Run the following command to verify telnet is not active (i.e. not running) through current runtime configuration:
systemctl is-active telnet

If the socket is not running the command will return the following output:
inactive

The socket will also be masked, to check that the telnet is masked, run the following command:
$ systemctl show telnet | grep "LoadState\|UnitFileState"

If the socket is masked the command will return the following outputs:

LoadState=masked

UnitFileState=masked
      Is it the case that service and/or socket are running?
      </question_text>
    </boolean_question>
    <boolean_question id="package_tftp-server_removed_question">
      <question_text>Run the following command to determine if the tftp-server package is installed:
$ rpm -q tftp-server
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="tftpd_uses_secure_mode_question">
      <question_text>If TFTP is not installed, this is not applicable. To determine if TFTP is
installed, run the following command:
$ rpm -qa | grep tftp

Verify tftp is configured by with the -s option by
running the following command:
grep "server_args" /etc/xinetd.d/tftp
The output should indicate the server_args variable is configured
with the -s flag, matching the example below:
$ grep "server_args" /etc/xinetd.d/tftp
server_args = -s 
      Is it the case that this flag is missing?
      </question_text>
    </boolean_question>
    <boolean_question id="package_squid_removed_question">
      <question_text>Run the following command to determine if the squid package is installed:
$ rpm -q squid
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="service_squid_disabled_question">
      <question_text>
To check that the squid service is disabled in system boot configuration,
run the following command:
$ systemctl is-enabled squid
Output should indicate the squid service has either not been installed,
or has been disabled at all runlevels, as shown in the example below:
$ systemctl is-enabled squid disabled

Run the following command to verify squid is not active (i.e. not running) through current runtime configuration:
$ systemctl is-active squid

If the service is not running the command will return the following output:
inactive

The service will also be masked, to check that the squid is masked, run the following command:
$ systemctl show squid | grep "LoadState\|UnitFileState"

If the service is masked the command will return the following outputs:

LoadState=masked

UnitFileState=masked
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="package_freeradius_removed_question">
      <question_text>Run the following command to determine if the freeradius package is installed: $ rpm -q freeradius
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_quagga_removed_question">
      <question_text>Run the following command to determine if the quagga package is installed:
$ rpm -q quagga
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="service_zebra_disabled_question">
      <question_text>
To check that the zebra service is disabled in system boot configuration,
run the following command:
$ systemctl is-enabled zebra
Output should indicate the zebra service has either not been installed,
or has been disabled at all runlevels, as shown in the example below:
$ systemctl is-enabled zebra disabled

Run the following command to verify zebra is not active (i.e. not running) through current runtime configuration:
$ systemctl is-active zebra

If the service is not running the command will return the following output:
inactive

The service will also be masked, to check that the zebra is masked, run the following command:
$ systemctl show zebra | grep "LoadState\|UnitFileState"

If the service is masked the command will return the following outputs:

LoadState=masked

UnitFileState=masked
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="package_net-snmp_removed_question">
      <question_text>Run the following command to determine if the net-snmp package is installed:
$ rpm -q net-snmp
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="snmpd_not_default_password_question">
      <question_text>To ensure the default password is not set, run the following command:
$ sudo grep -v "^#" /etc/snmp/snmpd.conf| grep -E 'public|private'
There should be no output.
      Is it the case that the default SNMP passwords public and private have not been changed or removed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_openssh-server_installed_question">
      <question_text>Run the following command to determine if the openssh-server package is installed: $ rpm -q openssh-server
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_openssh-server_removed_question">
      <question_text>Run the following command to determine if the openssh-server package is installed: $ rpm -q openssh-server
      Is it the case that the package is installed?
      </question_text>
    </boolean_question>
    <boolean_question id="service_sshd_enabled_question">
      <question_text>

Run the following command to determine the current status of the
sshd service:
$ systemctl is-active sshd
If the service is running, it should return the following: active
      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="file_permissions_sshd_private_key_question">
      <question_text>To check the permissions of /etc/ssh/*_key,
run the command:
$ ls -l /etc/ssh/*_key
If properly configured, the output should indicate the following permissions:
-rw-r-----
      Is it the case that /etc/ssh/*_key has unix mode -rw-r-----?
      </question_text>
    </boolean_question>
    <boolean_question id="file_permissions_sshd_pub_key_question">
      <question_text>To check the permissions of /etc/ssh/*.pub,
run the command:
$ ls -l /etc/ssh/*.pub
If properly configured, the output should indicate the following permissions:
-rw-r--r--
      Is it the case that /etc/ssh/*.pub has unix mode -rw-r--r--?
      </question_text>
    </boolean_question>
    <boolean_question id="disable_host_auth_question">
      <question_text>To determine how the SSH daemon's HostbasedAuthentication option is set, run the following command:
$ sudo grep -i HostbasedAuthentication /etc/ssh/sshd_config
If no line, a commented line, or a line indicating the value no is returned, then the required value is set.

      Is it the case that the required value is not set?
      </question_text>
    </boolean_question>
    <boolean_question id="firewalld_sshd_port_enabled_question">
      <question_text>

To determine if firewalld is configured to allow access to ssh
on port 22/tcp, run the following command(s):

    firewall-cmd --list-ports


    firewall-cmd --list-services

If firewalld is configured to allow access through the firewall, something similar to the following will be output:

If it is a service:
ssh


If it is a port:
22/tcp

      Is it the case that ?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_allow_only_protocol2_question">
      <question_text>To check which SSH protocol version is allowed, check version of openssh-server with following command:

$ rpm -qi openssh-server | grep Version

Versions equal to or higher than 7.4 only allow Protocol 2.
If version is lower than 7.4, run the following command to check configuration:
$ sudo grep Protocol /etc/ssh/sshd_config
If configured properly, output should be Protocol 2
      Is it the case that it is commented out or is not set correctly to Protocol 2?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_disable_compression_question">
      <question_text>To check if compression is enabled or set correctly, run the
following command:
$ sudo grep Compression /etc/ssh/sshd_config
If configured properly, output should be no or delayed.
      Is it the case that it is commented out, or is not set to no or delayed?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_disable_empty_passwords_question">
      <question_text>To determine how the SSH daemon's PermitEmptyPasswords option is set, run the following command:
$ sudo grep -i PermitEmptyPasswords /etc/ssh/sshd_config
If no line, a commented line, or a line indicating the value no is returned, then the required value is set.

      Is it the case that the required value is not set?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_disable_gssapi_auth_question">
      <question_text>To check if GSSAPIAuthentication is disabled or set correctly, run the following
command:
$ sudo grep GSSAPIAuthentication /etc/ssh/sshd_config
If configured properly, output should be no
      Is it the case that it is commented out or is not disabled?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_disable_kerb_auth_question">
      <question_text>To check if KerberosAuthentication is disabled or set correctly, run the
following command:
$ sudo grep KerberosAuthentication /etc/ssh/sshd_config
If configured properly, output should be no
      Is it the case that it is commented out or is not disabled?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_disable_pubkey_auth_question">
      <question_text>To check if PubkeyAuthentication is disabled or set correctly, run the following
command:
$ sudo grep PubkeyAuthentication /etc/ssh/sshd_config
If configured properly, output should be no
      Is it the case that it is not disabled?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_disable_rhosts_question">
      <question_text>To determine how the SSH daemon's IgnoreRhosts option is set, run the following command:
$ sudo grep -i IgnoreRhosts /etc/ssh/sshd_config
If no line, a commented line, or a line indicating the value yes is returned, then the required value is set.

      Is it the case that the required value is not set?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_disable_rhosts_rsa_question">
      <question_text>To check which SSH protocol version is allowed, check version of
openssh-server with following command:
$ rpm -qi openssh-server | grep Version
Versions equal to or higher than 7.4 have deprecated the RhostsRSAAuthentication option.
If version is lower than 7.4, run the following command to check configuration:
To determine how the SSH daemon's RhostsRSAAuthentication option is set, run the following command:
$ sudo grep -i RhostsRSAAuthentication /etc/ssh/sshd_config
If no line, a commented line, or a line indicating the value no is returned, then the required value is set.

      Is it the case that the required value is not set?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_disable_root_login_question">
      <question_text>To determine how the SSH daemon's PermitRootLogin option is set, run the following command:
$ sudo grep -i PermitRootLogin /etc/ssh/sshd_config

If a line indicating no is returned, then the required value is set.

      Is it the case that the required value is not set?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_disable_root_password_login_question">
      <question_text>To determine how the SSH daemon's PermitRootLogin option is set, run the following command:
$ sudo grep -i PermitRootLogin /etc/ssh/sshd_config

If a line indicating prohibit-password is returned, then the required value is set.
      Is it the case that it is commented out or not configured properly?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_disable_tcp_forwarding_question">
      <question_text>To determine how the SSH daemon's AllowTcpForwarding option is set, run the following command:
$ sudo grep -i AllowTcpForwarding /etc/ssh/sshd_config
If no line, a commented line, or a line indicating the value no is returned, then the required value is set.
      Is it the case that The AllowTcpForwarding option exists and is disabled?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_disable_user_known_hosts_question">
      <question_text>To determine how the SSH daemon's IgnoreUserKnownHosts option is set, run the following command:
$ sudo grep -i IgnoreUserKnownHosts /etc/ssh/sshd_config

If a line indicating yes is returned, then the required value is set.

      Is it the case that the required value is not set?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_disable_x11_forwarding_question">
      <question_text>To determine how the SSH daemon's X11Forwarding option is set, run the following command:
$ sudo grep -i X11Forwarding /etc/ssh/sshd_config
If no line, a commented line, or a line indicating the value no is returned, then the required value is set.

      Is it the case that the required value is not set?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_do_not_permit_user_env_question">
      <question_text>To ensure users are not able to send environment variables, run the following command:
$ sudo grep PermitUserEnvironment /etc/ssh/sshd_config
If properly configured, output should be:
PermitUserEnvironment no
      Is it the case that PermitUserEnvironment is not disabled?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_enable_gssapi_auth_question">
      <question_text>To check if GSSAPIAuthentication is enabled or set correctly, run the following
command:
$ sudo grep GSSAPIAuthentication /etc/ssh/sshd_config
If configured properly, output should be yes
      Is it the case that it is commented out or is not enabled?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_enable_strictmodes_question">
      <question_text>To check if StrictModes is enabled or set correctly, run the
following command:
$ sudo grep StrictModes /etc/ssh/sshd_config
If configured properly, output should be yes
      Is it the case that it is commented out or is not enabled?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_enable_warning_banner_question">
      <question_text>To determine how the SSH daemon's Banner option is set, run the following command:
$ sudo grep -i Banner /etc/ssh/sshd_config

If a line indicating /etc/issue is returned, then the required value is set.

      Is it the case that the required value is not set?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_enable_x11_forwarding_question">
      <question_text>To determine how the SSH daemon's X11Forwarding option is set, run the following command:
$ sudo grep -i X11Forwarding /etc/ssh/sshd_config

If a line indicating yes is returned, then the required value is set.

      Is it the case that the required value is not set?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_limit_user_access_question">
      <question_text>To ensure sshd limits the users who can log in, run the following:
$ sudo grep AllowUsers /etc/ssh/sshd_config
If properly configured, the output should be a list of usernames allowed to log in
to this system.
      Is it the case that sshd does not limit the users who can log in?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_print_last_log_question">
      <question_text>To check if PrintLastLog is enabled or set correctly, run the
following command:
$ sudo grep PrintLastLog /etc/ssh/sshd_config
If configured properly, output should be yes
      Is it the case that it is commented out or is not enabled?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_rekey_limit_question">
      <question_text>To check if RekeyLimit is set correctly, run the
following command:
$ sudo grep RekeyLimit /etc/ssh/sshd_config
If configured properly, output should be
RekeyLimit  
      Is it the case that it is commented out or is not set?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_set_idle_timeout_question">
      <question_text>Run the following command to see what the timeout interval is:
$ sudo grep ClientAliveInterval /etc/ssh/sshd_config
If properly configured, the output should be:
ClientAliveInterval 
      Is it the case that it is commented out or not configured properly?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_set_keepalive_question">
      <question_text>To ensure ClientAliveInterval is set correctly, run the following command:
$ sudo grep ClientAliveCountMax /etc/ssh/sshd_config
If properly configured, the output should be:
ClientAliveCountMax 
For SSH earlier than v8.2, a ClientAliveCountMax value of 0 causes an idle timeout precisely when
the ClientAliveInterval is set.  Starting with v8.2, a value of 0 disables the timeout
functionality completely.
If the option is set to a number greater than 0, then the idle session will be disconnected after
ClientAliveInterval * ClientAliveCountMax seconds.
      Is it the case that it is commented out or not configured properly?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_set_keepalive_0_question">
      <question_text>To ensure ClientAliveInterval is set correctly, run the following command:
$ sudo grep ClientAliveCountMax /etc/ssh/sshd_config
If properly configured, the output should be:
ClientAliveCountMax 0

In this case, the SSH idle timeout occurs precisely when
the ClientAliveInterval is set.
      Is it the case that it is commented out or not configured properly?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_set_loglevel_info_question">
      <question_text>To check if LogLevel is enabled or set correctly, run the
following command:
$ sudo grep "^LogLevel" /etc/ssh/sshd_config
If configured properly, output should be LogLevel INFO
      Is it the case that it is commented out or is not enabled?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_set_loglevel_verbose_question">
      <question_text>To check if LogLevel is enabled or set correctly, run the
following command:
$ sudo grep "^LogLevel" /etc/ssh/sshd_config
If configured properly, output should be LogLevel VERBOSE
      Is it the case that it is commented out or is not enabled?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_set_max_auth_tries_question">
      <question_text>To ensure the MaxAuthTries parameter is set, run the following command:
$ sudo grep MaxAuthTries /etc/ssh/sshd_config
If properly configured, output should be:
MaxAuthTries 
      Is it the case that it is commented out or not configured properly?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_set_max_sessions_question">
      <question_text>Run the following command to see what the max sessions number is:
$ sudo grep MaxSessions /etc/ssh/sshd_config
If properly configured, the output should be:
MaxSessions 
      Is it the case that MaxSessions is not configured or not configured correctly?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_set_maxstartups_question">
      <question_text>To check if MaxStartups is configured, run the following command:
$ sudo grep MaxStartups /etc/ssh/sshd_config
If configured, this command should output the configuration.
      Is it the case that maxstartups is not configured?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_use_approved_ciphers_question">
      <question_text>Only FIPS ciphers should be used. To verify that only FIPS-approved
ciphers are in use, run the following command:
$ sudo grep Ciphers /etc/ssh/sshd_config
The output should contain only those ciphers which are FIPS-approved.
      Is it the case that FIPS ciphers are not configured or the enabled ciphers are not FIPS-approved?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_use_approved_ciphers_ordered_stig_question">
      <question_text>Only FIPS ciphers should be used. To verify that only FIPS-approved
ciphers are in use, run the following command:
$ sudo grep Ciphers /etc/ssh/sshd_config
The output should contain only following ciphers (or a subset) in the exact order:
aes256-ctr,aes192-ctr,aes128-ctr
      Is it the case that FIPS ciphers are not configured or the enabled ciphers are not FIPS-approved?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_use_approved_macs_question">
      <question_text>Only FIPS-approved MACs should be used. To verify that only FIPS-approved
MACs are in use, run the following command:
$ sudo grep -i macs /etc/ssh/sshd_config
The output should contain only those MACs which are FIPS-approved. Any use of other
ciphers or algorithms will result in the module entering the non-FIPS mode of
operation.
      Is it the case that MACs option is commented out or not using FIPS-approved hash algorithms?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_use_approved_macs_ordered_stig_question">
      <question_text>Only FIPS-approved MACs should be used. To verify that only FIPS-approved
MACs are in use, run the following command:
$ sudo grep -i macs /etc/ssh/sshd_config
The output should contain only following MACs (or a subset) in the exact order:
MACs 
      Is it the case that MACs option is commented out or not using FIPS-approved hash algorithms?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_use_priv_separation_question">
      <question_text>To check if UsePrivilegeSeparation is enabled or set correctly, run the
following command:
$ sudo grep UsePrivilegeSeparation /etc/ssh/sshd_config
If configured properly, output should be .
      Is it the case that it is commented out or is not enabled?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_use_strong_ciphers_question">
      <question_text>Only strong ciphers should be used. To verify that only strong
ciphers are in use, run the following command:
$ sudo grep Ciphers /etc/ssh/sshd_config
The output should contain only those ciphers which are considered strong, namely,
chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes128-ctr
      Is it the case that ciphers are not configured or not using strong ciphers?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_use_strong_macs_question">
      <question_text>Only strong MACs should be used. To verify that only strong
MACs are in use, run the following command:
$ sudo grep -i macs /etc/ssh/sshd_config
The output should contain only those MACs which are strong, namely,
hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,hmac-ripemd160 hash functions.
      Is it the case that MACs option is commented out or not using strong hash algorithms?
      </question_text>
    </boolean_question>
    <boolean_question id="sshd_x11_use_localhost_question">
      <question_text>To determine how the SSH daemon's X11UseLocalhost option is set, run the following command:
$ sudo grep -i X11UseLocalhost /etc/ssh/sshd_config
If no line, a commented line, or a line indicating the value yes is returned, then the required value is set.
      Is it the case that the display proxy is listening on wildcard address?
      </question_text>
    </boolean_question>
    <boolean_question id="package_sssd-ipa_installed_question">
      <question_text>Run the following command to determine if the sssd-ipa package is installed: $ rpm -q sssd-ipa
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_sssd_installed_question">
      <question_text>Run the following command to determine if the sssd package is installed: $ rpm -q sssd
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="service_sssd_enabled_question">
      <question_text>

Run the following command to determine the current status of the
sssd service:
$ systemctl is-active sssd
If the service is running, it should return the following: active
      Is it the case that the service is not enabled?
      </question_text>
    </boolean_question>
    <boolean_question id="sssd_enable_pam_services_question">
      <question_text>To verify that SSSD is configured for PAM services, run the following command:
$ sudo grep services /etc/sssd/sssd.conf
If configured properly, output should be similar to
services = pam
      Is it the case that it does not exist or 'pam' is not added to the 'services' option under the 'sssd' section?
      </question_text>
    </boolean_question>
    <boolean_question id="sssd_enable_smartcards_question">
      <question_text>To verify that smart cards are enabled in SSSD, run the following command:
$ sudo grep pam_cert_auth /etc/sssd/sssd.conf
If configured properly, output should be
pam_cert_auth = true
      Is it the case that smart cards are not enabled in SSSD?
      </question_text>
    </boolean_question>
    <boolean_question id="sssd_memcache_timeout_question">
      <question_text>To verify that SSSD's in-memory cache expires after a day, run the following command:
$ sudo grep memcache_timeout /etc/sssd/sssd.conf
If configured properly, output should be memcache_timeout = .
      Is it the case that it does not exist or is not configured properly?
      </question_text>
    </boolean_question>
    <boolean_question id="sssd_offline_cred_expiration_question">
      <question_text>To verify that SSSD expires offline credentials, run the following command:
$ sudo grep offline_credentials_expiration /etc/sssd/sssd.conf
If configured properly, output should be
offline_credentials_expiration = 1
      Is it the case that it does not exist or is not configured properly?
      </question_text>
    </boolean_question>
    <boolean_question id="sssd_ldap_configure_tls_ca_question">
      <question_text>To verify the operating system implements cryptography to protect the integrity of
remote ldap access sessions, run the following command:
$ sudo grep ldap_tls_cacert /etc/sssd/sssd.conf
The output should return the following with a correctly configured CA cert path:
ldap_tls_cacert /path/to/tls/ca.cert
      Is it the case that the TLS CA cert is not configured?
      </question_text>
    </boolean_question>
    <boolean_question id="sssd_ldap_configure_tls_ca_dir_question">
      <question_text>To verify the operating system implements cryptography to protect the integrity of
remote ldap access sessions, run the following command:
$ sudo grep ldap_tls_cacertdir /etc/sssd/sssd.conf
The output should return the following with a correctly configured CA cert path:
ldap_tls_cacertdir /path/to/tls/cacert
      Is it the case that the TLS CA cert is not configured?
      </question_text>
    </boolean_question>
    <boolean_question id="sssd_ldap_configure_tls_reqcert_question">
      <question_text>To verify the LDAP client backend demands a valid certificate from the server in
remote LDAP access sessions, run the following command:
$ sudo grep ldap_tls_reqcert /etc/sssd/sssd.conf
The output should return the following:
ldap_tls_reqcert = demand
      Is it the case that the TLS reqcert is not set to demand?
      </question_text>
    </boolean_question>
    <boolean_question id="sssd_ldap_start_tls_question">
      <question_text>If the system is not using TLS, set the ldap_id_use_start_tls option
in /etc/sssd/sssd.conf to true.
      Is it the case that the 'ldap_id_use_start_tls' option is not set to 'true'?
      </question_text>
    </boolean_question>
    <boolean_question id="package_usbguard_installed_question">
      <question_text>Run the following command to determine if the usbguard package is installed: $ rpm -q usbguard
      Is it the case that the package is not installed?
      </question_text>
    </boolean_question>
    <boolean_question id="package_xorg-x11-server-common_removed_question">
      <question_text>To ensure the X Windows package group is removed, run the following command:
$ rpm -qi xorg-x11-server-common
The output should be:
package xorg-x11-server-common is not installed
      Is it the case that the X Windows package group or xorg-x11-server-common has not be removed?
      </question_text>
    </boolean_question>
    <boolean_question id="xwindows_remove_packages_question">
      <question_text>To ensure the X Windows package group is removed, run the following command:

$ rpm -qi xorg-x11-server-Xorg xorg-x11-server-common xorg-x11-server-utils

For each package mentioned above you should receive following line:
package &lt;package&gt; is not installed
      Is it the case that xorg related packages are not removed and run level is not correctly configured?
      </question_text>
    </boolean_question>
    <boolean_question id="xwindows_runlevel_target_question">
      <question_text>To verify the default target is multi-user, run the following command:
$ systemctl get-default
The output should show the following:
multi-user.target
      Is it the case that the X windows display server is running and/or has not been disabled?
      </question_text>
    </boolean_question>
  </questions>
</ocil>
